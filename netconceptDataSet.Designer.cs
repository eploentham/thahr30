//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ThaHr30 {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("netconceptDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class netconceptDataSet : System.Data.DataSet {
        
        private _36049_company_avgDataTable table36049_company_avg;
        
        private _36049_evaluationDataTable table36049_evaluation;
        
        private _36049_evaluation_detailDataTable table36049_evaluation_detail;
        
        private _36049_generate_scoreDataTable table36049_generate_score;
        
        private _36049_group_avgDataTable table36049_group_avg;
        
        private _36049_menuauthorityDataTable table36049_menuauthority;
        
        private _36049_menuauthority_groupDataTable table36049_menuauthority_group;
        
        private _36049_menuauthority_group_detailDataTable table36049_menuauthority_group_detail;
        
        private _36049_scoreDataTable table36049_score;
        
        private _36049_score_detailDataTable table36049_score_detail;
        
        private _36049userDataTable table36049user;
        
        private competency_st_requireDataTable tablecompetency_st_require;
        
        private dtpropertiesDataTable tabledtproperties;
        
        private evaluationDataTable tableevaluation;
        
        private evaluation_detailDataTable tableevaluation_detail;
        
        private evaluation_indexDataTable tableevaluation_index;
        
        private kpiDataTable tablekpi;
        
        private masterdata_authorityDataTable tablemasterdata_authority;
        
        private masterdata_competency_coreDataTable tablemasterdata_competency_core;
        
        private masterdata_competency_stDataTable tablemasterdata_competency_st;
        
        private masterdata_competency_st_groupDataTable tablemasterdata_competency_st_group;
        
        private masterdata_competency_st_group_detailDataTable tablemasterdata_competency_st_group_detail;
        
        private masterdata_eva_relationDataTable tablemasterdata_eva_relation;
        
        private masterdata_menuauthorityDataTable tablemasterdata_menuauthority;
        
        private masterdata_menuauthority_groupDataTable tablemasterdata_menuauthority_group;
        
        private masterdata_menuauthority_group_detailDataTable tablemasterdata_menuauthority_group_detail;
        
        private masterdata_refDataTable tablemasterdata_ref;
        
        private staff_activityDataTable tablestaff_activity;
        
        private staff_activity_imageDataTable tablestaff_activity_image;
        
        private staff_activity_tempDataTable tablestaff_activity_temp;
        
        private staff_activity_videoDataTable tablestaff_activity_video;
        
        private staff_addressDataTable tablestaff_address;
        
        private staff_ailmentDataTable tablestaff_ailment;
        
        private staff_assessmentDataTable tablestaff_assessment;
        
        private staff_competency_coreDataTable tablestaff_competency_core;
        
        private staff_competency_structuralDataTable tablestaff_competency_structural;
        
        private staff_educationDataTable tablestaff_education;
        
        private staff_familyDataTable tablestaff_family;
        
        private staff_healhistoryDataTable tablestaff_healhistory;
        
        private staff_hipotDataTable tablestaff_hipot;
        
        private staff_indexDataTable tablestaff_index;
        
        private staff_infoDataTable tablestaff_info;
        
        private staff_nonworkingDataTable tablestaff_nonworking;
        
        private staff_ocDataTable tablestaff_oc;
        
        private staff_occupationDataTable tablestaff_occupation;
        
        private staff_occupation_historyDataTable tablestaff_occupation_history;
        
        private staff_status_controlDataTable tablestaff_status_control;
        
        private staff_successDataTable tablestaff_success;
        
        private staff_trainingDataTable tablestaff_training;
        
        private sys_companyDataTable tablesys_company;
        
        private sys_departmentDataTable tablesys_department;
        
        private sys_menuauthorityDataTable tablesys_menuauthority;
        
        private sys_positionDataTable tablesys_position;
        
        private temp_uname11DataTable tabletemp_uname11;
        
        private temp_uname12DataTable tabletemp_uname12;
        
        private tempTSHDataTable tabletempTSH;
        
        private System.Data.DataRelation relationFK_evaluation_staff_index;
        
        private System.Data.DataRelation relationFK_kpi_staff_index;
        
        private System.Data.DataRelation relationFK_staff_activity_staff_index;
        
        private System.Data.DataRelation relationFK_staff_activity_image_staff_activity;
        
        private System.Data.DataRelation relationFK_staff_address_staff_index;
        
        private System.Data.DataRelation relationFK_staff_ailment_staff_index1;
        
        private System.Data.DataRelation relationFK_staff_assessment_staff_index;
        
        private System.Data.DataRelation relationFK_staff_competency_core_staff_index;
        
        private System.Data.DataRelation relationFK_staff_competency_structural_staff_index;
        
        private System.Data.DataRelation relationFK_staff_education_staff_index;
        
        private System.Data.DataRelation relationFK_staff_family_staff_index;
        
        private System.Data.DataRelation relationFK_staff_healhistory_staff_index;
        
        private System.Data.DataRelation relationFK_staff_hipot_staff_index;
        
        private System.Data.DataRelation relationFK_staff_info_staff_index;
        
        private System.Data.DataRelation relationFK_staff_occupation_staff_index;
        
        private System.Data.DataRelation relationFK_staff_occupation_history_staff_index;
        
        private System.Data.DataRelation relationFK_staff_status_control_staff_index;
        
        private System.Data.DataRelation relationFK_staff_success_staff_index;
        
        private System.Data.DataRelation relationFK_staff_training_staff_index;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public netconceptDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected netconceptDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["36049_company_avg"] != null)) {
                    base.Tables.Add(new _36049_company_avgDataTable(ds.Tables["36049_company_avg"]));
                }
                if ((ds.Tables["36049_evaluation"] != null)) {
                    base.Tables.Add(new _36049_evaluationDataTable(ds.Tables["36049_evaluation"]));
                }
                if ((ds.Tables["36049_evaluation_detail"] != null)) {
                    base.Tables.Add(new _36049_evaluation_detailDataTable(ds.Tables["36049_evaluation_detail"]));
                }
                if ((ds.Tables["36049_generate_score"] != null)) {
                    base.Tables.Add(new _36049_generate_scoreDataTable(ds.Tables["36049_generate_score"]));
                }
                if ((ds.Tables["36049_group_avg"] != null)) {
                    base.Tables.Add(new _36049_group_avgDataTable(ds.Tables["36049_group_avg"]));
                }
                if ((ds.Tables["36049_menuauthority"] != null)) {
                    base.Tables.Add(new _36049_menuauthorityDataTable(ds.Tables["36049_menuauthority"]));
                }
                if ((ds.Tables["36049_menuauthority_group"] != null)) {
                    base.Tables.Add(new _36049_menuauthority_groupDataTable(ds.Tables["36049_menuauthority_group"]));
                }
                if ((ds.Tables["36049_menuauthority_group_detail"] != null)) {
                    base.Tables.Add(new _36049_menuauthority_group_detailDataTable(ds.Tables["36049_menuauthority_group_detail"]));
                }
                if ((ds.Tables["36049_score"] != null)) {
                    base.Tables.Add(new _36049_scoreDataTable(ds.Tables["36049_score"]));
                }
                if ((ds.Tables["36049_score_detail"] != null)) {
                    base.Tables.Add(new _36049_score_detailDataTable(ds.Tables["36049_score_detail"]));
                }
                if ((ds.Tables["36049user"] != null)) {
                    base.Tables.Add(new _36049userDataTable(ds.Tables["36049user"]));
                }
                if ((ds.Tables["competency_st_require"] != null)) {
                    base.Tables.Add(new competency_st_requireDataTable(ds.Tables["competency_st_require"]));
                }
                if ((ds.Tables["dtproperties"] != null)) {
                    base.Tables.Add(new dtpropertiesDataTable(ds.Tables["dtproperties"]));
                }
                if ((ds.Tables["evaluation"] != null)) {
                    base.Tables.Add(new evaluationDataTable(ds.Tables["evaluation"]));
                }
                if ((ds.Tables["evaluation_detail"] != null)) {
                    base.Tables.Add(new evaluation_detailDataTable(ds.Tables["evaluation_detail"]));
                }
                if ((ds.Tables["evaluation_index"] != null)) {
                    base.Tables.Add(new evaluation_indexDataTable(ds.Tables["evaluation_index"]));
                }
                if ((ds.Tables["kpi"] != null)) {
                    base.Tables.Add(new kpiDataTable(ds.Tables["kpi"]));
                }
                if ((ds.Tables["masterdata_authority"] != null)) {
                    base.Tables.Add(new masterdata_authorityDataTable(ds.Tables["masterdata_authority"]));
                }
                if ((ds.Tables["masterdata_competency_core"] != null)) {
                    base.Tables.Add(new masterdata_competency_coreDataTable(ds.Tables["masterdata_competency_core"]));
                }
                if ((ds.Tables["masterdata_competency_st"] != null)) {
                    base.Tables.Add(new masterdata_competency_stDataTable(ds.Tables["masterdata_competency_st"]));
                }
                if ((ds.Tables["masterdata_competency_st_group"] != null)) {
                    base.Tables.Add(new masterdata_competency_st_groupDataTable(ds.Tables["masterdata_competency_st_group"]));
                }
                if ((ds.Tables["masterdata_competency_st_group_detail"] != null)) {
                    base.Tables.Add(new masterdata_competency_st_group_detailDataTable(ds.Tables["masterdata_competency_st_group_detail"]));
                }
                if ((ds.Tables["masterdata_eva_relation"] != null)) {
                    base.Tables.Add(new masterdata_eva_relationDataTable(ds.Tables["masterdata_eva_relation"]));
                }
                if ((ds.Tables["masterdata_menuauthority"] != null)) {
                    base.Tables.Add(new masterdata_menuauthorityDataTable(ds.Tables["masterdata_menuauthority"]));
                }
                if ((ds.Tables["masterdata_menuauthority_group"] != null)) {
                    base.Tables.Add(new masterdata_menuauthority_groupDataTable(ds.Tables["masterdata_menuauthority_group"]));
                }
                if ((ds.Tables["masterdata_menuauthority_group_detail"] != null)) {
                    base.Tables.Add(new masterdata_menuauthority_group_detailDataTable(ds.Tables["masterdata_menuauthority_group_detail"]));
                }
                if ((ds.Tables["masterdata_ref"] != null)) {
                    base.Tables.Add(new masterdata_refDataTable(ds.Tables["masterdata_ref"]));
                }
                if ((ds.Tables["staff_activity"] != null)) {
                    base.Tables.Add(new staff_activityDataTable(ds.Tables["staff_activity"]));
                }
                if ((ds.Tables["staff_activity_image"] != null)) {
                    base.Tables.Add(new staff_activity_imageDataTable(ds.Tables["staff_activity_image"]));
                }
                if ((ds.Tables["staff_activity_temp"] != null)) {
                    base.Tables.Add(new staff_activity_tempDataTable(ds.Tables["staff_activity_temp"]));
                }
                if ((ds.Tables["staff_activity_video"] != null)) {
                    base.Tables.Add(new staff_activity_videoDataTable(ds.Tables["staff_activity_video"]));
                }
                if ((ds.Tables["staff_address"] != null)) {
                    base.Tables.Add(new staff_addressDataTable(ds.Tables["staff_address"]));
                }
                if ((ds.Tables["staff_ailment"] != null)) {
                    base.Tables.Add(new staff_ailmentDataTable(ds.Tables["staff_ailment"]));
                }
                if ((ds.Tables["staff_assessment"] != null)) {
                    base.Tables.Add(new staff_assessmentDataTable(ds.Tables["staff_assessment"]));
                }
                if ((ds.Tables["staff_competency_core"] != null)) {
                    base.Tables.Add(new staff_competency_coreDataTable(ds.Tables["staff_competency_core"]));
                }
                if ((ds.Tables["staff_competency_structural"] != null)) {
                    base.Tables.Add(new staff_competency_structuralDataTable(ds.Tables["staff_competency_structural"]));
                }
                if ((ds.Tables["staff_education"] != null)) {
                    base.Tables.Add(new staff_educationDataTable(ds.Tables["staff_education"]));
                }
                if ((ds.Tables["staff_family"] != null)) {
                    base.Tables.Add(new staff_familyDataTable(ds.Tables["staff_family"]));
                }
                if ((ds.Tables["staff_healhistory"] != null)) {
                    base.Tables.Add(new staff_healhistoryDataTable(ds.Tables["staff_healhistory"]));
                }
                if ((ds.Tables["staff_hipot"] != null)) {
                    base.Tables.Add(new staff_hipotDataTable(ds.Tables["staff_hipot"]));
                }
                if ((ds.Tables["staff_index"] != null)) {
                    base.Tables.Add(new staff_indexDataTable(ds.Tables["staff_index"]));
                }
                if ((ds.Tables["staff_info"] != null)) {
                    base.Tables.Add(new staff_infoDataTable(ds.Tables["staff_info"]));
                }
                if ((ds.Tables["staff_nonworking"] != null)) {
                    base.Tables.Add(new staff_nonworkingDataTable(ds.Tables["staff_nonworking"]));
                }
                if ((ds.Tables["staff_oc"] != null)) {
                    base.Tables.Add(new staff_ocDataTable(ds.Tables["staff_oc"]));
                }
                if ((ds.Tables["staff_occupation"] != null)) {
                    base.Tables.Add(new staff_occupationDataTable(ds.Tables["staff_occupation"]));
                }
                if ((ds.Tables["staff_occupation_history"] != null)) {
                    base.Tables.Add(new staff_occupation_historyDataTable(ds.Tables["staff_occupation_history"]));
                }
                if ((ds.Tables["staff_status_control"] != null)) {
                    base.Tables.Add(new staff_status_controlDataTable(ds.Tables["staff_status_control"]));
                }
                if ((ds.Tables["staff_success"] != null)) {
                    base.Tables.Add(new staff_successDataTable(ds.Tables["staff_success"]));
                }
                if ((ds.Tables["staff_training"] != null)) {
                    base.Tables.Add(new staff_trainingDataTable(ds.Tables["staff_training"]));
                }
                if ((ds.Tables["sys_company"] != null)) {
                    base.Tables.Add(new sys_companyDataTable(ds.Tables["sys_company"]));
                }
                if ((ds.Tables["sys_department"] != null)) {
                    base.Tables.Add(new sys_departmentDataTable(ds.Tables["sys_department"]));
                }
                if ((ds.Tables["sys_menuauthority"] != null)) {
                    base.Tables.Add(new sys_menuauthorityDataTable(ds.Tables["sys_menuauthority"]));
                }
                if ((ds.Tables["sys_position"] != null)) {
                    base.Tables.Add(new sys_positionDataTable(ds.Tables["sys_position"]));
                }
                if ((ds.Tables["temp_uname11"] != null)) {
                    base.Tables.Add(new temp_uname11DataTable(ds.Tables["temp_uname11"]));
                }
                if ((ds.Tables["temp_uname12"] != null)) {
                    base.Tables.Add(new temp_uname12DataTable(ds.Tables["temp_uname12"]));
                }
                if ((ds.Tables["tempTSH"] != null)) {
                    base.Tables.Add(new tempTSHDataTable(ds.Tables["tempTSH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_company_avgDataTable _36049_company_avg {
            get {
                return this.table36049_company_avg;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_evaluationDataTable _36049_evaluation {
            get {
                return this.table36049_evaluation;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_evaluation_detailDataTable _36049_evaluation_detail {
            get {
                return this.table36049_evaluation_detail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_generate_scoreDataTable _36049_generate_score {
            get {
                return this.table36049_generate_score;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_group_avgDataTable _36049_group_avg {
            get {
                return this.table36049_group_avg;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_menuauthorityDataTable _36049_menuauthority {
            get {
                return this.table36049_menuauthority;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_menuauthority_groupDataTable _36049_menuauthority_group {
            get {
                return this.table36049_menuauthority_group;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_menuauthority_group_detailDataTable _36049_menuauthority_group_detail {
            get {
                return this.table36049_menuauthority_group_detail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_scoreDataTable _36049_score {
            get {
                return this.table36049_score;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049_score_detailDataTable _36049_score_detail {
            get {
                return this.table36049_score_detail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _36049userDataTable _36049user {
            get {
                return this.table36049user;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public competency_st_requireDataTable competency_st_require {
            get {
                return this.tablecompetency_st_require;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtpropertiesDataTable dtproperties {
            get {
                return this.tabledtproperties;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public evaluationDataTable evaluation {
            get {
                return this.tableevaluation;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public evaluation_detailDataTable evaluation_detail {
            get {
                return this.tableevaluation_detail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public evaluation_indexDataTable evaluation_index {
            get {
                return this.tableevaluation_index;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public kpiDataTable kpi {
            get {
                return this.tablekpi;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_authorityDataTable masterdata_authority {
            get {
                return this.tablemasterdata_authority;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_competency_coreDataTable masterdata_competency_core {
            get {
                return this.tablemasterdata_competency_core;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_competency_stDataTable masterdata_competency_st {
            get {
                return this.tablemasterdata_competency_st;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_competency_st_groupDataTable masterdata_competency_st_group {
            get {
                return this.tablemasterdata_competency_st_group;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_competency_st_group_detailDataTable masterdata_competency_st_group_detail {
            get {
                return this.tablemasterdata_competency_st_group_detail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_eva_relationDataTable masterdata_eva_relation {
            get {
                return this.tablemasterdata_eva_relation;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_menuauthorityDataTable masterdata_menuauthority {
            get {
                return this.tablemasterdata_menuauthority;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_menuauthority_groupDataTable masterdata_menuauthority_group {
            get {
                return this.tablemasterdata_menuauthority_group;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_menuauthority_group_detailDataTable masterdata_menuauthority_group_detail {
            get {
                return this.tablemasterdata_menuauthority_group_detail;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public masterdata_refDataTable masterdata_ref {
            get {
                return this.tablemasterdata_ref;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_activityDataTable staff_activity {
            get {
                return this.tablestaff_activity;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_activity_imageDataTable staff_activity_image {
            get {
                return this.tablestaff_activity_image;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_activity_tempDataTable staff_activity_temp {
            get {
                return this.tablestaff_activity_temp;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_activity_videoDataTable staff_activity_video {
            get {
                return this.tablestaff_activity_video;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_addressDataTable staff_address {
            get {
                return this.tablestaff_address;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_ailmentDataTable staff_ailment {
            get {
                return this.tablestaff_ailment;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_assessmentDataTable staff_assessment {
            get {
                return this.tablestaff_assessment;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_competency_coreDataTable staff_competency_core {
            get {
                return this.tablestaff_competency_core;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_competency_structuralDataTable staff_competency_structural {
            get {
                return this.tablestaff_competency_structural;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_educationDataTable staff_education {
            get {
                return this.tablestaff_education;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_familyDataTable staff_family {
            get {
                return this.tablestaff_family;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_healhistoryDataTable staff_healhistory {
            get {
                return this.tablestaff_healhistory;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_hipotDataTable staff_hipot {
            get {
                return this.tablestaff_hipot;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_indexDataTable staff_index {
            get {
                return this.tablestaff_index;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_infoDataTable staff_info {
            get {
                return this.tablestaff_info;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_nonworkingDataTable staff_nonworking {
            get {
                return this.tablestaff_nonworking;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_ocDataTable staff_oc {
            get {
                return this.tablestaff_oc;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_occupationDataTable staff_occupation {
            get {
                return this.tablestaff_occupation;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_occupation_historyDataTable staff_occupation_history {
            get {
                return this.tablestaff_occupation_history;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_status_controlDataTable staff_status_control {
            get {
                return this.tablestaff_status_control;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_successDataTable staff_success {
            get {
                return this.tablestaff_success;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public staff_trainingDataTable staff_training {
            get {
                return this.tablestaff_training;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sys_companyDataTable sys_company {
            get {
                return this.tablesys_company;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sys_departmentDataTable sys_department {
            get {
                return this.tablesys_department;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sys_menuauthorityDataTable sys_menuauthority {
            get {
                return this.tablesys_menuauthority;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sys_positionDataTable sys_position {
            get {
                return this.tablesys_position;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public temp_uname11DataTable temp_uname11 {
            get {
                return this.tabletemp_uname11;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public temp_uname12DataTable temp_uname12 {
            get {
                return this.tabletemp_uname12;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tempTSHDataTable tempTSH {
            get {
                return this.tabletempTSH;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            netconceptDataSet cln = ((netconceptDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["36049_company_avg"] != null)) {
                    base.Tables.Add(new _36049_company_avgDataTable(ds.Tables["36049_company_avg"]));
                }
                if ((ds.Tables["36049_evaluation"] != null)) {
                    base.Tables.Add(new _36049_evaluationDataTable(ds.Tables["36049_evaluation"]));
                }
                if ((ds.Tables["36049_evaluation_detail"] != null)) {
                    base.Tables.Add(new _36049_evaluation_detailDataTable(ds.Tables["36049_evaluation_detail"]));
                }
                if ((ds.Tables["36049_generate_score"] != null)) {
                    base.Tables.Add(new _36049_generate_scoreDataTable(ds.Tables["36049_generate_score"]));
                }
                if ((ds.Tables["36049_group_avg"] != null)) {
                    base.Tables.Add(new _36049_group_avgDataTable(ds.Tables["36049_group_avg"]));
                }
                if ((ds.Tables["36049_menuauthority"] != null)) {
                    base.Tables.Add(new _36049_menuauthorityDataTable(ds.Tables["36049_menuauthority"]));
                }
                if ((ds.Tables["36049_menuauthority_group"] != null)) {
                    base.Tables.Add(new _36049_menuauthority_groupDataTable(ds.Tables["36049_menuauthority_group"]));
                }
                if ((ds.Tables["36049_menuauthority_group_detail"] != null)) {
                    base.Tables.Add(new _36049_menuauthority_group_detailDataTable(ds.Tables["36049_menuauthority_group_detail"]));
                }
                if ((ds.Tables["36049_score"] != null)) {
                    base.Tables.Add(new _36049_scoreDataTable(ds.Tables["36049_score"]));
                }
                if ((ds.Tables["36049_score_detail"] != null)) {
                    base.Tables.Add(new _36049_score_detailDataTable(ds.Tables["36049_score_detail"]));
                }
                if ((ds.Tables["36049user"] != null)) {
                    base.Tables.Add(new _36049userDataTable(ds.Tables["36049user"]));
                }
                if ((ds.Tables["competency_st_require"] != null)) {
                    base.Tables.Add(new competency_st_requireDataTable(ds.Tables["competency_st_require"]));
                }
                if ((ds.Tables["dtproperties"] != null)) {
                    base.Tables.Add(new dtpropertiesDataTable(ds.Tables["dtproperties"]));
                }
                if ((ds.Tables["evaluation"] != null)) {
                    base.Tables.Add(new evaluationDataTable(ds.Tables["evaluation"]));
                }
                if ((ds.Tables["evaluation_detail"] != null)) {
                    base.Tables.Add(new evaluation_detailDataTable(ds.Tables["evaluation_detail"]));
                }
                if ((ds.Tables["evaluation_index"] != null)) {
                    base.Tables.Add(new evaluation_indexDataTable(ds.Tables["evaluation_index"]));
                }
                if ((ds.Tables["kpi"] != null)) {
                    base.Tables.Add(new kpiDataTable(ds.Tables["kpi"]));
                }
                if ((ds.Tables["masterdata_authority"] != null)) {
                    base.Tables.Add(new masterdata_authorityDataTable(ds.Tables["masterdata_authority"]));
                }
                if ((ds.Tables["masterdata_competency_core"] != null)) {
                    base.Tables.Add(new masterdata_competency_coreDataTable(ds.Tables["masterdata_competency_core"]));
                }
                if ((ds.Tables["masterdata_competency_st"] != null)) {
                    base.Tables.Add(new masterdata_competency_stDataTable(ds.Tables["masterdata_competency_st"]));
                }
                if ((ds.Tables["masterdata_competency_st_group"] != null)) {
                    base.Tables.Add(new masterdata_competency_st_groupDataTable(ds.Tables["masterdata_competency_st_group"]));
                }
                if ((ds.Tables["masterdata_competency_st_group_detail"] != null)) {
                    base.Tables.Add(new masterdata_competency_st_group_detailDataTable(ds.Tables["masterdata_competency_st_group_detail"]));
                }
                if ((ds.Tables["masterdata_eva_relation"] != null)) {
                    base.Tables.Add(new masterdata_eva_relationDataTable(ds.Tables["masterdata_eva_relation"]));
                }
                if ((ds.Tables["masterdata_menuauthority"] != null)) {
                    base.Tables.Add(new masterdata_menuauthorityDataTable(ds.Tables["masterdata_menuauthority"]));
                }
                if ((ds.Tables["masterdata_menuauthority_group"] != null)) {
                    base.Tables.Add(new masterdata_menuauthority_groupDataTable(ds.Tables["masterdata_menuauthority_group"]));
                }
                if ((ds.Tables["masterdata_menuauthority_group_detail"] != null)) {
                    base.Tables.Add(new masterdata_menuauthority_group_detailDataTable(ds.Tables["masterdata_menuauthority_group_detail"]));
                }
                if ((ds.Tables["masterdata_ref"] != null)) {
                    base.Tables.Add(new masterdata_refDataTable(ds.Tables["masterdata_ref"]));
                }
                if ((ds.Tables["staff_activity"] != null)) {
                    base.Tables.Add(new staff_activityDataTable(ds.Tables["staff_activity"]));
                }
                if ((ds.Tables["staff_activity_image"] != null)) {
                    base.Tables.Add(new staff_activity_imageDataTable(ds.Tables["staff_activity_image"]));
                }
                if ((ds.Tables["staff_activity_temp"] != null)) {
                    base.Tables.Add(new staff_activity_tempDataTable(ds.Tables["staff_activity_temp"]));
                }
                if ((ds.Tables["staff_activity_video"] != null)) {
                    base.Tables.Add(new staff_activity_videoDataTable(ds.Tables["staff_activity_video"]));
                }
                if ((ds.Tables["staff_address"] != null)) {
                    base.Tables.Add(new staff_addressDataTable(ds.Tables["staff_address"]));
                }
                if ((ds.Tables["staff_ailment"] != null)) {
                    base.Tables.Add(new staff_ailmentDataTable(ds.Tables["staff_ailment"]));
                }
                if ((ds.Tables["staff_assessment"] != null)) {
                    base.Tables.Add(new staff_assessmentDataTable(ds.Tables["staff_assessment"]));
                }
                if ((ds.Tables["staff_competency_core"] != null)) {
                    base.Tables.Add(new staff_competency_coreDataTable(ds.Tables["staff_competency_core"]));
                }
                if ((ds.Tables["staff_competency_structural"] != null)) {
                    base.Tables.Add(new staff_competency_structuralDataTable(ds.Tables["staff_competency_structural"]));
                }
                if ((ds.Tables["staff_education"] != null)) {
                    base.Tables.Add(new staff_educationDataTable(ds.Tables["staff_education"]));
                }
                if ((ds.Tables["staff_family"] != null)) {
                    base.Tables.Add(new staff_familyDataTable(ds.Tables["staff_family"]));
                }
                if ((ds.Tables["staff_healhistory"] != null)) {
                    base.Tables.Add(new staff_healhistoryDataTable(ds.Tables["staff_healhistory"]));
                }
                if ((ds.Tables["staff_hipot"] != null)) {
                    base.Tables.Add(new staff_hipotDataTable(ds.Tables["staff_hipot"]));
                }
                if ((ds.Tables["staff_index"] != null)) {
                    base.Tables.Add(new staff_indexDataTable(ds.Tables["staff_index"]));
                }
                if ((ds.Tables["staff_info"] != null)) {
                    base.Tables.Add(new staff_infoDataTable(ds.Tables["staff_info"]));
                }
                if ((ds.Tables["staff_nonworking"] != null)) {
                    base.Tables.Add(new staff_nonworkingDataTable(ds.Tables["staff_nonworking"]));
                }
                if ((ds.Tables["staff_oc"] != null)) {
                    base.Tables.Add(new staff_ocDataTable(ds.Tables["staff_oc"]));
                }
                if ((ds.Tables["staff_occupation"] != null)) {
                    base.Tables.Add(new staff_occupationDataTable(ds.Tables["staff_occupation"]));
                }
                if ((ds.Tables["staff_occupation_history"] != null)) {
                    base.Tables.Add(new staff_occupation_historyDataTable(ds.Tables["staff_occupation_history"]));
                }
                if ((ds.Tables["staff_status_control"] != null)) {
                    base.Tables.Add(new staff_status_controlDataTable(ds.Tables["staff_status_control"]));
                }
                if ((ds.Tables["staff_success"] != null)) {
                    base.Tables.Add(new staff_successDataTable(ds.Tables["staff_success"]));
                }
                if ((ds.Tables["staff_training"] != null)) {
                    base.Tables.Add(new staff_trainingDataTable(ds.Tables["staff_training"]));
                }
                if ((ds.Tables["sys_company"] != null)) {
                    base.Tables.Add(new sys_companyDataTable(ds.Tables["sys_company"]));
                }
                if ((ds.Tables["sys_department"] != null)) {
                    base.Tables.Add(new sys_departmentDataTable(ds.Tables["sys_department"]));
                }
                if ((ds.Tables["sys_menuauthority"] != null)) {
                    base.Tables.Add(new sys_menuauthorityDataTable(ds.Tables["sys_menuauthority"]));
                }
                if ((ds.Tables["sys_position"] != null)) {
                    base.Tables.Add(new sys_positionDataTable(ds.Tables["sys_position"]));
                }
                if ((ds.Tables["temp_uname11"] != null)) {
                    base.Tables.Add(new temp_uname11DataTable(ds.Tables["temp_uname11"]));
                }
                if ((ds.Tables["temp_uname12"] != null)) {
                    base.Tables.Add(new temp_uname12DataTable(ds.Tables["temp_uname12"]));
                }
                if ((ds.Tables["tempTSH"] != null)) {
                    base.Tables.Add(new tempTSHDataTable(ds.Tables["tempTSH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table36049_company_avg = ((_36049_company_avgDataTable)(base.Tables["36049_company_avg"]));
            if ((initTable == true)) {
                if ((this.table36049_company_avg != null)) {
                    this.table36049_company_avg.InitVars();
                }
            }
            this.table36049_evaluation = ((_36049_evaluationDataTable)(base.Tables["36049_evaluation"]));
            if ((initTable == true)) {
                if ((this.table36049_evaluation != null)) {
                    this.table36049_evaluation.InitVars();
                }
            }
            this.table36049_evaluation_detail = ((_36049_evaluation_detailDataTable)(base.Tables["36049_evaluation_detail"]));
            if ((initTable == true)) {
                if ((this.table36049_evaluation_detail != null)) {
                    this.table36049_evaluation_detail.InitVars();
                }
            }
            this.table36049_generate_score = ((_36049_generate_scoreDataTable)(base.Tables["36049_generate_score"]));
            if ((initTable == true)) {
                if ((this.table36049_generate_score != null)) {
                    this.table36049_generate_score.InitVars();
                }
            }
            this.table36049_group_avg = ((_36049_group_avgDataTable)(base.Tables["36049_group_avg"]));
            if ((initTable == true)) {
                if ((this.table36049_group_avg != null)) {
                    this.table36049_group_avg.InitVars();
                }
            }
            this.table36049_menuauthority = ((_36049_menuauthorityDataTable)(base.Tables["36049_menuauthority"]));
            if ((initTable == true)) {
                if ((this.table36049_menuauthority != null)) {
                    this.table36049_menuauthority.InitVars();
                }
            }
            this.table36049_menuauthority_group = ((_36049_menuauthority_groupDataTable)(base.Tables["36049_menuauthority_group"]));
            if ((initTable == true)) {
                if ((this.table36049_menuauthority_group != null)) {
                    this.table36049_menuauthority_group.InitVars();
                }
            }
            this.table36049_menuauthority_group_detail = ((_36049_menuauthority_group_detailDataTable)(base.Tables["36049_menuauthority_group_detail"]));
            if ((initTable == true)) {
                if ((this.table36049_menuauthority_group_detail != null)) {
                    this.table36049_menuauthority_group_detail.InitVars();
                }
            }
            this.table36049_score = ((_36049_scoreDataTable)(base.Tables["36049_score"]));
            if ((initTable == true)) {
                if ((this.table36049_score != null)) {
                    this.table36049_score.InitVars();
                }
            }
            this.table36049_score_detail = ((_36049_score_detailDataTable)(base.Tables["36049_score_detail"]));
            if ((initTable == true)) {
                if ((this.table36049_score_detail != null)) {
                    this.table36049_score_detail.InitVars();
                }
            }
            this.table36049user = ((_36049userDataTable)(base.Tables["36049user"]));
            if ((initTable == true)) {
                if ((this.table36049user != null)) {
                    this.table36049user.InitVars();
                }
            }
            this.tablecompetency_st_require = ((competency_st_requireDataTable)(base.Tables["competency_st_require"]));
            if ((initTable == true)) {
                if ((this.tablecompetency_st_require != null)) {
                    this.tablecompetency_st_require.InitVars();
                }
            }
            this.tabledtproperties = ((dtpropertiesDataTable)(base.Tables["dtproperties"]));
            if ((initTable == true)) {
                if ((this.tabledtproperties != null)) {
                    this.tabledtproperties.InitVars();
                }
            }
            this.tableevaluation = ((evaluationDataTable)(base.Tables["evaluation"]));
            if ((initTable == true)) {
                if ((this.tableevaluation != null)) {
                    this.tableevaluation.InitVars();
                }
            }
            this.tableevaluation_detail = ((evaluation_detailDataTable)(base.Tables["evaluation_detail"]));
            if ((initTable == true)) {
                if ((this.tableevaluation_detail != null)) {
                    this.tableevaluation_detail.InitVars();
                }
            }
            this.tableevaluation_index = ((evaluation_indexDataTable)(base.Tables["evaluation_index"]));
            if ((initTable == true)) {
                if ((this.tableevaluation_index != null)) {
                    this.tableevaluation_index.InitVars();
                }
            }
            this.tablekpi = ((kpiDataTable)(base.Tables["kpi"]));
            if ((initTable == true)) {
                if ((this.tablekpi != null)) {
                    this.tablekpi.InitVars();
                }
            }
            this.tablemasterdata_authority = ((masterdata_authorityDataTable)(base.Tables["masterdata_authority"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_authority != null)) {
                    this.tablemasterdata_authority.InitVars();
                }
            }
            this.tablemasterdata_competency_core = ((masterdata_competency_coreDataTable)(base.Tables["masterdata_competency_core"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_competency_core != null)) {
                    this.tablemasterdata_competency_core.InitVars();
                }
            }
            this.tablemasterdata_competency_st = ((masterdata_competency_stDataTable)(base.Tables["masterdata_competency_st"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_competency_st != null)) {
                    this.tablemasterdata_competency_st.InitVars();
                }
            }
            this.tablemasterdata_competency_st_group = ((masterdata_competency_st_groupDataTable)(base.Tables["masterdata_competency_st_group"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_competency_st_group != null)) {
                    this.tablemasterdata_competency_st_group.InitVars();
                }
            }
            this.tablemasterdata_competency_st_group_detail = ((masterdata_competency_st_group_detailDataTable)(base.Tables["masterdata_competency_st_group_detail"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_competency_st_group_detail != null)) {
                    this.tablemasterdata_competency_st_group_detail.InitVars();
                }
            }
            this.tablemasterdata_eva_relation = ((masterdata_eva_relationDataTable)(base.Tables["masterdata_eva_relation"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_eva_relation != null)) {
                    this.tablemasterdata_eva_relation.InitVars();
                }
            }
            this.tablemasterdata_menuauthority = ((masterdata_menuauthorityDataTable)(base.Tables["masterdata_menuauthority"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_menuauthority != null)) {
                    this.tablemasterdata_menuauthority.InitVars();
                }
            }
            this.tablemasterdata_menuauthority_group = ((masterdata_menuauthority_groupDataTable)(base.Tables["masterdata_menuauthority_group"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_menuauthority_group != null)) {
                    this.tablemasterdata_menuauthority_group.InitVars();
                }
            }
            this.tablemasterdata_menuauthority_group_detail = ((masterdata_menuauthority_group_detailDataTable)(base.Tables["masterdata_menuauthority_group_detail"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_menuauthority_group_detail != null)) {
                    this.tablemasterdata_menuauthority_group_detail.InitVars();
                }
            }
            this.tablemasterdata_ref = ((masterdata_refDataTable)(base.Tables["masterdata_ref"]));
            if ((initTable == true)) {
                if ((this.tablemasterdata_ref != null)) {
                    this.tablemasterdata_ref.InitVars();
                }
            }
            this.tablestaff_activity = ((staff_activityDataTable)(base.Tables["staff_activity"]));
            if ((initTable == true)) {
                if ((this.tablestaff_activity != null)) {
                    this.tablestaff_activity.InitVars();
                }
            }
            this.tablestaff_activity_image = ((staff_activity_imageDataTable)(base.Tables["staff_activity_image"]));
            if ((initTable == true)) {
                if ((this.tablestaff_activity_image != null)) {
                    this.tablestaff_activity_image.InitVars();
                }
            }
            this.tablestaff_activity_temp = ((staff_activity_tempDataTable)(base.Tables["staff_activity_temp"]));
            if ((initTable == true)) {
                if ((this.tablestaff_activity_temp != null)) {
                    this.tablestaff_activity_temp.InitVars();
                }
            }
            this.tablestaff_activity_video = ((staff_activity_videoDataTable)(base.Tables["staff_activity_video"]));
            if ((initTable == true)) {
                if ((this.tablestaff_activity_video != null)) {
                    this.tablestaff_activity_video.InitVars();
                }
            }
            this.tablestaff_address = ((staff_addressDataTable)(base.Tables["staff_address"]));
            if ((initTable == true)) {
                if ((this.tablestaff_address != null)) {
                    this.tablestaff_address.InitVars();
                }
            }
            this.tablestaff_ailment = ((staff_ailmentDataTable)(base.Tables["staff_ailment"]));
            if ((initTable == true)) {
                if ((this.tablestaff_ailment != null)) {
                    this.tablestaff_ailment.InitVars();
                }
            }
            this.tablestaff_assessment = ((staff_assessmentDataTable)(base.Tables["staff_assessment"]));
            if ((initTable == true)) {
                if ((this.tablestaff_assessment != null)) {
                    this.tablestaff_assessment.InitVars();
                }
            }
            this.tablestaff_competency_core = ((staff_competency_coreDataTable)(base.Tables["staff_competency_core"]));
            if ((initTable == true)) {
                if ((this.tablestaff_competency_core != null)) {
                    this.tablestaff_competency_core.InitVars();
                }
            }
            this.tablestaff_competency_structural = ((staff_competency_structuralDataTable)(base.Tables["staff_competency_structural"]));
            if ((initTable == true)) {
                if ((this.tablestaff_competency_structural != null)) {
                    this.tablestaff_competency_structural.InitVars();
                }
            }
            this.tablestaff_education = ((staff_educationDataTable)(base.Tables["staff_education"]));
            if ((initTable == true)) {
                if ((this.tablestaff_education != null)) {
                    this.tablestaff_education.InitVars();
                }
            }
            this.tablestaff_family = ((staff_familyDataTable)(base.Tables["staff_family"]));
            if ((initTable == true)) {
                if ((this.tablestaff_family != null)) {
                    this.tablestaff_family.InitVars();
                }
            }
            this.tablestaff_healhistory = ((staff_healhistoryDataTable)(base.Tables["staff_healhistory"]));
            if ((initTable == true)) {
                if ((this.tablestaff_healhistory != null)) {
                    this.tablestaff_healhistory.InitVars();
                }
            }
            this.tablestaff_hipot = ((staff_hipotDataTable)(base.Tables["staff_hipot"]));
            if ((initTable == true)) {
                if ((this.tablestaff_hipot != null)) {
                    this.tablestaff_hipot.InitVars();
                }
            }
            this.tablestaff_index = ((staff_indexDataTable)(base.Tables["staff_index"]));
            if ((initTable == true)) {
                if ((this.tablestaff_index != null)) {
                    this.tablestaff_index.InitVars();
                }
            }
            this.tablestaff_info = ((staff_infoDataTable)(base.Tables["staff_info"]));
            if ((initTable == true)) {
                if ((this.tablestaff_info != null)) {
                    this.tablestaff_info.InitVars();
                }
            }
            this.tablestaff_nonworking = ((staff_nonworkingDataTable)(base.Tables["staff_nonworking"]));
            if ((initTable == true)) {
                if ((this.tablestaff_nonworking != null)) {
                    this.tablestaff_nonworking.InitVars();
                }
            }
            this.tablestaff_oc = ((staff_ocDataTable)(base.Tables["staff_oc"]));
            if ((initTable == true)) {
                if ((this.tablestaff_oc != null)) {
                    this.tablestaff_oc.InitVars();
                }
            }
            this.tablestaff_occupation = ((staff_occupationDataTable)(base.Tables["staff_occupation"]));
            if ((initTable == true)) {
                if ((this.tablestaff_occupation != null)) {
                    this.tablestaff_occupation.InitVars();
                }
            }
            this.tablestaff_occupation_history = ((staff_occupation_historyDataTable)(base.Tables["staff_occupation_history"]));
            if ((initTable == true)) {
                if ((this.tablestaff_occupation_history != null)) {
                    this.tablestaff_occupation_history.InitVars();
                }
            }
            this.tablestaff_status_control = ((staff_status_controlDataTable)(base.Tables["staff_status_control"]));
            if ((initTable == true)) {
                if ((this.tablestaff_status_control != null)) {
                    this.tablestaff_status_control.InitVars();
                }
            }
            this.tablestaff_success = ((staff_successDataTable)(base.Tables["staff_success"]));
            if ((initTable == true)) {
                if ((this.tablestaff_success != null)) {
                    this.tablestaff_success.InitVars();
                }
            }
            this.tablestaff_training = ((staff_trainingDataTable)(base.Tables["staff_training"]));
            if ((initTable == true)) {
                if ((this.tablestaff_training != null)) {
                    this.tablestaff_training.InitVars();
                }
            }
            this.tablesys_company = ((sys_companyDataTable)(base.Tables["sys_company"]));
            if ((initTable == true)) {
                if ((this.tablesys_company != null)) {
                    this.tablesys_company.InitVars();
                }
            }
            this.tablesys_department = ((sys_departmentDataTable)(base.Tables["sys_department"]));
            if ((initTable == true)) {
                if ((this.tablesys_department != null)) {
                    this.tablesys_department.InitVars();
                }
            }
            this.tablesys_menuauthority = ((sys_menuauthorityDataTable)(base.Tables["sys_menuauthority"]));
            if ((initTable == true)) {
                if ((this.tablesys_menuauthority != null)) {
                    this.tablesys_menuauthority.InitVars();
                }
            }
            this.tablesys_position = ((sys_positionDataTable)(base.Tables["sys_position"]));
            if ((initTable == true)) {
                if ((this.tablesys_position != null)) {
                    this.tablesys_position.InitVars();
                }
            }
            this.tabletemp_uname11 = ((temp_uname11DataTable)(base.Tables["temp_uname11"]));
            if ((initTable == true)) {
                if ((this.tabletemp_uname11 != null)) {
                    this.tabletemp_uname11.InitVars();
                }
            }
            this.tabletemp_uname12 = ((temp_uname12DataTable)(base.Tables["temp_uname12"]));
            if ((initTable == true)) {
                if ((this.tabletemp_uname12 != null)) {
                    this.tabletemp_uname12.InitVars();
                }
            }
            this.tabletempTSH = ((tempTSHDataTable)(base.Tables["tempTSH"]));
            if ((initTable == true)) {
                if ((this.tabletempTSH != null)) {
                    this.tabletempTSH.InitVars();
                }
            }
            this.relationFK_evaluation_staff_index = this.Relations["FK_evaluation_staff_index"];
            this.relationFK_kpi_staff_index = this.Relations["FK_kpi_staff_index"];
            this.relationFK_staff_activity_staff_index = this.Relations["FK_staff_activity_staff_index"];
            this.relationFK_staff_activity_image_staff_activity = this.Relations["FK_staff_activity_image_staff_activity"];
            this.relationFK_staff_address_staff_index = this.Relations["FK_staff_address_staff_index"];
            this.relationFK_staff_ailment_staff_index1 = this.Relations["FK_staff_ailment_staff_index1"];
            this.relationFK_staff_assessment_staff_index = this.Relations["FK_staff_assessment_staff_index"];
            this.relationFK_staff_competency_core_staff_index = this.Relations["FK_staff_competency_core_staff_index"];
            this.relationFK_staff_competency_structural_staff_index = this.Relations["FK_staff_competency_structural_staff_index"];
            this.relationFK_staff_education_staff_index = this.Relations["FK_staff_education_staff_index"];
            this.relationFK_staff_family_staff_index = this.Relations["FK_staff_family_staff_index"];
            this.relationFK_staff_healhistory_staff_index = this.Relations["FK_staff_healhistory_staff_index"];
            this.relationFK_staff_hipot_staff_index = this.Relations["FK_staff_hipot_staff_index"];
            this.relationFK_staff_info_staff_index = this.Relations["FK_staff_info_staff_index"];
            this.relationFK_staff_occupation_staff_index = this.Relations["FK_staff_occupation_staff_index"];
            this.relationFK_staff_occupation_history_staff_index = this.Relations["FK_staff_occupation_history_staff_index"];
            this.relationFK_staff_status_control_staff_index = this.Relations["FK_staff_status_control_staff_index"];
            this.relationFK_staff_success_staff_index = this.Relations["FK_staff_success_staff_index"];
            this.relationFK_staff_training_staff_index = this.Relations["FK_staff_training_staff_index"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "netconceptDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/netconceptDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.table36049_company_avg = new _36049_company_avgDataTable();
            base.Tables.Add(this.table36049_company_avg);
            this.table36049_evaluation = new _36049_evaluationDataTable();
            base.Tables.Add(this.table36049_evaluation);
            this.table36049_evaluation_detail = new _36049_evaluation_detailDataTable();
            base.Tables.Add(this.table36049_evaluation_detail);
            this.table36049_generate_score = new _36049_generate_scoreDataTable();
            base.Tables.Add(this.table36049_generate_score);
            this.table36049_group_avg = new _36049_group_avgDataTable();
            base.Tables.Add(this.table36049_group_avg);
            this.table36049_menuauthority = new _36049_menuauthorityDataTable();
            base.Tables.Add(this.table36049_menuauthority);
            this.table36049_menuauthority_group = new _36049_menuauthority_groupDataTable();
            base.Tables.Add(this.table36049_menuauthority_group);
            this.table36049_menuauthority_group_detail = new _36049_menuauthority_group_detailDataTable();
            base.Tables.Add(this.table36049_menuauthority_group_detail);
            this.table36049_score = new _36049_scoreDataTable();
            base.Tables.Add(this.table36049_score);
            this.table36049_score_detail = new _36049_score_detailDataTable();
            base.Tables.Add(this.table36049_score_detail);
            this.table36049user = new _36049userDataTable();
            base.Tables.Add(this.table36049user);
            this.tablecompetency_st_require = new competency_st_requireDataTable();
            base.Tables.Add(this.tablecompetency_st_require);
            this.tabledtproperties = new dtpropertiesDataTable();
            base.Tables.Add(this.tabledtproperties);
            this.tableevaluation = new evaluationDataTable();
            base.Tables.Add(this.tableevaluation);
            this.tableevaluation_detail = new evaluation_detailDataTable();
            base.Tables.Add(this.tableevaluation_detail);
            this.tableevaluation_index = new evaluation_indexDataTable();
            base.Tables.Add(this.tableevaluation_index);
            this.tablekpi = new kpiDataTable();
            base.Tables.Add(this.tablekpi);
            this.tablemasterdata_authority = new masterdata_authorityDataTable();
            base.Tables.Add(this.tablemasterdata_authority);
            this.tablemasterdata_competency_core = new masterdata_competency_coreDataTable();
            base.Tables.Add(this.tablemasterdata_competency_core);
            this.tablemasterdata_competency_st = new masterdata_competency_stDataTable();
            base.Tables.Add(this.tablemasterdata_competency_st);
            this.tablemasterdata_competency_st_group = new masterdata_competency_st_groupDataTable();
            base.Tables.Add(this.tablemasterdata_competency_st_group);
            this.tablemasterdata_competency_st_group_detail = new masterdata_competency_st_group_detailDataTable();
            base.Tables.Add(this.tablemasterdata_competency_st_group_detail);
            this.tablemasterdata_eva_relation = new masterdata_eva_relationDataTable();
            base.Tables.Add(this.tablemasterdata_eva_relation);
            this.tablemasterdata_menuauthority = new masterdata_menuauthorityDataTable();
            base.Tables.Add(this.tablemasterdata_menuauthority);
            this.tablemasterdata_menuauthority_group = new masterdata_menuauthority_groupDataTable();
            base.Tables.Add(this.tablemasterdata_menuauthority_group);
            this.tablemasterdata_menuauthority_group_detail = new masterdata_menuauthority_group_detailDataTable();
            base.Tables.Add(this.tablemasterdata_menuauthority_group_detail);
            this.tablemasterdata_ref = new masterdata_refDataTable();
            base.Tables.Add(this.tablemasterdata_ref);
            this.tablestaff_activity = new staff_activityDataTable();
            base.Tables.Add(this.tablestaff_activity);
            this.tablestaff_activity_image = new staff_activity_imageDataTable();
            base.Tables.Add(this.tablestaff_activity_image);
            this.tablestaff_activity_temp = new staff_activity_tempDataTable();
            base.Tables.Add(this.tablestaff_activity_temp);
            this.tablestaff_activity_video = new staff_activity_videoDataTable();
            base.Tables.Add(this.tablestaff_activity_video);
            this.tablestaff_address = new staff_addressDataTable();
            base.Tables.Add(this.tablestaff_address);
            this.tablestaff_ailment = new staff_ailmentDataTable();
            base.Tables.Add(this.tablestaff_ailment);
            this.tablestaff_assessment = new staff_assessmentDataTable();
            base.Tables.Add(this.tablestaff_assessment);
            this.tablestaff_competency_core = new staff_competency_coreDataTable();
            base.Tables.Add(this.tablestaff_competency_core);
            this.tablestaff_competency_structural = new staff_competency_structuralDataTable();
            base.Tables.Add(this.tablestaff_competency_structural);
            this.tablestaff_education = new staff_educationDataTable();
            base.Tables.Add(this.tablestaff_education);
            this.tablestaff_family = new staff_familyDataTable();
            base.Tables.Add(this.tablestaff_family);
            this.tablestaff_healhistory = new staff_healhistoryDataTable();
            base.Tables.Add(this.tablestaff_healhistory);
            this.tablestaff_hipot = new staff_hipotDataTable();
            base.Tables.Add(this.tablestaff_hipot);
            this.tablestaff_index = new staff_indexDataTable();
            base.Tables.Add(this.tablestaff_index);
            this.tablestaff_info = new staff_infoDataTable();
            base.Tables.Add(this.tablestaff_info);
            this.tablestaff_nonworking = new staff_nonworkingDataTable();
            base.Tables.Add(this.tablestaff_nonworking);
            this.tablestaff_oc = new staff_ocDataTable();
            base.Tables.Add(this.tablestaff_oc);
            this.tablestaff_occupation = new staff_occupationDataTable();
            base.Tables.Add(this.tablestaff_occupation);
            this.tablestaff_occupation_history = new staff_occupation_historyDataTable();
            base.Tables.Add(this.tablestaff_occupation_history);
            this.tablestaff_status_control = new staff_status_controlDataTable();
            base.Tables.Add(this.tablestaff_status_control);
            this.tablestaff_success = new staff_successDataTable();
            base.Tables.Add(this.tablestaff_success);
            this.tablestaff_training = new staff_trainingDataTable();
            base.Tables.Add(this.tablestaff_training);
            this.tablesys_company = new sys_companyDataTable();
            base.Tables.Add(this.tablesys_company);
            this.tablesys_department = new sys_departmentDataTable();
            base.Tables.Add(this.tablesys_department);
            this.tablesys_menuauthority = new sys_menuauthorityDataTable();
            base.Tables.Add(this.tablesys_menuauthority);
            this.tablesys_position = new sys_positionDataTable();
            base.Tables.Add(this.tablesys_position);
            this.tabletemp_uname11 = new temp_uname11DataTable();
            base.Tables.Add(this.tabletemp_uname11);
            this.tabletemp_uname12 = new temp_uname12DataTable();
            base.Tables.Add(this.tabletemp_uname12);
            this.tabletempTSH = new tempTSHDataTable();
            base.Tables.Add(this.tabletempTSH);
            this.relationFK_evaluation_staff_index = new System.Data.DataRelation("FK_evaluation_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tableevaluation.unameColumn}, false);
            this.Relations.Add(this.relationFK_evaluation_staff_index);
            this.relationFK_kpi_staff_index = new System.Data.DataRelation("FK_kpi_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablekpi.unameColumn}, false);
            this.Relations.Add(this.relationFK_kpi_staff_index);
            this.relationFK_staff_activity_staff_index = new System.Data.DataRelation("FK_staff_activity_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_activity.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_activity_staff_index);
            this.relationFK_staff_activity_image_staff_activity = new System.Data.DataRelation("FK_staff_activity_image_staff_activity", new System.Data.DataColumn[] {
                        this.tablestaff_activity.staff_activity_idColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_activity_image.staff_activity_idColumn}, false);
            this.Relations.Add(this.relationFK_staff_activity_image_staff_activity);
            this.relationFK_staff_address_staff_index = new System.Data.DataRelation("FK_staff_address_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_address.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_address_staff_index);
            this.relationFK_staff_ailment_staff_index1 = new System.Data.DataRelation("FK_staff_ailment_staff_index1", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_ailment.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_ailment_staff_index1);
            this.relationFK_staff_assessment_staff_index = new System.Data.DataRelation("FK_staff_assessment_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_assessment.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_assessment_staff_index);
            this.relationFK_staff_competency_core_staff_index = new System.Data.DataRelation("FK_staff_competency_core_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_competency_core.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_competency_core_staff_index);
            this.relationFK_staff_competency_structural_staff_index = new System.Data.DataRelation("FK_staff_competency_structural_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_competency_structural.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_competency_structural_staff_index);
            this.relationFK_staff_education_staff_index = new System.Data.DataRelation("FK_staff_education_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_education.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_education_staff_index);
            this.relationFK_staff_family_staff_index = new System.Data.DataRelation("FK_staff_family_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_family.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_family_staff_index);
            this.relationFK_staff_healhistory_staff_index = new System.Data.DataRelation("FK_staff_healhistory_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_healhistory.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_healhistory_staff_index);
            this.relationFK_staff_hipot_staff_index = new System.Data.DataRelation("FK_staff_hipot_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_hipot.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_hipot_staff_index);
            this.relationFK_staff_info_staff_index = new System.Data.DataRelation("FK_staff_info_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_info.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_info_staff_index);
            this.relationFK_staff_occupation_staff_index = new System.Data.DataRelation("FK_staff_occupation_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_occupation.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_occupation_staff_index);
            this.relationFK_staff_occupation_history_staff_index = new System.Data.DataRelation("FK_staff_occupation_history_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_occupation_history.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_occupation_history_staff_index);
            this.relationFK_staff_status_control_staff_index = new System.Data.DataRelation("FK_staff_status_control_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_status_control.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_status_control_staff_index);
            this.relationFK_staff_success_staff_index = new System.Data.DataRelation("FK_staff_success_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_success.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_success_staff_index);
            this.relationFK_staff_training_staff_index = new System.Data.DataRelation("FK_staff_training_staff_index", new System.Data.DataColumn[] {
                        this.tablestaff_index.unameColumn}, new System.Data.DataColumn[] {
                        this.tablestaff_training.unameColumn}, false);
            this.Relations.Add(this.relationFK_staff_training_staff_index);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_company_avg() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_evaluation() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_evaluation_detail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_generate_score() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_group_avg() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_menuauthority() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_menuauthority_group() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_menuauthority_group_detail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_score() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049_score_detail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_36049user() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecompetency_st_require() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtproperties() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeevaluation() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeevaluation_detail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeevaluation_index() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializekpi() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_authority() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_competency_core() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_competency_st() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_competency_st_group() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_competency_st_group_detail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_eva_relation() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_menuauthority() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_menuauthority_group() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_menuauthority_group_detail() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemasterdata_ref() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_activity() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_activity_image() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_activity_temp() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_activity_video() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_address() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_ailment() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_assessment() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_competency_core() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_competency_structural() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_education() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_family() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_healhistory() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_hipot() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_index() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_info() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_nonworking() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_oc() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_occupation() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_occupation_history() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_status_control() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_success() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestaff_training() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesys_company() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesys_department() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesys_menuauthority() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesys_position() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetemp_uname11() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetemp_uname12() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetempTSH() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            netconceptDataSet ds = new netconceptDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void _36049_company_avgRowChangeEventHandler(object sender, _36049_company_avgRowChangeEvent e);
        
        public delegate void _36049_evaluationRowChangeEventHandler(object sender, _36049_evaluationRowChangeEvent e);
        
        public delegate void _36049_evaluation_detailRowChangeEventHandler(object sender, _36049_evaluation_detailRowChangeEvent e);
        
        public delegate void _36049_generate_scoreRowChangeEventHandler(object sender, _36049_generate_scoreRowChangeEvent e);
        
        public delegate void _36049_group_avgRowChangeEventHandler(object sender, _36049_group_avgRowChangeEvent e);
        
        public delegate void _36049_menuauthorityRowChangeEventHandler(object sender, _36049_menuauthorityRowChangeEvent e);
        
        public delegate void _36049_menuauthority_groupRowChangeEventHandler(object sender, _36049_menuauthority_groupRowChangeEvent e);
        
        public delegate void _36049_menuauthority_group_detailRowChangeEventHandler(object sender, _36049_menuauthority_group_detailRowChangeEvent e);
        
        public delegate void _36049_scoreRowChangeEventHandler(object sender, _36049_scoreRowChangeEvent e);
        
        public delegate void _36049_score_detailRowChangeEventHandler(object sender, _36049_score_detailRowChangeEvent e);
        
        public delegate void _36049userRowChangeEventHandler(object sender, _36049userRowChangeEvent e);
        
        public delegate void competency_st_requireRowChangeEventHandler(object sender, competency_st_requireRowChangeEvent e);
        
        public delegate void dtpropertiesRowChangeEventHandler(object sender, dtpropertiesRowChangeEvent e);
        
        public delegate void evaluationRowChangeEventHandler(object sender, evaluationRowChangeEvent e);
        
        public delegate void evaluation_detailRowChangeEventHandler(object sender, evaluation_detailRowChangeEvent e);
        
        public delegate void evaluation_indexRowChangeEventHandler(object sender, evaluation_indexRowChangeEvent e);
        
        public delegate void kpiRowChangeEventHandler(object sender, kpiRowChangeEvent e);
        
        public delegate void masterdata_authorityRowChangeEventHandler(object sender, masterdata_authorityRowChangeEvent e);
        
        public delegate void masterdata_competency_coreRowChangeEventHandler(object sender, masterdata_competency_coreRowChangeEvent e);
        
        public delegate void masterdata_competency_stRowChangeEventHandler(object sender, masterdata_competency_stRowChangeEvent e);
        
        public delegate void masterdata_competency_st_groupRowChangeEventHandler(object sender, masterdata_competency_st_groupRowChangeEvent e);
        
        public delegate void masterdata_competency_st_group_detailRowChangeEventHandler(object sender, masterdata_competency_st_group_detailRowChangeEvent e);
        
        public delegate void masterdata_eva_relationRowChangeEventHandler(object sender, masterdata_eva_relationRowChangeEvent e);
        
        public delegate void masterdata_menuauthorityRowChangeEventHandler(object sender, masterdata_menuauthorityRowChangeEvent e);
        
        public delegate void masterdata_menuauthority_groupRowChangeEventHandler(object sender, masterdata_menuauthority_groupRowChangeEvent e);
        
        public delegate void masterdata_menuauthority_group_detailRowChangeEventHandler(object sender, masterdata_menuauthority_group_detailRowChangeEvent e);
        
        public delegate void masterdata_refRowChangeEventHandler(object sender, masterdata_refRowChangeEvent e);
        
        public delegate void staff_activityRowChangeEventHandler(object sender, staff_activityRowChangeEvent e);
        
        public delegate void staff_activity_imageRowChangeEventHandler(object sender, staff_activity_imageRowChangeEvent e);
        
        public delegate void staff_activity_tempRowChangeEventHandler(object sender, staff_activity_tempRowChangeEvent e);
        
        public delegate void staff_activity_videoRowChangeEventHandler(object sender, staff_activity_videoRowChangeEvent e);
        
        public delegate void staff_addressRowChangeEventHandler(object sender, staff_addressRowChangeEvent e);
        
        public delegate void staff_ailmentRowChangeEventHandler(object sender, staff_ailmentRowChangeEvent e);
        
        public delegate void staff_assessmentRowChangeEventHandler(object sender, staff_assessmentRowChangeEvent e);
        
        public delegate void staff_competency_coreRowChangeEventHandler(object sender, staff_competency_coreRowChangeEvent e);
        
        public delegate void staff_competency_structuralRowChangeEventHandler(object sender, staff_competency_structuralRowChangeEvent e);
        
        public delegate void staff_educationRowChangeEventHandler(object sender, staff_educationRowChangeEvent e);
        
        public delegate void staff_familyRowChangeEventHandler(object sender, staff_familyRowChangeEvent e);
        
        public delegate void staff_healhistoryRowChangeEventHandler(object sender, staff_healhistoryRowChangeEvent e);
        
        public delegate void staff_hipotRowChangeEventHandler(object sender, staff_hipotRowChangeEvent e);
        
        public delegate void staff_indexRowChangeEventHandler(object sender, staff_indexRowChangeEvent e);
        
        public delegate void staff_infoRowChangeEventHandler(object sender, staff_infoRowChangeEvent e);
        
        public delegate void staff_nonworkingRowChangeEventHandler(object sender, staff_nonworkingRowChangeEvent e);
        
        public delegate void staff_ocRowChangeEventHandler(object sender, staff_ocRowChangeEvent e);
        
        public delegate void staff_occupationRowChangeEventHandler(object sender, staff_occupationRowChangeEvent e);
        
        public delegate void staff_occupation_historyRowChangeEventHandler(object sender, staff_occupation_historyRowChangeEvent e);
        
        public delegate void staff_status_controlRowChangeEventHandler(object sender, staff_status_controlRowChangeEvent e);
        
        public delegate void staff_successRowChangeEventHandler(object sender, staff_successRowChangeEvent e);
        
        public delegate void staff_trainingRowChangeEventHandler(object sender, staff_trainingRowChangeEvent e);
        
        public delegate void sys_companyRowChangeEventHandler(object sender, sys_companyRowChangeEvent e);
        
        public delegate void sys_departmentRowChangeEventHandler(object sender, sys_departmentRowChangeEvent e);
        
        public delegate void sys_menuauthorityRowChangeEventHandler(object sender, sys_menuauthorityRowChangeEvent e);
        
        public delegate void sys_positionRowChangeEventHandler(object sender, sys_positionRowChangeEvent e);
        
        public delegate void temp_uname11RowChangeEventHandler(object sender, temp_uname11RowChangeEvent e);
        
        public delegate void temp_uname12RowChangeEventHandler(object sender, temp_uname12RowChangeEvent e);
        
        public delegate void tempTSHRowChangeEventHandler(object sender, tempTSHRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_company_avgDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columncompany_id;
            
            private System.Data.DataColumn columnbig_issue;
            
            private System.Data.DataColumn columnsmall_issue;
            
            private System.Data.DataColumn columncompany_avg;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_company_avgDataTable() {
                this.TableName = "36049_company_avg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_company_avgDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_company_avgDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn company_idColumn {
                get {
                    return this.columncompany_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn big_issueColumn {
                get {
                    return this.columnbig_issue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn small_issueColumn {
                get {
                    return this.columnsmall_issue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn company_avgColumn {
                get {
                    return this.columncompany_avg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_company_avgRow this[int index] {
                get {
                    return ((_36049_company_avgRow)(this.Rows[index]));
                }
            }
            
            public event _36049_company_avgRowChangeEventHandler _36049_company_avgRowChanging;
            
            public event _36049_company_avgRowChangeEventHandler _36049_company_avgRowChanged;
            
            public event _36049_company_avgRowChangeEventHandler _36049_company_avgRowDeleting;
            
            public event _36049_company_avgRowChangeEventHandler _36049_company_avgRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_company_avgRow(_36049_company_avgRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_company_avgRow Add_36049_company_avgRow(string company_id, string big_issue, string small_issue, string company_avg) {
                _36049_company_avgRow row_36049_company_avgRow = ((_36049_company_avgRow)(this.NewRow()));
                row_36049_company_avgRow.ItemArray = new object[] {
                        null,
                        company_id,
                        big_issue,
                        small_issue,
                        company_avg};
                this.Rows.Add(row_36049_company_avgRow);
                return row_36049_company_avgRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_company_avgRow FindByid(int id) {
                return ((_36049_company_avgRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_company_avgDataTable cln = ((_36049_company_avgDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_company_avgDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncompany_id = base.Columns["company_id"];
                this.columnbig_issue = base.Columns["big_issue"];
                this.columnsmall_issue = base.Columns["small_issue"];
                this.columncompany_avg = base.Columns["company_avg"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncompany_id = new System.Data.DataColumn("company_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_id);
                this.columnbig_issue = new System.Data.DataColumn("big_issue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbig_issue);
                this.columnsmall_issue = new System.Data.DataColumn("small_issue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsmall_issue);
                this.columncompany_avg = new System.Data.DataColumn("company_avg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_avg);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columncompany_id.MaxLength = 50;
                this.columnbig_issue.MaxLength = 50;
                this.columnsmall_issue.MaxLength = 50;
                this.columncompany_avg.MaxLength = 50;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_company_avgRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_company_avgRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_company_avgRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_company_avgDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_company_avg");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_company_avg");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_company_avgRow New_36049_company_avgRow() {
                return ((_36049_company_avgRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_company_avgRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_company_avgRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_company_avgRowChanged != null)) {
                    this._36049_company_avgRowChanged(this, new _36049_company_avgRowChangeEvent(((_36049_company_avgRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_company_avgRowChanging != null)) {
                    this._36049_company_avgRowChanging(this, new _36049_company_avgRowChangeEvent(((_36049_company_avgRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_company_avgRowDeleted != null)) {
                    this._36049_company_avgRowDeleted(this, new _36049_company_avgRowChangeEvent(((_36049_company_avgRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_company_avgRowDeleting != null)) {
                    this._36049_company_avgRowDeleting(this, new _36049_company_avgRowChangeEvent(((_36049_company_avgRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_company_avgRow(_36049_company_avgRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_company_avgDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_evaluationDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnevaluation_id;
            
            private System.Data.DataColumn columnevaluation_no;
            
            private System.Data.DataColumn columnuname_eva;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnstaff_eva_relation;
            
            private System.Data.DataColumn columnstaff_id_totalscore;
            
            private System.Data.DataColumn columnsavedate;
            
            private System.Data.DataColumn columnsubmitdate;
            
            private System.Data.DataColumn columnsubmit_status;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluationDataTable() {
                this.TableName = "36049_evaluation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_evaluationDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_evaluationDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_idColumn {
                get {
                    return this.columnevaluation_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_noColumn {
                get {
                    return this.columnevaluation_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn uname_evaColumn {
                get {
                    return this.columnuname_eva;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_eva_relationColumn {
                get {
                    return this.columnstaff_eva_relation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_id_totalscoreColumn {
                get {
                    return this.columnstaff_id_totalscore;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn savedateColumn {
                get {
                    return this.columnsavedate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn submitdateColumn {
                get {
                    return this.columnsubmitdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn submit_statusColumn {
                get {
                    return this.columnsubmit_status;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluationRow this[int index] {
                get {
                    return ((_36049_evaluationRow)(this.Rows[index]));
                }
            }
            
            public event _36049_evaluationRowChangeEventHandler _36049_evaluationRowChanging;
            
            public event _36049_evaluationRowChangeEventHandler _36049_evaluationRowChanged;
            
            public event _36049_evaluationRowChangeEventHandler _36049_evaluationRowDeleting;
            
            public event _36049_evaluationRowChangeEventHandler _36049_evaluationRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_evaluationRow(_36049_evaluationRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluationRow Add_36049_evaluationRow(int evaluation_no, string uname_eva, string uname, string staff_eva_relation, decimal staff_id_totalscore, System.DateTime savedate, System.DateTime submitdate, bool submit_status) {
                _36049_evaluationRow row_36049_evaluationRow = ((_36049_evaluationRow)(this.NewRow()));
                row_36049_evaluationRow.ItemArray = new object[] {
                        null,
                        evaluation_no,
                        uname_eva,
                        uname,
                        staff_eva_relation,
                        staff_id_totalscore,
                        savedate,
                        submitdate,
                        submit_status};
                this.Rows.Add(row_36049_evaluationRow);
                return row_36049_evaluationRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluationRow FindByevaluation_id(int evaluation_id) {
                return ((_36049_evaluationRow)(this.Rows.Find(new object[] {
                            evaluation_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_evaluationDataTable cln = ((_36049_evaluationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_evaluationDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnevaluation_id = base.Columns["evaluation_id"];
                this.columnevaluation_no = base.Columns["evaluation_no"];
                this.columnuname_eva = base.Columns["uname_eva"];
                this.columnuname = base.Columns["uname"];
                this.columnstaff_eva_relation = base.Columns["staff_eva_relation"];
                this.columnstaff_id_totalscore = base.Columns["staff_id_totalscore"];
                this.columnsavedate = base.Columns["savedate"];
                this.columnsubmitdate = base.Columns["submitdate"];
                this.columnsubmit_status = base.Columns["submit_status"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnevaluation_id = new System.Data.DataColumn("evaluation_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_id);
                this.columnevaluation_no = new System.Data.DataColumn("evaluation_no", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_no);
                this.columnuname_eva = new System.Data.DataColumn("uname_eva", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname_eva);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnstaff_eva_relation = new System.Data.DataColumn("staff_eva_relation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_eva_relation);
                this.columnstaff_id_totalscore = new System.Data.DataColumn("staff_id_totalscore", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_id_totalscore);
                this.columnsavedate = new System.Data.DataColumn("savedate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsavedate);
                this.columnsubmitdate = new System.Data.DataColumn("submitdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubmitdate);
                this.columnsubmit_status = new System.Data.DataColumn("submit_status", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubmit_status);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnevaluation_id}, true));
                this.columnevaluation_id.AutoIncrement = true;
                this.columnevaluation_id.AllowDBNull = false;
                this.columnevaluation_id.ReadOnly = true;
                this.columnevaluation_id.Unique = true;
                this.columnuname_eva.MaxLength = 50;
                this.columnuname.MaxLength = 50;
                this.columnstaff_eva_relation.MaxLength = 10;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_evaluationRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_evaluationRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_evaluationRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_evaluationDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_evaluation");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_evaluation");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluationRow New_36049_evaluationRow() {
                return ((_36049_evaluationRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_evaluationRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_evaluationRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_evaluationRowChanged != null)) {
                    this._36049_evaluationRowChanged(this, new _36049_evaluationRowChangeEvent(((_36049_evaluationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_evaluationRowChanging != null)) {
                    this._36049_evaluationRowChanging(this, new _36049_evaluationRowChangeEvent(((_36049_evaluationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_evaluationRowDeleted != null)) {
                    this._36049_evaluationRowDeleted(this, new _36049_evaluationRowChangeEvent(((_36049_evaluationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_evaluationRowDeleting != null)) {
                    this._36049_evaluationRowDeleting(this, new _36049_evaluationRowChangeEvent(((_36049_evaluationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_evaluationRow(_36049_evaluationRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_evaluationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_evaluation_detailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnevaluation_detail_id;
            
            private System.Data.DataColumn columnevaluation_id;
            
            private System.Data.DataColumn columnevaluation_subject_id;
            
            private System.Data.DataColumn columnevaluation_sub_subject_id;
            
            private System.Data.DataColumn columnevaluation_score;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluation_detailDataTable() {
                this.TableName = "36049_evaluation_detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_evaluation_detailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_evaluation_detailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_detail_idColumn {
                get {
                    return this.columnevaluation_detail_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_idColumn {
                get {
                    return this.columnevaluation_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_subject_idColumn {
                get {
                    return this.columnevaluation_subject_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_sub_subject_idColumn {
                get {
                    return this.columnevaluation_sub_subject_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_scoreColumn {
                get {
                    return this.columnevaluation_score;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluation_detailRow this[int index] {
                get {
                    return ((_36049_evaluation_detailRow)(this.Rows[index]));
                }
            }
            
            public event _36049_evaluation_detailRowChangeEventHandler _36049_evaluation_detailRowChanging;
            
            public event _36049_evaluation_detailRowChangeEventHandler _36049_evaluation_detailRowChanged;
            
            public event _36049_evaluation_detailRowChangeEventHandler _36049_evaluation_detailRowDeleting;
            
            public event _36049_evaluation_detailRowChangeEventHandler _36049_evaluation_detailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_evaluation_detailRow(_36049_evaluation_detailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluation_detailRow Add_36049_evaluation_detailRow(int evaluation_id, int evaluation_subject_id, int evaluation_sub_subject_id, decimal evaluation_score) {
                _36049_evaluation_detailRow row_36049_evaluation_detailRow = ((_36049_evaluation_detailRow)(this.NewRow()));
                row_36049_evaluation_detailRow.ItemArray = new object[] {
                        null,
                        evaluation_id,
                        evaluation_subject_id,
                        evaluation_sub_subject_id,
                        evaluation_score};
                this.Rows.Add(row_36049_evaluation_detailRow);
                return row_36049_evaluation_detailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluation_detailRow FindByevaluation_detail_id(int evaluation_detail_id) {
                return ((_36049_evaluation_detailRow)(this.Rows.Find(new object[] {
                            evaluation_detail_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_evaluation_detailDataTable cln = ((_36049_evaluation_detailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_evaluation_detailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnevaluation_detail_id = base.Columns["evaluation_detail_id"];
                this.columnevaluation_id = base.Columns["evaluation_id"];
                this.columnevaluation_subject_id = base.Columns["evaluation_subject_id"];
                this.columnevaluation_sub_subject_id = base.Columns["evaluation_sub_subject_id"];
                this.columnevaluation_score = base.Columns["evaluation_score"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnevaluation_detail_id = new System.Data.DataColumn("evaluation_detail_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_detail_id);
                this.columnevaluation_id = new System.Data.DataColumn("evaluation_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_id);
                this.columnevaluation_subject_id = new System.Data.DataColumn("evaluation_subject_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_subject_id);
                this.columnevaluation_sub_subject_id = new System.Data.DataColumn("evaluation_sub_subject_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_sub_subject_id);
                this.columnevaluation_score = new System.Data.DataColumn("evaluation_score", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_score);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnevaluation_detail_id}, true));
                this.columnevaluation_detail_id.AutoIncrement = true;
                this.columnevaluation_detail_id.AllowDBNull = false;
                this.columnevaluation_detail_id.ReadOnly = true;
                this.columnevaluation_detail_id.Unique = true;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_evaluation_detailRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_evaluation_detailRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_evaluation_detailRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_evaluation_detailDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_evaluation_detail");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_evaluation_detail");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluation_detailRow New_36049_evaluation_detailRow() {
                return ((_36049_evaluation_detailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_evaluation_detailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_evaluation_detailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_evaluation_detailRowChanged != null)) {
                    this._36049_evaluation_detailRowChanged(this, new _36049_evaluation_detailRowChangeEvent(((_36049_evaluation_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_evaluation_detailRowChanging != null)) {
                    this._36049_evaluation_detailRowChanging(this, new _36049_evaluation_detailRowChangeEvent(((_36049_evaluation_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_evaluation_detailRowDeleted != null)) {
                    this._36049_evaluation_detailRowDeleted(this, new _36049_evaluation_detailRowChangeEvent(((_36049_evaluation_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_evaluation_detailRowDeleting != null)) {
                    this._36049_evaluation_detailRowDeleting(this, new _36049_evaluation_detailRowChangeEvent(((_36049_evaluation_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_evaluation_detailRow(_36049_evaluation_detailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_evaluation_detailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_generate_scoreDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columngen_date;
            
            private System.Data.DataColumn columngen_by;
            
            private System.Data.DataColumn columngen_type;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_generate_scoreDataTable() {
                this.TableName = "36049_generate_score";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_generate_scoreDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_generate_scoreDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn gen_dateColumn {
                get {
                    return this.columngen_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn gen_byColumn {
                get {
                    return this.columngen_by;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn gen_typeColumn {
                get {
                    return this.columngen_type;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_generate_scoreRow this[int index] {
                get {
                    return ((_36049_generate_scoreRow)(this.Rows[index]));
                }
            }
            
            public event _36049_generate_scoreRowChangeEventHandler _36049_generate_scoreRowChanging;
            
            public event _36049_generate_scoreRowChangeEventHandler _36049_generate_scoreRowChanged;
            
            public event _36049_generate_scoreRowChangeEventHandler _36049_generate_scoreRowDeleting;
            
            public event _36049_generate_scoreRowChangeEventHandler _36049_generate_scoreRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_generate_scoreRow(_36049_generate_scoreRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_generate_scoreRow Add_36049_generate_scoreRow(System.DateTime gen_date, string gen_by, string gen_type) {
                _36049_generate_scoreRow row_36049_generate_scoreRow = ((_36049_generate_scoreRow)(this.NewRow()));
                row_36049_generate_scoreRow.ItemArray = new object[] {
                        null,
                        gen_date,
                        gen_by,
                        gen_type};
                this.Rows.Add(row_36049_generate_scoreRow);
                return row_36049_generate_scoreRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_generate_scoreRow FindByid(int id) {
                return ((_36049_generate_scoreRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_generate_scoreDataTable cln = ((_36049_generate_scoreDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_generate_scoreDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columngen_date = base.Columns["gen_date"];
                this.columngen_by = base.Columns["gen_by"];
                this.columngen_type = base.Columns["gen_type"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columngen_date = new System.Data.DataColumn("gen_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngen_date);
                this.columngen_by = new System.Data.DataColumn("gen_by", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngen_by);
                this.columngen_type = new System.Data.DataColumn("gen_type", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngen_type);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columngen_by.MaxLength = 50;
                this.columngen_type.MaxLength = 20;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_generate_scoreRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_generate_scoreRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_generate_scoreRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_generate_scoreDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_generate_score");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_generate_score");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_generate_scoreRow New_36049_generate_scoreRow() {
                return ((_36049_generate_scoreRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_generate_scoreRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_generate_scoreRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_generate_scoreRowChanged != null)) {
                    this._36049_generate_scoreRowChanged(this, new _36049_generate_scoreRowChangeEvent(((_36049_generate_scoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_generate_scoreRowChanging != null)) {
                    this._36049_generate_scoreRowChanging(this, new _36049_generate_scoreRowChangeEvent(((_36049_generate_scoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_generate_scoreRowDeleted != null)) {
                    this._36049_generate_scoreRowDeleted(this, new _36049_generate_scoreRowChangeEvent(((_36049_generate_scoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_generate_scoreRowDeleting != null)) {
                    this._36049_generate_scoreRowDeleting(this, new _36049_generate_scoreRowChangeEvent(((_36049_generate_scoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_generate_scoreRow(_36049_generate_scoreRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_generate_scoreDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_group_avgDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnbig_issue;
            
            private System.Data.DataColumn columnsmall_issue;
            
            private System.Data.DataColumn columngroup_avg;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_group_avgDataTable() {
                this.TableName = "36049_group_avg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_group_avgDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_group_avgDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn big_issueColumn {
                get {
                    return this.columnbig_issue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn small_issueColumn {
                get {
                    return this.columnsmall_issue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn group_avgColumn {
                get {
                    return this.columngroup_avg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_group_avgRow this[int index] {
                get {
                    return ((_36049_group_avgRow)(this.Rows[index]));
                }
            }
            
            public event _36049_group_avgRowChangeEventHandler _36049_group_avgRowChanging;
            
            public event _36049_group_avgRowChangeEventHandler _36049_group_avgRowChanged;
            
            public event _36049_group_avgRowChangeEventHandler _36049_group_avgRowDeleting;
            
            public event _36049_group_avgRowChangeEventHandler _36049_group_avgRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_group_avgRow(_36049_group_avgRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_group_avgRow Add_36049_group_avgRow(string big_issue, string small_issue, string group_avg) {
                _36049_group_avgRow row_36049_group_avgRow = ((_36049_group_avgRow)(this.NewRow()));
                row_36049_group_avgRow.ItemArray = new object[] {
                        big_issue,
                        small_issue,
                        group_avg};
                this.Rows.Add(row_36049_group_avgRow);
                return row_36049_group_avgRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_group_avgDataTable cln = ((_36049_group_avgDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_group_avgDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnbig_issue = base.Columns["big_issue"];
                this.columnsmall_issue = base.Columns["small_issue"];
                this.columngroup_avg = base.Columns["group_avg"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnbig_issue = new System.Data.DataColumn("big_issue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbig_issue);
                this.columnsmall_issue = new System.Data.DataColumn("small_issue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsmall_issue);
                this.columngroup_avg = new System.Data.DataColumn("group_avg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_avg);
                this.columnbig_issue.AllowDBNull = false;
                this.columnbig_issue.MaxLength = 50;
                this.columnsmall_issue.MaxLength = 50;
                this.columngroup_avg.MaxLength = 50;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_group_avgRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_group_avgRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_group_avgRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_group_avgDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_group_avg");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_group_avg");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_group_avgRow New_36049_group_avgRow() {
                return ((_36049_group_avgRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_group_avgRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_group_avgRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_group_avgRowChanged != null)) {
                    this._36049_group_avgRowChanged(this, new _36049_group_avgRowChangeEvent(((_36049_group_avgRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_group_avgRowChanging != null)) {
                    this._36049_group_avgRowChanging(this, new _36049_group_avgRowChangeEvent(((_36049_group_avgRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_group_avgRowDeleted != null)) {
                    this._36049_group_avgRowDeleted(this, new _36049_group_avgRowChangeEvent(((_36049_group_avgRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_group_avgRowDeleting != null)) {
                    this._36049_group_avgRowDeleting(this, new _36049_group_avgRowChangeEvent(((_36049_group_avgRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_group_avgRow(_36049_group_avgRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_group_avgDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_menuauthorityDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnmenuauthority_id;
            
            private System.Data.DataColumn columnmenuauthority_root;
            
            private System.Data.DataColumn columnmenuauthority_name;
            
            private System.Data.DataColumn columnmenuauthority_desc;
            
            private System.Data.DataColumn columnwebpage;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthorityDataTable() {
                this.TableName = "36049_menuauthority";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_menuauthorityDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_menuauthorityDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_idColumn {
                get {
                    return this.columnmenuauthority_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_rootColumn {
                get {
                    return this.columnmenuauthority_root;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_nameColumn {
                get {
                    return this.columnmenuauthority_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_descColumn {
                get {
                    return this.columnmenuauthority_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn webpageColumn {
                get {
                    return this.columnwebpage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthorityRow this[int index] {
                get {
                    return ((_36049_menuauthorityRow)(this.Rows[index]));
                }
            }
            
            public event _36049_menuauthorityRowChangeEventHandler _36049_menuauthorityRowChanging;
            
            public event _36049_menuauthorityRowChangeEventHandler _36049_menuauthorityRowChanged;
            
            public event _36049_menuauthorityRowChangeEventHandler _36049_menuauthorityRowDeleting;
            
            public event _36049_menuauthorityRowChangeEventHandler _36049_menuauthorityRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_menuauthorityRow(_36049_menuauthorityRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthorityRow Add_36049_menuauthorityRow(string menuauthority_id, string menuauthority_root, string menuauthority_name, string menuauthority_desc, string webpage) {
                _36049_menuauthorityRow row_36049_menuauthorityRow = ((_36049_menuauthorityRow)(this.NewRow()));
                row_36049_menuauthorityRow.ItemArray = new object[] {
                        menuauthority_id,
                        menuauthority_root,
                        menuauthority_name,
                        menuauthority_desc,
                        webpage};
                this.Rows.Add(row_36049_menuauthorityRow);
                return row_36049_menuauthorityRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthorityRow FindBymenuauthority_id(string menuauthority_id) {
                return ((_36049_menuauthorityRow)(this.Rows.Find(new object[] {
                            menuauthority_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_menuauthorityDataTable cln = ((_36049_menuauthorityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_menuauthorityDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmenuauthority_id = base.Columns["menuauthority_id"];
                this.columnmenuauthority_root = base.Columns["menuauthority_root"];
                this.columnmenuauthority_name = base.Columns["menuauthority_name"];
                this.columnmenuauthority_desc = base.Columns["menuauthority_desc"];
                this.columnwebpage = base.Columns["webpage"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmenuauthority_id = new System.Data.DataColumn("menuauthority_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_id);
                this.columnmenuauthority_root = new System.Data.DataColumn("menuauthority_root", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_root);
                this.columnmenuauthority_name = new System.Data.DataColumn("menuauthority_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_name);
                this.columnmenuauthority_desc = new System.Data.DataColumn("menuauthority_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_desc);
                this.columnwebpage = new System.Data.DataColumn("webpage", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnwebpage);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnmenuauthority_id}, true));
                this.columnmenuauthority_id.AllowDBNull = false;
                this.columnmenuauthority_id.Unique = true;
                this.columnmenuauthority_id.MaxLength = 50;
                this.columnmenuauthority_root.MaxLength = 50;
                this.columnmenuauthority_name.MaxLength = 50;
                this.columnmenuauthority_desc.MaxLength = 50;
                this.columnwebpage.MaxLength = 50;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_menuauthorityRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_menuauthorityRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_menuauthorityRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_menuauthorityDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_menuauthority");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_menuauthority");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthorityRow New_36049_menuauthorityRow() {
                return ((_36049_menuauthorityRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_menuauthorityRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_menuauthorityRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_menuauthorityRowChanged != null)) {
                    this._36049_menuauthorityRowChanged(this, new _36049_menuauthorityRowChangeEvent(((_36049_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_menuauthorityRowChanging != null)) {
                    this._36049_menuauthorityRowChanging(this, new _36049_menuauthorityRowChangeEvent(((_36049_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_menuauthorityRowDeleted != null)) {
                    this._36049_menuauthorityRowDeleted(this, new _36049_menuauthorityRowChangeEvent(((_36049_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_menuauthorityRowDeleting != null)) {
                    this._36049_menuauthorityRowDeleting(this, new _36049_menuauthorityRowChangeEvent(((_36049_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_menuauthorityRow(_36049_menuauthorityRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_menuauthorityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_menuauthority_groupDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnmenuauthority_group_id;
            
            private System.Data.DataColumn columnmenuauthority_group_name;
            
            private System.Data.DataColumn columnmenuauthority_group_desc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_groupDataTable() {
                this.TableName = "36049_menuauthority_group";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_menuauthority_groupDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_menuauthority_groupDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_idColumn {
                get {
                    return this.columnmenuauthority_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_nameColumn {
                get {
                    return this.columnmenuauthority_group_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_descColumn {
                get {
                    return this.columnmenuauthority_group_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_groupRow this[int index] {
                get {
                    return ((_36049_menuauthority_groupRow)(this.Rows[index]));
                }
            }
            
            public event _36049_menuauthority_groupRowChangeEventHandler _36049_menuauthority_groupRowChanging;
            
            public event _36049_menuauthority_groupRowChangeEventHandler _36049_menuauthority_groupRowChanged;
            
            public event _36049_menuauthority_groupRowChangeEventHandler _36049_menuauthority_groupRowDeleting;
            
            public event _36049_menuauthority_groupRowChangeEventHandler _36049_menuauthority_groupRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_menuauthority_groupRow(_36049_menuauthority_groupRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_groupRow Add_36049_menuauthority_groupRow(int menuauthority_group_id, string menuauthority_group_name, string menuauthority_group_desc) {
                _36049_menuauthority_groupRow row_36049_menuauthority_groupRow = ((_36049_menuauthority_groupRow)(this.NewRow()));
                row_36049_menuauthority_groupRow.ItemArray = new object[] {
                        menuauthority_group_id,
                        menuauthority_group_name,
                        menuauthority_group_desc};
                this.Rows.Add(row_36049_menuauthority_groupRow);
                return row_36049_menuauthority_groupRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_groupRow FindBymenuauthority_group_id(int menuauthority_group_id) {
                return ((_36049_menuauthority_groupRow)(this.Rows.Find(new object[] {
                            menuauthority_group_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_menuauthority_groupDataTable cln = ((_36049_menuauthority_groupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_menuauthority_groupDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmenuauthority_group_id = base.Columns["menuauthority_group_id"];
                this.columnmenuauthority_group_name = base.Columns["menuauthority_group_name"];
                this.columnmenuauthority_group_desc = base.Columns["menuauthority_group_desc"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmenuauthority_group_id = new System.Data.DataColumn("menuauthority_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_id);
                this.columnmenuauthority_group_name = new System.Data.DataColumn("menuauthority_group_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_name);
                this.columnmenuauthority_group_desc = new System.Data.DataColumn("menuauthority_group_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_desc);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnmenuauthority_group_id}, true));
                this.columnmenuauthority_group_id.AllowDBNull = false;
                this.columnmenuauthority_group_id.Unique = true;
                this.columnmenuauthority_group_name.MaxLength = 50;
                this.columnmenuauthority_group_desc.MaxLength = 50;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_menuauthority_groupRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_menuauthority_groupRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_menuauthority_groupRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_menuauthority_groupDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_menuauthority_group");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_menuauthority_group");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_groupRow New_36049_menuauthority_groupRow() {
                return ((_36049_menuauthority_groupRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_menuauthority_groupRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_menuauthority_groupRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_menuauthority_groupRowChanged != null)) {
                    this._36049_menuauthority_groupRowChanged(this, new _36049_menuauthority_groupRowChangeEvent(((_36049_menuauthority_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_menuauthority_groupRowChanging != null)) {
                    this._36049_menuauthority_groupRowChanging(this, new _36049_menuauthority_groupRowChangeEvent(((_36049_menuauthority_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_menuauthority_groupRowDeleted != null)) {
                    this._36049_menuauthority_groupRowDeleted(this, new _36049_menuauthority_groupRowChangeEvent(((_36049_menuauthority_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_menuauthority_groupRowDeleting != null)) {
                    this._36049_menuauthority_groupRowDeleting(this, new _36049_menuauthority_groupRowChangeEvent(((_36049_menuauthority_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_menuauthority_groupRow(_36049_menuauthority_groupRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_menuauthority_groupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_menuauthority_group_detailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columngroup_detail_id;
            
            private System.Data.DataColumn columnmenuauthority_group_id;
            
            private System.Data.DataColumn columnmenuauthority_id;
            
            private System.Data.DataColumn columnfullcontrol;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_group_detailDataTable() {
                this.TableName = "36049_menuauthority_group_detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_menuauthority_group_detailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_menuauthority_group_detailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn group_detail_idColumn {
                get {
                    return this.columngroup_detail_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_idColumn {
                get {
                    return this.columnmenuauthority_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_idColumn {
                get {
                    return this.columnmenuauthority_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fullcontrolColumn {
                get {
                    return this.columnfullcontrol;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_group_detailRow this[int index] {
                get {
                    return ((_36049_menuauthority_group_detailRow)(this.Rows[index]));
                }
            }
            
            public event _36049_menuauthority_group_detailRowChangeEventHandler _36049_menuauthority_group_detailRowChanging;
            
            public event _36049_menuauthority_group_detailRowChangeEventHandler _36049_menuauthority_group_detailRowChanged;
            
            public event _36049_menuauthority_group_detailRowChangeEventHandler _36049_menuauthority_group_detailRowDeleting;
            
            public event _36049_menuauthority_group_detailRowChangeEventHandler _36049_menuauthority_group_detailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_menuauthority_group_detailRow(_36049_menuauthority_group_detailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_group_detailRow Add_36049_menuauthority_group_detailRow(string menuauthority_group_id, string menuauthority_id, bool fullcontrol) {
                _36049_menuauthority_group_detailRow row_36049_menuauthority_group_detailRow = ((_36049_menuauthority_group_detailRow)(this.NewRow()));
                row_36049_menuauthority_group_detailRow.ItemArray = new object[] {
                        null,
                        menuauthority_group_id,
                        menuauthority_id,
                        fullcontrol};
                this.Rows.Add(row_36049_menuauthority_group_detailRow);
                return row_36049_menuauthority_group_detailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_group_detailRow FindBygroup_detail_id(int group_detail_id) {
                return ((_36049_menuauthority_group_detailRow)(this.Rows.Find(new object[] {
                            group_detail_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_menuauthority_group_detailDataTable cln = ((_36049_menuauthority_group_detailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_menuauthority_group_detailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columngroup_detail_id = base.Columns["group_detail_id"];
                this.columnmenuauthority_group_id = base.Columns["menuauthority_group_id"];
                this.columnmenuauthority_id = base.Columns["menuauthority_id"];
                this.columnfullcontrol = base.Columns["fullcontrol"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columngroup_detail_id = new System.Data.DataColumn("group_detail_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_detail_id);
                this.columnmenuauthority_group_id = new System.Data.DataColumn("menuauthority_group_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_id);
                this.columnmenuauthority_id = new System.Data.DataColumn("menuauthority_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_id);
                this.columnfullcontrol = new System.Data.DataColumn("fullcontrol", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullcontrol);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columngroup_detail_id}, true));
                this.columngroup_detail_id.AutoIncrement = true;
                this.columngroup_detail_id.AllowDBNull = false;
                this.columngroup_detail_id.ReadOnly = true;
                this.columngroup_detail_id.Unique = true;
                this.columnmenuauthority_group_id.MaxLength = 50;
                this.columnmenuauthority_id.MaxLength = 50;
                this.columnfullcontrol.AllowDBNull = false;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_menuauthority_group_detailRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_menuauthority_group_detailRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_menuauthority_group_detailRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_menuauthority_group_detailDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_menuauthority_group_detail");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_menuauthority_group_detail");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_group_detailRow New_36049_menuauthority_group_detailRow() {
                return ((_36049_menuauthority_group_detailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_menuauthority_group_detailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_menuauthority_group_detailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_menuauthority_group_detailRowChanged != null)) {
                    this._36049_menuauthority_group_detailRowChanged(this, new _36049_menuauthority_group_detailRowChangeEvent(((_36049_menuauthority_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_menuauthority_group_detailRowChanging != null)) {
                    this._36049_menuauthority_group_detailRowChanging(this, new _36049_menuauthority_group_detailRowChangeEvent(((_36049_menuauthority_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_menuauthority_group_detailRowDeleted != null)) {
                    this._36049_menuauthority_group_detailRowDeleted(this, new _36049_menuauthority_group_detailRowChangeEvent(((_36049_menuauthority_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_menuauthority_group_detailRowDeleting != null)) {
                    this._36049_menuauthority_group_detailRowDeleting(this, new _36049_menuauthority_group_detailRowChangeEvent(((_36049_menuauthority_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_menuauthority_group_detailRow(_36049_menuauthority_group_detailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_menuauthority_group_detailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_scoreDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnbig_issue;
            
            private System.Data.DataColumn columnsum_score;
            
            private System.Data.DataColumn columnavg_score;
            
            private System.Data.DataColumn columnpercentage;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_scoreDataTable() {
                this.TableName = "36049_score";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_scoreDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_scoreDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn big_issueColumn {
                get {
                    return this.columnbig_issue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sum_scoreColumn {
                get {
                    return this.columnsum_score;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn avg_scoreColumn {
                get {
                    return this.columnavg_score;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn percentageColumn {
                get {
                    return this.columnpercentage;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_scoreRow this[int index] {
                get {
                    return ((_36049_scoreRow)(this.Rows[index]));
                }
            }
            
            public event _36049_scoreRowChangeEventHandler _36049_scoreRowChanging;
            
            public event _36049_scoreRowChangeEventHandler _36049_scoreRowChanged;
            
            public event _36049_scoreRowChangeEventHandler _36049_scoreRowDeleting;
            
            public event _36049_scoreRowChangeEventHandler _36049_scoreRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_scoreRow(_36049_scoreRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_scoreRow Add_36049_scoreRow(string uname, string big_issue, string sum_score, string avg_score, string percentage) {
                _36049_scoreRow row_36049_scoreRow = ((_36049_scoreRow)(this.NewRow()));
                row_36049_scoreRow.ItemArray = new object[] {
                        null,
                        uname,
                        big_issue,
                        sum_score,
                        avg_score,
                        percentage};
                this.Rows.Add(row_36049_scoreRow);
                return row_36049_scoreRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_scoreRow FindByid(int id) {
                return ((_36049_scoreRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_scoreDataTable cln = ((_36049_scoreDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_scoreDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuname = base.Columns["uname"];
                this.columnbig_issue = base.Columns["big_issue"];
                this.columnsum_score = base.Columns["sum_score"];
                this.columnavg_score = base.Columns["avg_score"];
                this.columnpercentage = base.Columns["percentage"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnbig_issue = new System.Data.DataColumn("big_issue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbig_issue);
                this.columnsum_score = new System.Data.DataColumn("sum_score", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_score);
                this.columnavg_score = new System.Data.DataColumn("avg_score", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnavg_score);
                this.columnpercentage = new System.Data.DataColumn("percentage", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercentage);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnuname.MaxLength = 50;
                this.columnbig_issue.MaxLength = 50;
                this.columnsum_score.MaxLength = 50;
                this.columnavg_score.MaxLength = 50;
                this.columnpercentage.MaxLength = 50;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_scoreRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_scoreRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_scoreRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_scoreDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_score");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_score");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_scoreRow New_36049_scoreRow() {
                return ((_36049_scoreRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_scoreRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_scoreRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_scoreRowChanged != null)) {
                    this._36049_scoreRowChanged(this, new _36049_scoreRowChangeEvent(((_36049_scoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_scoreRowChanging != null)) {
                    this._36049_scoreRowChanging(this, new _36049_scoreRowChangeEvent(((_36049_scoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_scoreRowDeleted != null)) {
                    this._36049_scoreRowDeleted(this, new _36049_scoreRowChangeEvent(((_36049_scoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_scoreRowDeleting != null)) {
                    this._36049_scoreRowDeleting(this, new _36049_scoreRowChangeEvent(((_36049_scoreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_scoreRow(_36049_scoreRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_scoreDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049_score_detailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnbig_issue;
            
            private System.Data.DataColumn columnsmall_issue;
            
            private System.Data.DataColumn column1;
            
            private System.Data.DataColumn column2;
            
            private System.Data.DataColumn column3;
            
            private System.Data.DataColumn column4;
            
            private System.Data.DataColumn column5;
            
            private System.Data.DataColumn columnself;
            
            private System.Data.DataColumn columnget_score;
            
            private System.Data.DataColumn columnget_score_avg;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_score_detailDataTable() {
                this.TableName = "36049_score_detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_score_detailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049_score_detailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn big_issueColumn {
                get {
                    return this.columnbig_issue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn small_issueColumn {
                get {
                    return this.columnsmall_issue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _1Column {
                get {
                    return this.column1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _2Column {
                get {
                    return this.column2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _3Column {
                get {
                    return this.column3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _4Column {
                get {
                    return this.column4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _5Column {
                get {
                    return this.column5;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn selfColumn {
                get {
                    return this.columnself;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn get_scoreColumn {
                get {
                    return this.columnget_score;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn get_score_avgColumn {
                get {
                    return this.columnget_score_avg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_score_detailRow this[int index] {
                get {
                    return ((_36049_score_detailRow)(this.Rows[index]));
                }
            }
            
            public event _36049_score_detailRowChangeEventHandler _36049_score_detailRowChanging;
            
            public event _36049_score_detailRowChangeEventHandler _36049_score_detailRowChanged;
            
            public event _36049_score_detailRowChangeEventHandler _36049_score_detailRowDeleting;
            
            public event _36049_score_detailRowChangeEventHandler _36049_score_detailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049_score_detailRow(_36049_score_detailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_score_detailRow Add_36049_score_detailRow(string uname, string big_issue, string small_issue, string _1, string _2, string _3, string _4, string _5, string self, string get_score, string get_score_avg) {
                _36049_score_detailRow row_36049_score_detailRow = ((_36049_score_detailRow)(this.NewRow()));
                row_36049_score_detailRow.ItemArray = new object[] {
                        null,
                        uname,
                        big_issue,
                        small_issue,
                        _1,
                        _2,
                        _3,
                        _4,
                        _5,
                        self,
                        get_score,
                        get_score_avg};
                this.Rows.Add(row_36049_score_detailRow);
                return row_36049_score_detailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_score_detailRow FindByid(int id) {
                return ((_36049_score_detailRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049_score_detailDataTable cln = ((_36049_score_detailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049_score_detailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuname = base.Columns["uname"];
                this.columnbig_issue = base.Columns["big_issue"];
                this.columnsmall_issue = base.Columns["small_issue"];
                this.column1 = base.Columns["1"];
                this.column2 = base.Columns["2"];
                this.column3 = base.Columns["3"];
                this.column4 = base.Columns["4"];
                this.column5 = base.Columns["5"];
                this.columnself = base.Columns["self"];
                this.columnget_score = base.Columns["get_score"];
                this.columnget_score_avg = base.Columns["get_score_avg"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnbig_issue = new System.Data.DataColumn("big_issue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnbig_issue);
                this.columnsmall_issue = new System.Data.DataColumn("small_issue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsmall_issue);
                this.column1 = new System.Data.DataColumn("1", typeof(string), null, System.Data.MappingType.Element);
                this.column1.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_1");
                this.column1.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_1Column");
                this.column1.ExtendedProperties.Add("Generator_UserColumnName", "1");
                base.Columns.Add(this.column1);
                this.column2 = new System.Data.DataColumn("2", typeof(string), null, System.Data.MappingType.Element);
                this.column2.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_2");
                this.column2.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_2Column");
                this.column2.ExtendedProperties.Add("Generator_UserColumnName", "2");
                base.Columns.Add(this.column2);
                this.column3 = new System.Data.DataColumn("3", typeof(string), null, System.Data.MappingType.Element);
                this.column3.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_3");
                this.column3.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_3Column");
                this.column3.ExtendedProperties.Add("Generator_UserColumnName", "3");
                base.Columns.Add(this.column3);
                this.column4 = new System.Data.DataColumn("4", typeof(string), null, System.Data.MappingType.Element);
                this.column4.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_4");
                this.column4.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_4Column");
                this.column4.ExtendedProperties.Add("Generator_UserColumnName", "4");
                base.Columns.Add(this.column4);
                this.column5 = new System.Data.DataColumn("5", typeof(string), null, System.Data.MappingType.Element);
                this.column5.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_5");
                this.column5.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_5Column");
                this.column5.ExtendedProperties.Add("Generator_UserColumnName", "5");
                base.Columns.Add(this.column5);
                this.columnself = new System.Data.DataColumn("self", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnself);
                this.columnget_score = new System.Data.DataColumn("get_score", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnget_score);
                this.columnget_score_avg = new System.Data.DataColumn("get_score_avg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnget_score_avg);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnuname.MaxLength = 50;
                this.columnbig_issue.MaxLength = 50;
                this.columnsmall_issue.MaxLength = 50;
                this.column1.MaxLength = 50;
                this.column2.MaxLength = 50;
                this.column3.MaxLength = 50;
                this.column4.MaxLength = 50;
                this.column5.MaxLength = 50;
                this.columnself.MaxLength = 50;
                this.columnget_score.MaxLength = 50;
                this.columnget_score_avg.MaxLength = 50;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049_score_detailRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049_score_detailRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049_score_detailRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049_score_detailDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049_score_detail");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049_score_detail");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_score_detailRow New_36049_score_detailRow() {
                return ((_36049_score_detailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049_score_detailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049_score_detailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049_score_detailRowChanged != null)) {
                    this._36049_score_detailRowChanged(this, new _36049_score_detailRowChangeEvent(((_36049_score_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049_score_detailRowChanging != null)) {
                    this._36049_score_detailRowChanging(this, new _36049_score_detailRowChangeEvent(((_36049_score_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049_score_detailRowDeleted != null)) {
                    this._36049_score_detailRowDeleted(this, new _36049_score_detailRowChangeEvent(((_36049_score_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049_score_detailRowDeleting != null)) {
                    this._36049_score_detailRowDeleting(this, new _36049_score_detailRowChangeEvent(((_36049_score_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049_score_detailRow(_36049_score_detailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049_score_detailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class _36049userDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuname360;
            
            private System.Data.DataColumn columnmenuauthority_group_id;
            
            private System.Data.DataColumn columnpwd360;
            
            private System.Data.DataColumn columncompany_id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049userDataTable() {
                this.TableName = "36049user";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049userDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected _36049userDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn uname360Column {
                get {
                    return this.columnuname360;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_idColumn {
                get {
                    return this.columnmenuauthority_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn pwd360Column {
                get {
                    return this.columnpwd360;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn company_idColumn {
                get {
                    return this.columncompany_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049userRow this[int index] {
                get {
                    return ((_36049userRow)(this.Rows[index]));
                }
            }
            
            public event _36049userRowChangeEventHandler _36049userRowChanging;
            
            public event _36049userRowChangeEventHandler _36049userRowChanged;
            
            public event _36049userRowChangeEventHandler _36049userRowDeleting;
            
            public event _36049userRowChangeEventHandler _36049userRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add_36049userRow(_36049userRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049userRow Add_36049userRow(string uname360, int menuauthority_group_id, string pwd360, string company_id) {
                _36049userRow row_36049userRow = ((_36049userRow)(this.NewRow()));
                row_36049userRow.ItemArray = new object[] {
                        uname360,
                        menuauthority_group_id,
                        pwd360,
                        company_id};
                this.Rows.Add(row_36049userRow);
                return row_36049userRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049userRow FindByuname360(string uname360) {
                return ((_36049userRow)(this.Rows.Find(new object[] {
                            uname360})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                _36049userDataTable cln = ((_36049userDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new _36049userDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuname360 = base.Columns["uname360"];
                this.columnmenuauthority_group_id = base.Columns["menuauthority_group_id"];
                this.columnpwd360 = base.Columns["pwd360"];
                this.columncompany_id = base.Columns["company_id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuname360 = new System.Data.DataColumn("uname360", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname360);
                this.columnmenuauthority_group_id = new System.Data.DataColumn("menuauthority_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_id);
                this.columnpwd360 = new System.Data.DataColumn("pwd360", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpwd360);
                this.columncompany_id = new System.Data.DataColumn("company_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_id);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuname360}, true));
                this.columnuname360.AllowDBNull = false;
                this.columnuname360.Unique = true;
                this.columnuname360.MaxLength = 50;
                this.columnpwd360.MaxLength = 50;
                this.columncompany_id.MaxLength = 50;
                this.ExtendedProperties.Add("Generator_RowClassName", "_36049userRow");
                this.ExtendedProperties.Add("Generator_RowEvArgName", "_36049userRowChangeEvent");
                this.ExtendedProperties.Add("Generator_RowEvHandlerName", "_36049userRowChangeEventHandler");
                this.ExtendedProperties.Add("Generator_TableClassName", "_36049userDataTable");
                this.ExtendedProperties.Add("Generator_TablePropName", "_36049user");
                this.ExtendedProperties.Add("Generator_UserTableName", "36049user");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049userRow New_36049userRow() {
                return ((_36049userRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new _36049userRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(_36049userRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._36049userRowChanged != null)) {
                    this._36049userRowChanged(this, new _36049userRowChangeEvent(((_36049userRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._36049userRowChanging != null)) {
                    this._36049userRowChanging(this, new _36049userRowChangeEvent(((_36049userRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._36049userRowDeleted != null)) {
                    this._36049userRowDeleted(this, new _36049userRowChangeEvent(((_36049userRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._36049userRowDeleting != null)) {
                    this._36049userRowDeleting(this, new _36049userRowChangeEvent(((_36049userRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove_36049userRow(_36049userRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "_36049userDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class competency_st_requireDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncst_require_id;
            
            private System.Data.DataColumn columncst_group_id;
            
            private System.Data.DataColumn columncst_subject_id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public competency_st_requireDataTable() {
                this.TableName = "competency_st_require";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal competency_st_requireDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected competency_st_requireDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_require_idColumn {
                get {
                    return this.columncst_require_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_group_idColumn {
                get {
                    return this.columncst_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_subject_idColumn {
                get {
                    return this.columncst_subject_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public competency_st_requireRow this[int index] {
                get {
                    return ((competency_st_requireRow)(this.Rows[index]));
                }
            }
            
            public event competency_st_requireRowChangeEventHandler competency_st_requireRowChanging;
            
            public event competency_st_requireRowChangeEventHandler competency_st_requireRowChanged;
            
            public event competency_st_requireRowChangeEventHandler competency_st_requireRowDeleting;
            
            public event competency_st_requireRowChangeEventHandler competency_st_requireRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addcompetency_st_requireRow(competency_st_requireRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public competency_st_requireRow Addcompetency_st_requireRow(int cst_group_id, int cst_subject_id) {
                competency_st_requireRow rowcompetency_st_requireRow = ((competency_st_requireRow)(this.NewRow()));
                rowcompetency_st_requireRow.ItemArray = new object[] {
                        null,
                        cst_group_id,
                        cst_subject_id};
                this.Rows.Add(rowcompetency_st_requireRow);
                return rowcompetency_st_requireRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public competency_st_requireRow FindBycst_require_id(int cst_require_id) {
                return ((competency_st_requireRow)(this.Rows.Find(new object[] {
                            cst_require_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                competency_st_requireDataTable cln = ((competency_st_requireDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new competency_st_requireDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncst_require_id = base.Columns["cst_require_id"];
                this.columncst_group_id = base.Columns["cst_group_id"];
                this.columncst_subject_id = base.Columns["cst_subject_id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncst_require_id = new System.Data.DataColumn("cst_require_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_require_id);
                this.columncst_group_id = new System.Data.DataColumn("cst_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_group_id);
                this.columncst_subject_id = new System.Data.DataColumn("cst_subject_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_subject_id);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncst_require_id}, true));
                this.columncst_require_id.AutoIncrement = true;
                this.columncst_require_id.AllowDBNull = false;
                this.columncst_require_id.ReadOnly = true;
                this.columncst_require_id.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public competency_st_requireRow Newcompetency_st_requireRow() {
                return ((competency_st_requireRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new competency_st_requireRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(competency_st_requireRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.competency_st_requireRowChanged != null)) {
                    this.competency_st_requireRowChanged(this, new competency_st_requireRowChangeEvent(((competency_st_requireRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.competency_st_requireRowChanging != null)) {
                    this.competency_st_requireRowChanging(this, new competency_st_requireRowChangeEvent(((competency_st_requireRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.competency_st_requireRowDeleted != null)) {
                    this.competency_st_requireRowDeleted(this, new competency_st_requireRowChangeEvent(((competency_st_requireRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.competency_st_requireRowDeleting != null)) {
                    this.competency_st_requireRowDeleting(this, new competency_st_requireRowChangeEvent(((competency_st_requireRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removecompetency_st_requireRow(competency_st_requireRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "competency_st_requireDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtpropertiesDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnobjectid;
            
            private System.Data.DataColumn columnproperty;
            
            private System.Data.DataColumn columnvalue;
            
            private System.Data.DataColumn columnuvalue;
            
            private System.Data.DataColumn columnlvalue;
            
            private System.Data.DataColumn columnversion;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtpropertiesDataTable() {
                this.TableName = "dtproperties";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtpropertiesDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtpropertiesDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn objectidColumn {
                get {
                    return this.columnobjectid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn propertyColumn {
                get {
                    return this.columnproperty;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn uvalueColumn {
                get {
                    return this.columnuvalue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn lvalueColumn {
                get {
                    return this.columnlvalue;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn versionColumn {
                get {
                    return this.columnversion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtpropertiesRow this[int index] {
                get {
                    return ((dtpropertiesRow)(this.Rows[index]));
                }
            }
            
            public event dtpropertiesRowChangeEventHandler dtpropertiesRowChanging;
            
            public event dtpropertiesRowChangeEventHandler dtpropertiesRowChanged;
            
            public event dtpropertiesRowChangeEventHandler dtpropertiesRowDeleting;
            
            public event dtpropertiesRowChangeEventHandler dtpropertiesRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtpropertiesRow(dtpropertiesRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtpropertiesRow AdddtpropertiesRow(int objectid, string property, string value, string uvalue, byte[] lvalue, int version) {
                dtpropertiesRow rowdtpropertiesRow = ((dtpropertiesRow)(this.NewRow()));
                rowdtpropertiesRow.ItemArray = new object[] {
                        null,
                        objectid,
                        property,
                        value,
                        uvalue,
                        lvalue,
                        version};
                this.Rows.Add(rowdtpropertiesRow);
                return rowdtpropertiesRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtpropertiesRow FindByidproperty(int id, string property) {
                return ((dtpropertiesRow)(this.Rows.Find(new object[] {
                            id,
                            property})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dtpropertiesDataTable cln = ((dtpropertiesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dtpropertiesDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnobjectid = base.Columns["objectid"];
                this.columnproperty = base.Columns["property"];
                this.columnvalue = base.Columns["value"];
                this.columnuvalue = base.Columns["uvalue"];
                this.columnlvalue = base.Columns["lvalue"];
                this.columnversion = base.Columns["version"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnobjectid = new System.Data.DataColumn("objectid", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjectid);
                this.columnproperty = new System.Data.DataColumn("property", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnproperty);
                this.columnvalue = new System.Data.DataColumn("value", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.columnuvalue = new System.Data.DataColumn("uvalue", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuvalue);
                this.columnlvalue = new System.Data.DataColumn("lvalue", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlvalue);
                this.columnversion = new System.Data.DataColumn("version", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnversion);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid,
                                this.columnproperty}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnproperty.AllowDBNull = false;
                this.columnproperty.MaxLength = 64;
                this.columnvalue.MaxLength = 255;
                this.columnuvalue.MaxLength = 255;
                this.columnversion.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtpropertiesRow NewdtpropertiesRow() {
                return ((dtpropertiesRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dtpropertiesRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dtpropertiesRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtpropertiesRowChanged != null)) {
                    this.dtpropertiesRowChanged(this, new dtpropertiesRowChangeEvent(((dtpropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtpropertiesRowChanging != null)) {
                    this.dtpropertiesRowChanging(this, new dtpropertiesRowChangeEvent(((dtpropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtpropertiesRowDeleted != null)) {
                    this.dtpropertiesRowDeleted(this, new dtpropertiesRowChangeEvent(((dtpropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtpropertiesRowDeleting != null)) {
                    this.dtpropertiesRowDeleting(this, new dtpropertiesRowChangeEvent(((dtpropertiesRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtpropertiesRow(dtpropertiesRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtpropertiesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class evaluationDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnevaluation_id;
            
            private System.Data.DataColumn columnevaluation_no;
            
            private System.Data.DataColumn columnuname_eva;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnstaff_eva_relation;
            
            private System.Data.DataColumn columnstaff_id_totalscore;
            
            private System.Data.DataColumn columnsavedate;
            
            private System.Data.DataColumn columnsubmitdate;
            
            private System.Data.DataColumn columnsubmit_status;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluationDataTable() {
                this.TableName = "evaluation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal evaluationDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected evaluationDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_idColumn {
                get {
                    return this.columnevaluation_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_noColumn {
                get {
                    return this.columnevaluation_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn uname_evaColumn {
                get {
                    return this.columnuname_eva;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_eva_relationColumn {
                get {
                    return this.columnstaff_eva_relation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_id_totalscoreColumn {
                get {
                    return this.columnstaff_id_totalscore;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn savedateColumn {
                get {
                    return this.columnsavedate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn submitdateColumn {
                get {
                    return this.columnsubmitdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn submit_statusColumn {
                get {
                    return this.columnsubmit_status;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluationRow this[int index] {
                get {
                    return ((evaluationRow)(this.Rows[index]));
                }
            }
            
            public event evaluationRowChangeEventHandler evaluationRowChanging;
            
            public event evaluationRowChangeEventHandler evaluationRowChanged;
            
            public event evaluationRowChangeEventHandler evaluationRowDeleting;
            
            public event evaluationRowChangeEventHandler evaluationRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddevaluationRow(evaluationRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluationRow AddevaluationRow(int evaluation_no, string uname_eva, staff_indexRow parentstaff_indexRowByFK_evaluation_staff_index, int staff_eva_relation, decimal staff_id_totalscore, System.DateTime savedate, System.DateTime submitdate, bool submit_status) {
                evaluationRow rowevaluationRow = ((evaluationRow)(this.NewRow()));
                rowevaluationRow.ItemArray = new object[] {
                        null,
                        evaluation_no,
                        uname_eva,
                        parentstaff_indexRowByFK_evaluation_staff_index[0],
                        staff_eva_relation,
                        staff_id_totalscore,
                        savedate,
                        submitdate,
                        submit_status};
                this.Rows.Add(rowevaluationRow);
                return rowevaluationRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluationRow FindByevaluation_id(int evaluation_id) {
                return ((evaluationRow)(this.Rows.Find(new object[] {
                            evaluation_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                evaluationDataTable cln = ((evaluationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new evaluationDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnevaluation_id = base.Columns["evaluation_id"];
                this.columnevaluation_no = base.Columns["evaluation_no"];
                this.columnuname_eva = base.Columns["uname_eva"];
                this.columnuname = base.Columns["uname"];
                this.columnstaff_eva_relation = base.Columns["staff_eva_relation"];
                this.columnstaff_id_totalscore = base.Columns["staff_id_totalscore"];
                this.columnsavedate = base.Columns["savedate"];
                this.columnsubmitdate = base.Columns["submitdate"];
                this.columnsubmit_status = base.Columns["submit_status"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnevaluation_id = new System.Data.DataColumn("evaluation_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_id);
                this.columnevaluation_no = new System.Data.DataColumn("evaluation_no", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_no);
                this.columnuname_eva = new System.Data.DataColumn("uname_eva", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname_eva);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnstaff_eva_relation = new System.Data.DataColumn("staff_eva_relation", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_eva_relation);
                this.columnstaff_id_totalscore = new System.Data.DataColumn("staff_id_totalscore", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_id_totalscore);
                this.columnsavedate = new System.Data.DataColumn("savedate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsavedate);
                this.columnsubmitdate = new System.Data.DataColumn("submitdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubmitdate);
                this.columnsubmit_status = new System.Data.DataColumn("submit_status", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubmit_status);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnevaluation_id}, true));
                this.columnevaluation_id.AutoIncrement = true;
                this.columnevaluation_id.AllowDBNull = false;
                this.columnevaluation_id.ReadOnly = true;
                this.columnevaluation_id.Unique = true;
                this.columnuname_eva.MaxLength = 50;
                this.columnuname.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluationRow NewevaluationRow() {
                return ((evaluationRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new evaluationRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(evaluationRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.evaluationRowChanged != null)) {
                    this.evaluationRowChanged(this, new evaluationRowChangeEvent(((evaluationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.evaluationRowChanging != null)) {
                    this.evaluationRowChanging(this, new evaluationRowChangeEvent(((evaluationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.evaluationRowDeleted != null)) {
                    this.evaluationRowDeleted(this, new evaluationRowChangeEvent(((evaluationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.evaluationRowDeleting != null)) {
                    this.evaluationRowDeleting(this, new evaluationRowChangeEvent(((evaluationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveevaluationRow(evaluationRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "evaluationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class evaluation_detailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnevaluation_detail_id;
            
            private System.Data.DataColumn columnevaluation_id;
            
            private System.Data.DataColumn columnevaluation_subject_id;
            
            private System.Data.DataColumn columnevaluation_sub_subject_id;
            
            private System.Data.DataColumn columnevaluation_score;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_detailDataTable() {
                this.TableName = "evaluation_detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal evaluation_detailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected evaluation_detailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_detail_idColumn {
                get {
                    return this.columnevaluation_detail_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_idColumn {
                get {
                    return this.columnevaluation_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_subject_idColumn {
                get {
                    return this.columnevaluation_subject_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_sub_subject_idColumn {
                get {
                    return this.columnevaluation_sub_subject_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_scoreColumn {
                get {
                    return this.columnevaluation_score;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_detailRow this[int index] {
                get {
                    return ((evaluation_detailRow)(this.Rows[index]));
                }
            }
            
            public event evaluation_detailRowChangeEventHandler evaluation_detailRowChanging;
            
            public event evaluation_detailRowChangeEventHandler evaluation_detailRowChanged;
            
            public event evaluation_detailRowChangeEventHandler evaluation_detailRowDeleting;
            
            public event evaluation_detailRowChangeEventHandler evaluation_detailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addevaluation_detailRow(evaluation_detailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_detailRow Addevaluation_detailRow(int evaluation_id, int evaluation_subject_id, int evaluation_sub_subject_id, decimal evaluation_score) {
                evaluation_detailRow rowevaluation_detailRow = ((evaluation_detailRow)(this.NewRow()));
                rowevaluation_detailRow.ItemArray = new object[] {
                        null,
                        evaluation_id,
                        evaluation_subject_id,
                        evaluation_sub_subject_id,
                        evaluation_score};
                this.Rows.Add(rowevaluation_detailRow);
                return rowevaluation_detailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                evaluation_detailDataTable cln = ((evaluation_detailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new evaluation_detailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnevaluation_detail_id = base.Columns["evaluation_detail_id"];
                this.columnevaluation_id = base.Columns["evaluation_id"];
                this.columnevaluation_subject_id = base.Columns["evaluation_subject_id"];
                this.columnevaluation_sub_subject_id = base.Columns["evaluation_sub_subject_id"];
                this.columnevaluation_score = base.Columns["evaluation_score"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnevaluation_detail_id = new System.Data.DataColumn("evaluation_detail_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_detail_id);
                this.columnevaluation_id = new System.Data.DataColumn("evaluation_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_id);
                this.columnevaluation_subject_id = new System.Data.DataColumn("evaluation_subject_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_subject_id);
                this.columnevaluation_sub_subject_id = new System.Data.DataColumn("evaluation_sub_subject_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_sub_subject_id);
                this.columnevaluation_score = new System.Data.DataColumn("evaluation_score", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_score);
                this.columnevaluation_detail_id.AutoIncrement = true;
                this.columnevaluation_detail_id.AllowDBNull = false;
                this.columnevaluation_detail_id.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_detailRow Newevaluation_detailRow() {
                return ((evaluation_detailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new evaluation_detailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(evaluation_detailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.evaluation_detailRowChanged != null)) {
                    this.evaluation_detailRowChanged(this, new evaluation_detailRowChangeEvent(((evaluation_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.evaluation_detailRowChanging != null)) {
                    this.evaluation_detailRowChanging(this, new evaluation_detailRowChangeEvent(((evaluation_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.evaluation_detailRowDeleted != null)) {
                    this.evaluation_detailRowDeleted(this, new evaluation_detailRowChangeEvent(((evaluation_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.evaluation_detailRowDeleting != null)) {
                    this.evaluation_detailRowDeleting(this, new evaluation_detailRowChangeEvent(((evaluation_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeevaluation_detailRow(evaluation_detailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "evaluation_detailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class evaluation_indexDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnevaluation_no;
            
            private System.Data.DataColumn columnevaluation_name;
            
            private System.Data.DataColumn columnstartdate;
            
            private System.Data.DataColumn columnevaluation_active;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_indexDataTable() {
                this.TableName = "evaluation_index";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal evaluation_indexDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected evaluation_indexDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_noColumn {
                get {
                    return this.columnevaluation_no;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_nameColumn {
                get {
                    return this.columnevaluation_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn startdateColumn {
                get {
                    return this.columnstartdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn evaluation_activeColumn {
                get {
                    return this.columnevaluation_active;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_indexRow this[int index] {
                get {
                    return ((evaluation_indexRow)(this.Rows[index]));
                }
            }
            
            public event evaluation_indexRowChangeEventHandler evaluation_indexRowChanging;
            
            public event evaluation_indexRowChangeEventHandler evaluation_indexRowChanged;
            
            public event evaluation_indexRowChangeEventHandler evaluation_indexRowDeleting;
            
            public event evaluation_indexRowChangeEventHandler evaluation_indexRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addevaluation_indexRow(evaluation_indexRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_indexRow Addevaluation_indexRow(string evaluation_name, System.DateTime startdate, bool evaluation_active) {
                evaluation_indexRow rowevaluation_indexRow = ((evaluation_indexRow)(this.NewRow()));
                rowevaluation_indexRow.ItemArray = new object[] {
                        null,
                        evaluation_name,
                        startdate,
                        evaluation_active};
                this.Rows.Add(rowevaluation_indexRow);
                return rowevaluation_indexRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_indexRow FindByevaluation_no(int evaluation_no) {
                return ((evaluation_indexRow)(this.Rows.Find(new object[] {
                            evaluation_no})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                evaluation_indexDataTable cln = ((evaluation_indexDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new evaluation_indexDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnevaluation_no = base.Columns["evaluation_no"];
                this.columnevaluation_name = base.Columns["evaluation_name"];
                this.columnstartdate = base.Columns["startdate"];
                this.columnevaluation_active = base.Columns["evaluation_active"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnevaluation_no = new System.Data.DataColumn("evaluation_no", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_no);
                this.columnevaluation_name = new System.Data.DataColumn("evaluation_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_name);
                this.columnstartdate = new System.Data.DataColumn("startdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartdate);
                this.columnevaluation_active = new System.Data.DataColumn("evaluation_active", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnevaluation_active);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnevaluation_no}, true));
                this.columnevaluation_no.AutoIncrement = true;
                this.columnevaluation_no.AllowDBNull = false;
                this.columnevaluation_no.ReadOnly = true;
                this.columnevaluation_no.Unique = true;
                this.columnevaluation_name.MaxLength = 400;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_indexRow Newevaluation_indexRow() {
                return ((evaluation_indexRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new evaluation_indexRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(evaluation_indexRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.evaluation_indexRowChanged != null)) {
                    this.evaluation_indexRowChanged(this, new evaluation_indexRowChangeEvent(((evaluation_indexRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.evaluation_indexRowChanging != null)) {
                    this.evaluation_indexRowChanging(this, new evaluation_indexRowChangeEvent(((evaluation_indexRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.evaluation_indexRowDeleted != null)) {
                    this.evaluation_indexRowDeleted(this, new evaluation_indexRowChangeEvent(((evaluation_indexRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.evaluation_indexRowDeleting != null)) {
                    this.evaluation_indexRowDeleting(this, new evaluation_indexRowChangeEvent(((evaluation_indexRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeevaluation_indexRow(evaluation_indexRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "evaluation_indexDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class kpiDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnkpi_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnkpi_subject;
            
            private System.Data.DataColumn columnkpi_criteria;
            
            private System.Data.DataColumn columnkpi_weight;
            
            private System.Data.DataColumn columnkpi_q1;
            
            private System.Data.DataColumn columnkpi_q2;
            
            private System.Data.DataColumn columnkpi_q3;
            
            private System.Data.DataColumn columnkpi_q4;
            
            private System.Data.DataColumn columnkpi_year;
            
            private System.Data.DataColumn columnkpi_result;
            
            private System.Data.DataColumn columnkpi_previous_yr;
            
            private System.Data.DataColumn columnkpi_target;
            
            private System.Data.DataColumn columnkpi_commit;
            
            private System.Data.DataColumn columnkpi_avg;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public kpiDataTable() {
                this.TableName = "kpi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal kpiDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected kpiDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_idColumn {
                get {
                    return this.columnkpi_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_subjectColumn {
                get {
                    return this.columnkpi_subject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_criteriaColumn {
                get {
                    return this.columnkpi_criteria;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_weightColumn {
                get {
                    return this.columnkpi_weight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_q1Column {
                get {
                    return this.columnkpi_q1;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_q2Column {
                get {
                    return this.columnkpi_q2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_q3Column {
                get {
                    return this.columnkpi_q3;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_q4Column {
                get {
                    return this.columnkpi_q4;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_yearColumn {
                get {
                    return this.columnkpi_year;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_resultColumn {
                get {
                    return this.columnkpi_result;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_previous_yrColumn {
                get {
                    return this.columnkpi_previous_yr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_targetColumn {
                get {
                    return this.columnkpi_target;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_commitColumn {
                get {
                    return this.columnkpi_commit;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn kpi_avgColumn {
                get {
                    return this.columnkpi_avg;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public kpiRow this[int index] {
                get {
                    return ((kpiRow)(this.Rows[index]));
                }
            }
            
            public event kpiRowChangeEventHandler kpiRowChanging;
            
            public event kpiRowChangeEventHandler kpiRowChanged;
            
            public event kpiRowChangeEventHandler kpiRowDeleting;
            
            public event kpiRowChangeEventHandler kpiRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddkpiRow(kpiRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public kpiRow AddkpiRow(staff_indexRow parentstaff_indexRowByFK_kpi_staff_index, string kpi_subject, string kpi_criteria, string kpi_weight, string kpi_q1, string kpi_q2, string kpi_q3, string kpi_q4, string kpi_year, string kpi_result, string kpi_previous_yr, string kpi_target, string kpi_commit, string kpi_avg) {
                kpiRow rowkpiRow = ((kpiRow)(this.NewRow()));
                rowkpiRow.ItemArray = new object[] {
                        null,
                        parentstaff_indexRowByFK_kpi_staff_index[0],
                        kpi_subject,
                        kpi_criteria,
                        kpi_weight,
                        kpi_q1,
                        kpi_q2,
                        kpi_q3,
                        kpi_q4,
                        kpi_year,
                        kpi_result,
                        kpi_previous_yr,
                        kpi_target,
                        kpi_commit,
                        kpi_avg};
                this.Rows.Add(rowkpiRow);
                return rowkpiRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public kpiRow FindBykpi_id(int kpi_id) {
                return ((kpiRow)(this.Rows.Find(new object[] {
                            kpi_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                kpiDataTable cln = ((kpiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new kpiDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkpi_id = base.Columns["kpi_id"];
                this.columnuname = base.Columns["uname"];
                this.columnkpi_subject = base.Columns["kpi_subject"];
                this.columnkpi_criteria = base.Columns["kpi_criteria"];
                this.columnkpi_weight = base.Columns["kpi_weight"];
                this.columnkpi_q1 = base.Columns["kpi_q1"];
                this.columnkpi_q2 = base.Columns["kpi_q2"];
                this.columnkpi_q3 = base.Columns["kpi_q3"];
                this.columnkpi_q4 = base.Columns["kpi_q4"];
                this.columnkpi_year = base.Columns["kpi_year"];
                this.columnkpi_result = base.Columns["kpi_result"];
                this.columnkpi_previous_yr = base.Columns["kpi_previous_yr"];
                this.columnkpi_target = base.Columns["kpi_target"];
                this.columnkpi_commit = base.Columns["kpi_commit"];
                this.columnkpi_avg = base.Columns["kpi_avg"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkpi_id = new System.Data.DataColumn("kpi_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnkpi_subject = new System.Data.DataColumn("kpi_subject", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_subject);
                this.columnkpi_criteria = new System.Data.DataColumn("kpi_criteria", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_criteria);
                this.columnkpi_weight = new System.Data.DataColumn("kpi_weight", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_weight);
                this.columnkpi_q1 = new System.Data.DataColumn("kpi_q1", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_q1);
                this.columnkpi_q2 = new System.Data.DataColumn("kpi_q2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_q2);
                this.columnkpi_q3 = new System.Data.DataColumn("kpi_q3", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_q3);
                this.columnkpi_q4 = new System.Data.DataColumn("kpi_q4", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_q4);
                this.columnkpi_year = new System.Data.DataColumn("kpi_year", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_year);
                this.columnkpi_result = new System.Data.DataColumn("kpi_result", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_result);
                this.columnkpi_previous_yr = new System.Data.DataColumn("kpi_previous_yr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_previous_yr);
                this.columnkpi_target = new System.Data.DataColumn("kpi_target", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_target);
                this.columnkpi_commit = new System.Data.DataColumn("kpi_commit", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_commit);
                this.columnkpi_avg = new System.Data.DataColumn("kpi_avg", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnkpi_avg);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnkpi_id}, true));
                this.columnkpi_id.AutoIncrement = true;
                this.columnkpi_id.AllowDBNull = false;
                this.columnkpi_id.ReadOnly = true;
                this.columnkpi_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnkpi_subject.MaxLength = 300;
                this.columnkpi_criteria.MaxLength = 100;
                this.columnkpi_weight.MaxLength = 50;
                this.columnkpi_q1.MaxLength = 100;
                this.columnkpi_q2.MaxLength = 100;
                this.columnkpi_q3.MaxLength = 100;
                this.columnkpi_q4.MaxLength = 100;
                this.columnkpi_year.MaxLength = 50;
                this.columnkpi_result.MaxLength = 100;
                this.columnkpi_previous_yr.MaxLength = 50;
                this.columnkpi_target.MaxLength = 50;
                this.columnkpi_commit.MaxLength = 50;
                this.columnkpi_avg.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public kpiRow NewkpiRow() {
                return ((kpiRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new kpiRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(kpiRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.kpiRowChanged != null)) {
                    this.kpiRowChanged(this, new kpiRowChangeEvent(((kpiRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.kpiRowChanging != null)) {
                    this.kpiRowChanging(this, new kpiRowChangeEvent(((kpiRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.kpiRowDeleted != null)) {
                    this.kpiRowDeleted(this, new kpiRowChangeEvent(((kpiRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.kpiRowDeleting != null)) {
                    this.kpiRowDeleting(this, new kpiRowChangeEvent(((kpiRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovekpiRow(kpiRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "kpiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_authorityDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnauthority;
            
            private System.Data.DataColumn columnauthority_name;
            
            private System.Data.DataColumn columnline_factory;
            
            private System.Data.DataColumn columnline_office;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_authorityDataTable() {
                this.TableName = "masterdata_authority";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_authorityDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_authorityDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn authorityColumn {
                get {
                    return this.columnauthority;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn authority_nameColumn {
                get {
                    return this.columnauthority_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn line_factoryColumn {
                get {
                    return this.columnline_factory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn line_officeColumn {
                get {
                    return this.columnline_office;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_authorityRow this[int index] {
                get {
                    return ((masterdata_authorityRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_authorityRowChangeEventHandler masterdata_authorityRowChanging;
            
            public event masterdata_authorityRowChangeEventHandler masterdata_authorityRowChanged;
            
            public event masterdata_authorityRowChangeEventHandler masterdata_authorityRowDeleting;
            
            public event masterdata_authorityRowChangeEventHandler masterdata_authorityRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_authorityRow(masterdata_authorityRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_authorityRow Addmasterdata_authorityRow(string authority, string authority_name, string line_factory, string line_office) {
                masterdata_authorityRow rowmasterdata_authorityRow = ((masterdata_authorityRow)(this.NewRow()));
                rowmasterdata_authorityRow.ItemArray = new object[] {
                        authority,
                        authority_name,
                        line_factory,
                        line_office};
                this.Rows.Add(rowmasterdata_authorityRow);
                return rowmasterdata_authorityRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_authorityRow FindByauthority(string authority) {
                return ((masterdata_authorityRow)(this.Rows.Find(new object[] {
                            authority})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_authorityDataTable cln = ((masterdata_authorityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_authorityDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnauthority = base.Columns["authority"];
                this.columnauthority_name = base.Columns["authority_name"];
                this.columnline_factory = base.Columns["line_factory"];
                this.columnline_office = base.Columns["line_office"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnauthority = new System.Data.DataColumn("authority", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnauthority);
                this.columnauthority_name = new System.Data.DataColumn("authority_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnauthority_name);
                this.columnline_factory = new System.Data.DataColumn("line_factory", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnline_factory);
                this.columnline_office = new System.Data.DataColumn("line_office", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnline_office);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnauthority}, true));
                this.columnauthority.AllowDBNull = false;
                this.columnauthority.Unique = true;
                this.columnauthority.MaxLength = 50;
                this.columnauthority_name.MaxLength = 50;
                this.columnline_factory.MaxLength = 50;
                this.columnline_office.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_authorityRow Newmasterdata_authorityRow() {
                return ((masterdata_authorityRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_authorityRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_authorityRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_authorityRowChanged != null)) {
                    this.masterdata_authorityRowChanged(this, new masterdata_authorityRowChangeEvent(((masterdata_authorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_authorityRowChanging != null)) {
                    this.masterdata_authorityRowChanging(this, new masterdata_authorityRowChangeEvent(((masterdata_authorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_authorityRowDeleted != null)) {
                    this.masterdata_authorityRowDeleted(this, new masterdata_authorityRowChangeEvent(((masterdata_authorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_authorityRowDeleting != null)) {
                    this.masterdata_authorityRowDeleting(this, new masterdata_authorityRowChangeEvent(((masterdata_authorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_authorityRow(masterdata_authorityRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_authorityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_competency_coreDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncc_id;
            
            private System.Data.DataColumn columncc_yr;
            
            private System.Data.DataColumn columncc_subject;
            
            private System.Data.DataColumn columnfullscore;
            
            private System.Data.DataColumn columnorder_by;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_coreDataTable() {
                this.TableName = "masterdata_competency_core";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_competency_coreDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_competency_coreDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cc_idColumn {
                get {
                    return this.columncc_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cc_yrColumn {
                get {
                    return this.columncc_yr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cc_subjectColumn {
                get {
                    return this.columncc_subject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn fullscoreColumn {
                get {
                    return this.columnfullscore;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn order_byColumn {
                get {
                    return this.columnorder_by;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_coreRow this[int index] {
                get {
                    return ((masterdata_competency_coreRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_competency_coreRowChangeEventHandler masterdata_competency_coreRowChanging;
            
            public event masterdata_competency_coreRowChangeEventHandler masterdata_competency_coreRowChanged;
            
            public event masterdata_competency_coreRowChangeEventHandler masterdata_competency_coreRowDeleting;
            
            public event masterdata_competency_coreRowChangeEventHandler masterdata_competency_coreRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_competency_coreRow(masterdata_competency_coreRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_coreRow Addmasterdata_competency_coreRow(string cc_yr, string cc_subject, int fullscore, int order_by) {
                masterdata_competency_coreRow rowmasterdata_competency_coreRow = ((masterdata_competency_coreRow)(this.NewRow()));
                rowmasterdata_competency_coreRow.ItemArray = new object[] {
                        null,
                        cc_yr,
                        cc_subject,
                        fullscore,
                        order_by};
                this.Rows.Add(rowmasterdata_competency_coreRow);
                return rowmasterdata_competency_coreRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_coreRow FindBycc_id(int cc_id) {
                return ((masterdata_competency_coreRow)(this.Rows.Find(new object[] {
                            cc_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_competency_coreDataTable cln = ((masterdata_competency_coreDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_competency_coreDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncc_id = base.Columns["cc_id"];
                this.columncc_yr = base.Columns["cc_yr"];
                this.columncc_subject = base.Columns["cc_subject"];
                this.columnfullscore = base.Columns["fullscore"];
                this.columnorder_by = base.Columns["order_by"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncc_id = new System.Data.DataColumn("cc_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncc_id);
                this.columncc_yr = new System.Data.DataColumn("cc_yr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncc_yr);
                this.columncc_subject = new System.Data.DataColumn("cc_subject", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncc_subject);
                this.columnfullscore = new System.Data.DataColumn("fullscore", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullscore);
                this.columnorder_by = new System.Data.DataColumn("order_by", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder_by);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncc_id}, true));
                this.columncc_id.AutoIncrement = true;
                this.columncc_id.AllowDBNull = false;
                this.columncc_id.ReadOnly = true;
                this.columncc_id.Unique = true;
                this.columncc_yr.MaxLength = 50;
                this.columncc_subject.MaxLength = 200;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_coreRow Newmasterdata_competency_coreRow() {
                return ((masterdata_competency_coreRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_competency_coreRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_competency_coreRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_competency_coreRowChanged != null)) {
                    this.masterdata_competency_coreRowChanged(this, new masterdata_competency_coreRowChangeEvent(((masterdata_competency_coreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_competency_coreRowChanging != null)) {
                    this.masterdata_competency_coreRowChanging(this, new masterdata_competency_coreRowChangeEvent(((masterdata_competency_coreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_competency_coreRowDeleted != null)) {
                    this.masterdata_competency_coreRowDeleted(this, new masterdata_competency_coreRowChangeEvent(((masterdata_competency_coreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_competency_coreRowDeleting != null)) {
                    this.masterdata_competency_coreRowDeleting(this, new masterdata_competency_coreRowChangeEvent(((masterdata_competency_coreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_competency_coreRow(masterdata_competency_coreRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_competency_coreDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_competency_stDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncst_subject_id;
            
            private System.Data.DataColumn columncst_subject;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_stDataTable() {
                this.TableName = "masterdata_competency_st";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_competency_stDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_competency_stDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_subject_idColumn {
                get {
                    return this.columncst_subject_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_subjectColumn {
                get {
                    return this.columncst_subject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_stRow this[int index] {
                get {
                    return ((masterdata_competency_stRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_competency_stRowChangeEventHandler masterdata_competency_stRowChanging;
            
            public event masterdata_competency_stRowChangeEventHandler masterdata_competency_stRowChanged;
            
            public event masterdata_competency_stRowChangeEventHandler masterdata_competency_stRowDeleting;
            
            public event masterdata_competency_stRowChangeEventHandler masterdata_competency_stRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_competency_stRow(masterdata_competency_stRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_stRow Addmasterdata_competency_stRow(string cst_subject) {
                masterdata_competency_stRow rowmasterdata_competency_stRow = ((masterdata_competency_stRow)(this.NewRow()));
                rowmasterdata_competency_stRow.ItemArray = new object[] {
                        null,
                        cst_subject};
                this.Rows.Add(rowmasterdata_competency_stRow);
                return rowmasterdata_competency_stRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_stRow FindBycst_subject_id(int cst_subject_id) {
                return ((masterdata_competency_stRow)(this.Rows.Find(new object[] {
                            cst_subject_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_competency_stDataTable cln = ((masterdata_competency_stDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_competency_stDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncst_subject_id = base.Columns["cst_subject_id"];
                this.columncst_subject = base.Columns["cst_subject"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncst_subject_id = new System.Data.DataColumn("cst_subject_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_subject_id);
                this.columncst_subject = new System.Data.DataColumn("cst_subject", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_subject);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncst_subject_id}, true));
                this.columncst_subject_id.AutoIncrement = true;
                this.columncst_subject_id.AllowDBNull = false;
                this.columncst_subject_id.ReadOnly = true;
                this.columncst_subject_id.Unique = true;
                this.columncst_subject.MaxLength = 150;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_stRow Newmasterdata_competency_stRow() {
                return ((masterdata_competency_stRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_competency_stRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_competency_stRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_competency_stRowChanged != null)) {
                    this.masterdata_competency_stRowChanged(this, new masterdata_competency_stRowChangeEvent(((masterdata_competency_stRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_competency_stRowChanging != null)) {
                    this.masterdata_competency_stRowChanging(this, new masterdata_competency_stRowChangeEvent(((masterdata_competency_stRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_competency_stRowDeleted != null)) {
                    this.masterdata_competency_stRowDeleted(this, new masterdata_competency_stRowChangeEvent(((masterdata_competency_stRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_competency_stRowDeleting != null)) {
                    this.masterdata_competency_stRowDeleting(this, new masterdata_competency_stRowChangeEvent(((masterdata_competency_stRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_competency_stRow(masterdata_competency_stRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_competency_stDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_competency_st_groupDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncst_group_id;
            
            private System.Data.DataColumn columncst_groupname;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_groupDataTable() {
                this.TableName = "masterdata_competency_st_group";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_competency_st_groupDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_competency_st_groupDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_group_idColumn {
                get {
                    return this.columncst_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_groupnameColumn {
                get {
                    return this.columncst_groupname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_groupRow this[int index] {
                get {
                    return ((masterdata_competency_st_groupRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_competency_st_groupRowChangeEventHandler masterdata_competency_st_groupRowChanging;
            
            public event masterdata_competency_st_groupRowChangeEventHandler masterdata_competency_st_groupRowChanged;
            
            public event masterdata_competency_st_groupRowChangeEventHandler masterdata_competency_st_groupRowDeleting;
            
            public event masterdata_competency_st_groupRowChangeEventHandler masterdata_competency_st_groupRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_competency_st_groupRow(masterdata_competency_st_groupRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_groupRow Addmasterdata_competency_st_groupRow(string cst_groupname) {
                masterdata_competency_st_groupRow rowmasterdata_competency_st_groupRow = ((masterdata_competency_st_groupRow)(this.NewRow()));
                rowmasterdata_competency_st_groupRow.ItemArray = new object[] {
                        null,
                        cst_groupname};
                this.Rows.Add(rowmasterdata_competency_st_groupRow);
                return rowmasterdata_competency_st_groupRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_groupRow FindBycst_group_id(int cst_group_id) {
                return ((masterdata_competency_st_groupRow)(this.Rows.Find(new object[] {
                            cst_group_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_competency_st_groupDataTable cln = ((masterdata_competency_st_groupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_competency_st_groupDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncst_group_id = base.Columns["cst_group_id"];
                this.columncst_groupname = base.Columns["cst_groupname"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncst_group_id = new System.Data.DataColumn("cst_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_group_id);
                this.columncst_groupname = new System.Data.DataColumn("cst_groupname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_groupname);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncst_group_id}, true));
                this.columncst_group_id.AutoIncrement = true;
                this.columncst_group_id.AllowDBNull = false;
                this.columncst_group_id.ReadOnly = true;
                this.columncst_group_id.Unique = true;
                this.columncst_groupname.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_groupRow Newmasterdata_competency_st_groupRow() {
                return ((masterdata_competency_st_groupRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_competency_st_groupRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_competency_st_groupRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_competency_st_groupRowChanged != null)) {
                    this.masterdata_competency_st_groupRowChanged(this, new masterdata_competency_st_groupRowChangeEvent(((masterdata_competency_st_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_competency_st_groupRowChanging != null)) {
                    this.masterdata_competency_st_groupRowChanging(this, new masterdata_competency_st_groupRowChangeEvent(((masterdata_competency_st_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_competency_st_groupRowDeleted != null)) {
                    this.masterdata_competency_st_groupRowDeleted(this, new masterdata_competency_st_groupRowChangeEvent(((masterdata_competency_st_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_competency_st_groupRowDeleting != null)) {
                    this.masterdata_competency_st_groupRowDeleting(this, new masterdata_competency_st_groupRowChangeEvent(((masterdata_competency_st_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_competency_st_groupRow(masterdata_competency_st_groupRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_competency_st_groupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_competency_st_group_detailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncst_group_detail_id;
            
            private System.Data.DataColumn columncst_group_id;
            
            private System.Data.DataColumn columncst_subject_id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_group_detailDataTable() {
                this.TableName = "masterdata_competency_st_group_detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_competency_st_group_detailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_competency_st_group_detailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_group_detail_idColumn {
                get {
                    return this.columncst_group_detail_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_group_idColumn {
                get {
                    return this.columncst_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_subject_idColumn {
                get {
                    return this.columncst_subject_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_group_detailRow this[int index] {
                get {
                    return ((masterdata_competency_st_group_detailRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_competency_st_group_detailRowChangeEventHandler masterdata_competency_st_group_detailRowChanging;
            
            public event masterdata_competency_st_group_detailRowChangeEventHandler masterdata_competency_st_group_detailRowChanged;
            
            public event masterdata_competency_st_group_detailRowChangeEventHandler masterdata_competency_st_group_detailRowDeleting;
            
            public event masterdata_competency_st_group_detailRowChangeEventHandler masterdata_competency_st_group_detailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_competency_st_group_detailRow(masterdata_competency_st_group_detailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_group_detailRow Addmasterdata_competency_st_group_detailRow(int cst_group_detail_id, int cst_group_id, int cst_subject_id) {
                masterdata_competency_st_group_detailRow rowmasterdata_competency_st_group_detailRow = ((masterdata_competency_st_group_detailRow)(this.NewRow()));
                rowmasterdata_competency_st_group_detailRow.ItemArray = new object[] {
                        cst_group_detail_id,
                        cst_group_id,
                        cst_subject_id};
                this.Rows.Add(rowmasterdata_competency_st_group_detailRow);
                return rowmasterdata_competency_st_group_detailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_competency_st_group_detailDataTable cln = ((masterdata_competency_st_group_detailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_competency_st_group_detailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncst_group_detail_id = base.Columns["cst_group_detail_id"];
                this.columncst_group_id = base.Columns["cst_group_id"];
                this.columncst_subject_id = base.Columns["cst_subject_id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncst_group_detail_id = new System.Data.DataColumn("cst_group_detail_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_group_detail_id);
                this.columncst_group_id = new System.Data.DataColumn("cst_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_group_id);
                this.columncst_subject_id = new System.Data.DataColumn("cst_subject_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_subject_id);
                this.columncst_group_detail_id.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_group_detailRow Newmasterdata_competency_st_group_detailRow() {
                return ((masterdata_competency_st_group_detailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_competency_st_group_detailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_competency_st_group_detailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_competency_st_group_detailRowChanged != null)) {
                    this.masterdata_competency_st_group_detailRowChanged(this, new masterdata_competency_st_group_detailRowChangeEvent(((masterdata_competency_st_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_competency_st_group_detailRowChanging != null)) {
                    this.masterdata_competency_st_group_detailRowChanging(this, new masterdata_competency_st_group_detailRowChangeEvent(((masterdata_competency_st_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_competency_st_group_detailRowDeleted != null)) {
                    this.masterdata_competency_st_group_detailRowDeleted(this, new masterdata_competency_st_group_detailRowChangeEvent(((masterdata_competency_st_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_competency_st_group_detailRowDeleting != null)) {
                    this.masterdata_competency_st_group_detailRowDeleting(this, new masterdata_competency_st_group_detailRowChangeEvent(((masterdata_competency_st_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_competency_st_group_detailRow(masterdata_competency_st_group_detailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_competency_st_group_detailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_eva_relationDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnrelation_id;
            
            private System.Data.DataColumn columnstaff_eva_relation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_eva_relationDataTable() {
                this.TableName = "masterdata_eva_relation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_eva_relationDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_eva_relationDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn relation_idColumn {
                get {
                    return this.columnrelation_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_eva_relationColumn {
                get {
                    return this.columnstaff_eva_relation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_eva_relationRow this[int index] {
                get {
                    return ((masterdata_eva_relationRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_eva_relationRowChangeEventHandler masterdata_eva_relationRowChanging;
            
            public event masterdata_eva_relationRowChangeEventHandler masterdata_eva_relationRowChanged;
            
            public event masterdata_eva_relationRowChangeEventHandler masterdata_eva_relationRowDeleting;
            
            public event masterdata_eva_relationRowChangeEventHandler masterdata_eva_relationRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_eva_relationRow(masterdata_eva_relationRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_eva_relationRow Addmasterdata_eva_relationRow(string relation_id, string staff_eva_relation) {
                masterdata_eva_relationRow rowmasterdata_eva_relationRow = ((masterdata_eva_relationRow)(this.NewRow()));
                rowmasterdata_eva_relationRow.ItemArray = new object[] {
                        relation_id,
                        staff_eva_relation};
                this.Rows.Add(rowmasterdata_eva_relationRow);
                return rowmasterdata_eva_relationRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_eva_relationRow FindByrelation_id(string relation_id) {
                return ((masterdata_eva_relationRow)(this.Rows.Find(new object[] {
                            relation_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_eva_relationDataTable cln = ((masterdata_eva_relationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_eva_relationDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrelation_id = base.Columns["relation_id"];
                this.columnstaff_eva_relation = base.Columns["staff_eva_relation"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrelation_id = new System.Data.DataColumn("relation_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelation_id);
                this.columnstaff_eva_relation = new System.Data.DataColumn("staff_eva_relation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_eva_relation);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnrelation_id}, true));
                this.columnrelation_id.AllowDBNull = false;
                this.columnrelation_id.Unique = true;
                this.columnrelation_id.MaxLength = 10;
                this.columnstaff_eva_relation.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_eva_relationRow Newmasterdata_eva_relationRow() {
                return ((masterdata_eva_relationRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_eva_relationRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_eva_relationRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_eva_relationRowChanged != null)) {
                    this.masterdata_eva_relationRowChanged(this, new masterdata_eva_relationRowChangeEvent(((masterdata_eva_relationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_eva_relationRowChanging != null)) {
                    this.masterdata_eva_relationRowChanging(this, new masterdata_eva_relationRowChangeEvent(((masterdata_eva_relationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_eva_relationRowDeleted != null)) {
                    this.masterdata_eva_relationRowDeleted(this, new masterdata_eva_relationRowChangeEvent(((masterdata_eva_relationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_eva_relationRowDeleting != null)) {
                    this.masterdata_eva_relationRowDeleting(this, new masterdata_eva_relationRowChangeEvent(((masterdata_eva_relationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_eva_relationRow(masterdata_eva_relationRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_eva_relationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_menuauthorityDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnmenuauthority_id;
            
            private System.Data.DataColumn columnmenuauthority_root;
            
            private System.Data.DataColumn columnmenuauthority_name;
            
            private System.Data.DataColumn columnmenuauthority_desc;
            
            private System.Data.DataColumn columnorderby;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthorityDataTable() {
                this.TableName = "masterdata_menuauthority";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_menuauthorityDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_menuauthorityDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_idColumn {
                get {
                    return this.columnmenuauthority_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_rootColumn {
                get {
                    return this.columnmenuauthority_root;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_nameColumn {
                get {
                    return this.columnmenuauthority_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_descColumn {
                get {
                    return this.columnmenuauthority_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn orderbyColumn {
                get {
                    return this.columnorderby;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthorityRow this[int index] {
                get {
                    return ((masterdata_menuauthorityRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_menuauthorityRowChangeEventHandler masterdata_menuauthorityRowChanging;
            
            public event masterdata_menuauthorityRowChangeEventHandler masterdata_menuauthorityRowChanged;
            
            public event masterdata_menuauthorityRowChangeEventHandler masterdata_menuauthorityRowDeleting;
            
            public event masterdata_menuauthorityRowChangeEventHandler masterdata_menuauthorityRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_menuauthorityRow(masterdata_menuauthorityRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthorityRow Addmasterdata_menuauthorityRow(int menuauthority_id, string menuauthority_root, string menuauthority_name, string menuauthority_desc, int orderby) {
                masterdata_menuauthorityRow rowmasterdata_menuauthorityRow = ((masterdata_menuauthorityRow)(this.NewRow()));
                rowmasterdata_menuauthorityRow.ItemArray = new object[] {
                        menuauthority_id,
                        menuauthority_root,
                        menuauthority_name,
                        menuauthority_desc,
                        orderby};
                this.Rows.Add(rowmasterdata_menuauthorityRow);
                return rowmasterdata_menuauthorityRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthorityRow FindBymenuauthority_id(int menuauthority_id) {
                return ((masterdata_menuauthorityRow)(this.Rows.Find(new object[] {
                            menuauthority_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_menuauthorityDataTable cln = ((masterdata_menuauthorityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_menuauthorityDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmenuauthority_id = base.Columns["menuauthority_id"];
                this.columnmenuauthority_root = base.Columns["menuauthority_root"];
                this.columnmenuauthority_name = base.Columns["menuauthority_name"];
                this.columnmenuauthority_desc = base.Columns["menuauthority_desc"];
                this.columnorderby = base.Columns["orderby"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmenuauthority_id = new System.Data.DataColumn("menuauthority_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_id);
                this.columnmenuauthority_root = new System.Data.DataColumn("menuauthority_root", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_root);
                this.columnmenuauthority_name = new System.Data.DataColumn("menuauthority_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_name);
                this.columnmenuauthority_desc = new System.Data.DataColumn("menuauthority_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_desc);
                this.columnorderby = new System.Data.DataColumn("orderby", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderby);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnmenuauthority_id}, true));
                this.columnmenuauthority_id.AllowDBNull = false;
                this.columnmenuauthority_id.Unique = true;
                this.columnmenuauthority_root.MaxLength = 50;
                this.columnmenuauthority_name.MaxLength = 100;
                this.columnmenuauthority_desc.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthorityRow Newmasterdata_menuauthorityRow() {
                return ((masterdata_menuauthorityRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_menuauthorityRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_menuauthorityRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_menuauthorityRowChanged != null)) {
                    this.masterdata_menuauthorityRowChanged(this, new masterdata_menuauthorityRowChangeEvent(((masterdata_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_menuauthorityRowChanging != null)) {
                    this.masterdata_menuauthorityRowChanging(this, new masterdata_menuauthorityRowChangeEvent(((masterdata_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_menuauthorityRowDeleted != null)) {
                    this.masterdata_menuauthorityRowDeleted(this, new masterdata_menuauthorityRowChangeEvent(((masterdata_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_menuauthorityRowDeleting != null)) {
                    this.masterdata_menuauthorityRowDeleting(this, new masterdata_menuauthorityRowChangeEvent(((masterdata_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_menuauthorityRow(masterdata_menuauthorityRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_menuauthorityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_menuauthority_groupDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnmenuauthority_group_id;
            
            private System.Data.DataColumn columnmenuauthority_group_name;
            
            private System.Data.DataColumn columnmenuauthority_group_desc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_groupDataTable() {
                this.TableName = "masterdata_menuauthority_group";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_menuauthority_groupDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_menuauthority_groupDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_idColumn {
                get {
                    return this.columnmenuauthority_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_nameColumn {
                get {
                    return this.columnmenuauthority_group_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_descColumn {
                get {
                    return this.columnmenuauthority_group_desc;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_groupRow this[int index] {
                get {
                    return ((masterdata_menuauthority_groupRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_menuauthority_groupRowChangeEventHandler masterdata_menuauthority_groupRowChanging;
            
            public event masterdata_menuauthority_groupRowChangeEventHandler masterdata_menuauthority_groupRowChanged;
            
            public event masterdata_menuauthority_groupRowChangeEventHandler masterdata_menuauthority_groupRowDeleting;
            
            public event masterdata_menuauthority_groupRowChangeEventHandler masterdata_menuauthority_groupRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_menuauthority_groupRow(masterdata_menuauthority_groupRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_groupRow Addmasterdata_menuauthority_groupRow(int menuauthority_group_id, string menuauthority_group_name, string menuauthority_group_desc) {
                masterdata_menuauthority_groupRow rowmasterdata_menuauthority_groupRow = ((masterdata_menuauthority_groupRow)(this.NewRow()));
                rowmasterdata_menuauthority_groupRow.ItemArray = new object[] {
                        menuauthority_group_id,
                        menuauthority_group_name,
                        menuauthority_group_desc};
                this.Rows.Add(rowmasterdata_menuauthority_groupRow);
                return rowmasterdata_menuauthority_groupRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_groupRow FindBymenuauthority_group_id(int menuauthority_group_id) {
                return ((masterdata_menuauthority_groupRow)(this.Rows.Find(new object[] {
                            menuauthority_group_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_menuauthority_groupDataTable cln = ((masterdata_menuauthority_groupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_menuauthority_groupDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmenuauthority_group_id = base.Columns["menuauthority_group_id"];
                this.columnmenuauthority_group_name = base.Columns["menuauthority_group_name"];
                this.columnmenuauthority_group_desc = base.Columns["menuauthority_group_desc"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmenuauthority_group_id = new System.Data.DataColumn("menuauthority_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_id);
                this.columnmenuauthority_group_name = new System.Data.DataColumn("menuauthority_group_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_name);
                this.columnmenuauthority_group_desc = new System.Data.DataColumn("menuauthority_group_desc", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_desc);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnmenuauthority_group_id}, true));
                this.columnmenuauthority_group_id.AllowDBNull = false;
                this.columnmenuauthority_group_id.Unique = true;
                this.columnmenuauthority_group_name.MaxLength = 100;
                this.columnmenuauthority_group_desc.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_groupRow Newmasterdata_menuauthority_groupRow() {
                return ((masterdata_menuauthority_groupRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_menuauthority_groupRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_menuauthority_groupRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_menuauthority_groupRowChanged != null)) {
                    this.masterdata_menuauthority_groupRowChanged(this, new masterdata_menuauthority_groupRowChangeEvent(((masterdata_menuauthority_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_menuauthority_groupRowChanging != null)) {
                    this.masterdata_menuauthority_groupRowChanging(this, new masterdata_menuauthority_groupRowChangeEvent(((masterdata_menuauthority_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_menuauthority_groupRowDeleted != null)) {
                    this.masterdata_menuauthority_groupRowDeleted(this, new masterdata_menuauthority_groupRowChangeEvent(((masterdata_menuauthority_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_menuauthority_groupRowDeleting != null)) {
                    this.masterdata_menuauthority_groupRowDeleting(this, new masterdata_menuauthority_groupRowChangeEvent(((masterdata_menuauthority_groupRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_menuauthority_groupRow(masterdata_menuauthority_groupRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_menuauthority_groupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_menuauthority_group_detailDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columngroup_detail_id;
            
            private System.Data.DataColumn columnmenuauthority_group_id;
            
            private System.Data.DataColumn columnmenuauthority_id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_group_detailDataTable() {
                this.TableName = "masterdata_menuauthority_group_detail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_menuauthority_group_detailDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_menuauthority_group_detailDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn group_detail_idColumn {
                get {
                    return this.columngroup_detail_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_idColumn {
                get {
                    return this.columnmenuauthority_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_idColumn {
                get {
                    return this.columnmenuauthority_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_group_detailRow this[int index] {
                get {
                    return ((masterdata_menuauthority_group_detailRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_menuauthority_group_detailRowChangeEventHandler masterdata_menuauthority_group_detailRowChanging;
            
            public event masterdata_menuauthority_group_detailRowChangeEventHandler masterdata_menuauthority_group_detailRowChanged;
            
            public event masterdata_menuauthority_group_detailRowChangeEventHandler masterdata_menuauthority_group_detailRowDeleting;
            
            public event masterdata_menuauthority_group_detailRowChangeEventHandler masterdata_menuauthority_group_detailRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_menuauthority_group_detailRow(masterdata_menuauthority_group_detailRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_group_detailRow Addmasterdata_menuauthority_group_detailRow(int menuauthority_group_id, int menuauthority_id) {
                masterdata_menuauthority_group_detailRow rowmasterdata_menuauthority_group_detailRow = ((masterdata_menuauthority_group_detailRow)(this.NewRow()));
                rowmasterdata_menuauthority_group_detailRow.ItemArray = new object[] {
                        null,
                        menuauthority_group_id,
                        menuauthority_id};
                this.Rows.Add(rowmasterdata_menuauthority_group_detailRow);
                return rowmasterdata_menuauthority_group_detailRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_group_detailRow FindBygroup_detail_id(int group_detail_id) {
                return ((masterdata_menuauthority_group_detailRow)(this.Rows.Find(new object[] {
                            group_detail_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_menuauthority_group_detailDataTable cln = ((masterdata_menuauthority_group_detailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_menuauthority_group_detailDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columngroup_detail_id = base.Columns["group_detail_id"];
                this.columnmenuauthority_group_id = base.Columns["menuauthority_group_id"];
                this.columnmenuauthority_id = base.Columns["menuauthority_id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columngroup_detail_id = new System.Data.DataColumn("group_detail_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_detail_id);
                this.columnmenuauthority_group_id = new System.Data.DataColumn("menuauthority_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_id);
                this.columnmenuauthority_id = new System.Data.DataColumn("menuauthority_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_id);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columngroup_detail_id}, true));
                this.columngroup_detail_id.AutoIncrement = true;
                this.columngroup_detail_id.AllowDBNull = false;
                this.columngroup_detail_id.ReadOnly = true;
                this.columngroup_detail_id.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_group_detailRow Newmasterdata_menuauthority_group_detailRow() {
                return ((masterdata_menuauthority_group_detailRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_menuauthority_group_detailRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_menuauthority_group_detailRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_menuauthority_group_detailRowChanged != null)) {
                    this.masterdata_menuauthority_group_detailRowChanged(this, new masterdata_menuauthority_group_detailRowChangeEvent(((masterdata_menuauthority_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_menuauthority_group_detailRowChanging != null)) {
                    this.masterdata_menuauthority_group_detailRowChanging(this, new masterdata_menuauthority_group_detailRowChangeEvent(((masterdata_menuauthority_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_menuauthority_group_detailRowDeleted != null)) {
                    this.masterdata_menuauthority_group_detailRowDeleted(this, new masterdata_menuauthority_group_detailRowChangeEvent(((masterdata_menuauthority_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_menuauthority_group_detailRowDeleting != null)) {
                    this.masterdata_menuauthority_group_detailRowDeleting(this, new masterdata_menuauthority_group_detailRowChangeEvent(((masterdata_menuauthority_group_detailRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_menuauthority_group_detailRow(masterdata_menuauthority_group_detailRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_menuauthority_group_detailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class masterdata_refDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnref_autono;
            
            private System.Data.DataColumn columnref_category;
            
            private System.Data.DataColumn columnref_id;
            
            private System.Data.DataColumn columnref_name;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_refDataTable() {
                this.TableName = "masterdata_ref";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_refDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected masterdata_refDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ref_autonoColumn {
                get {
                    return this.columnref_autono;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ref_categoryColumn {
                get {
                    return this.columnref_category;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ref_idColumn {
                get {
                    return this.columnref_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ref_nameColumn {
                get {
                    return this.columnref_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_refRow this[int index] {
                get {
                    return ((masterdata_refRow)(this.Rows[index]));
                }
            }
            
            public event masterdata_refRowChangeEventHandler masterdata_refRowChanging;
            
            public event masterdata_refRowChangeEventHandler masterdata_refRowChanged;
            
            public event masterdata_refRowChangeEventHandler masterdata_refRowDeleting;
            
            public event masterdata_refRowChangeEventHandler masterdata_refRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmasterdata_refRow(masterdata_refRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_refRow Addmasterdata_refRow(string ref_category, string ref_id, string ref_name) {
                masterdata_refRow rowmasterdata_refRow = ((masterdata_refRow)(this.NewRow()));
                rowmasterdata_refRow.ItemArray = new object[] {
                        null,
                        ref_category,
                        ref_id,
                        ref_name};
                this.Rows.Add(rowmasterdata_refRow);
                return rowmasterdata_refRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_refRow FindByref_autono(int ref_autono) {
                return ((masterdata_refRow)(this.Rows.Find(new object[] {
                            ref_autono})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                masterdata_refDataTable cln = ((masterdata_refDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new masterdata_refDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnref_autono = base.Columns["ref_autono"];
                this.columnref_category = base.Columns["ref_category"];
                this.columnref_id = base.Columns["ref_id"];
                this.columnref_name = base.Columns["ref_name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnref_autono = new System.Data.DataColumn("ref_autono", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnref_autono);
                this.columnref_category = new System.Data.DataColumn("ref_category", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnref_category);
                this.columnref_id = new System.Data.DataColumn("ref_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnref_id);
                this.columnref_name = new System.Data.DataColumn("ref_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnref_name);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnref_autono}, true));
                this.columnref_autono.AutoIncrement = true;
                this.columnref_autono.AllowDBNull = false;
                this.columnref_autono.ReadOnly = true;
                this.columnref_autono.Unique = true;
                this.columnref_category.AllowDBNull = false;
                this.columnref_category.MaxLength = 50;
                this.columnref_id.AllowDBNull = false;
                this.columnref_id.MaxLength = 50;
                this.columnref_name.AllowDBNull = false;
                this.columnref_name.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_refRow Newmasterdata_refRow() {
                return ((masterdata_refRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new masterdata_refRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(masterdata_refRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.masterdata_refRowChanged != null)) {
                    this.masterdata_refRowChanged(this, new masterdata_refRowChangeEvent(((masterdata_refRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.masterdata_refRowChanging != null)) {
                    this.masterdata_refRowChanging(this, new masterdata_refRowChangeEvent(((masterdata_refRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.masterdata_refRowDeleted != null)) {
                    this.masterdata_refRowDeleted(this, new masterdata_refRowChangeEvent(((masterdata_refRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.masterdata_refRowDeleting != null)) {
                    this.masterdata_refRowDeleting(this, new masterdata_refRowChangeEvent(((masterdata_refRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemasterdata_refRow(masterdata_refRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "masterdata_refDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_activityDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_activity_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnstaff_activity_date;
            
            private System.Data.DataColumn columnactivity_subject;
            
            private System.Data.DataColumn columnactivity_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityDataTable() {
                this.TableName = "staff_activity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_activityDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_activityDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_activity_idColumn {
                get {
                    return this.columnstaff_activity_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_activity_dateColumn {
                get {
                    return this.columnstaff_activity_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_subjectColumn {
                get {
                    return this.columnactivity_subject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_detailColumn {
                get {
                    return this.columnactivity_detail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityRow this[int index] {
                get {
                    return ((staff_activityRow)(this.Rows[index]));
                }
            }
            
            public event staff_activityRowChangeEventHandler staff_activityRowChanging;
            
            public event staff_activityRowChangeEventHandler staff_activityRowChanged;
            
            public event staff_activityRowChangeEventHandler staff_activityRowDeleting;
            
            public event staff_activityRowChangeEventHandler staff_activityRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_activityRow(staff_activityRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityRow Addstaff_activityRow(int staff_activity_id, staff_indexRow parentstaff_indexRowByFK_staff_activity_staff_index, string staff_activity_date, string activity_subject, string activity_detail) {
                staff_activityRow rowstaff_activityRow = ((staff_activityRow)(this.NewRow()));
                rowstaff_activityRow.ItemArray = new object[] {
                        staff_activity_id,
                        parentstaff_indexRowByFK_staff_activity_staff_index[0],
                        staff_activity_date,
                        activity_subject,
                        activity_detail};
                this.Rows.Add(rowstaff_activityRow);
                return rowstaff_activityRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityRow FindBystaff_activity_id(int staff_activity_id) {
                return ((staff_activityRow)(this.Rows.Find(new object[] {
                            staff_activity_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_activityDataTable cln = ((staff_activityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_activityDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_activity_id = base.Columns["staff_activity_id"];
                this.columnuname = base.Columns["uname"];
                this.columnstaff_activity_date = base.Columns["staff_activity_date"];
                this.columnactivity_subject = base.Columns["activity_subject"];
                this.columnactivity_detail = base.Columns["activity_detail"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_activity_id = new System.Data.DataColumn("staff_activity_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_activity_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnstaff_activity_date = new System.Data.DataColumn("staff_activity_date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_activity_date);
                this.columnactivity_subject = new System.Data.DataColumn("activity_subject", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_subject);
                this.columnactivity_detail = new System.Data.DataColumn("activity_detail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_detail);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_activity_id}, true));
                this.columnstaff_activity_id.AllowDBNull = false;
                this.columnstaff_activity_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnstaff_activity_date.MaxLength = 50;
                this.columnactivity_subject.MaxLength = 255;
                this.columnactivity_detail.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityRow Newstaff_activityRow() {
                return ((staff_activityRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_activityRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_activityRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_activityRowChanged != null)) {
                    this.staff_activityRowChanged(this, new staff_activityRowChangeEvent(((staff_activityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_activityRowChanging != null)) {
                    this.staff_activityRowChanging(this, new staff_activityRowChangeEvent(((staff_activityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_activityRowDeleted != null)) {
                    this.staff_activityRowDeleted(this, new staff_activityRowChangeEvent(((staff_activityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_activityRowDeleting != null)) {
                    this.staff_activityRowDeleting(this, new staff_activityRowChangeEvent(((staff_activityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_activityRow(staff_activityRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_activityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_activity_imageDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_activity_image_id;
            
            private System.Data.DataColumn columnstaff_activity_id;
            
            private System.Data.DataColumn columnactivity_image;
            
            private System.Data.DataColumn columnactivity_image_thumb;
            
            private System.Data.DataColumn columnactivity_image_descript;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_imageDataTable() {
                this.TableName = "staff_activity_image";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_activity_imageDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_activity_imageDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_activity_image_idColumn {
                get {
                    return this.columnstaff_activity_image_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_activity_idColumn {
                get {
                    return this.columnstaff_activity_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_imageColumn {
                get {
                    return this.columnactivity_image;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_image_thumbColumn {
                get {
                    return this.columnactivity_image_thumb;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_image_descriptColumn {
                get {
                    return this.columnactivity_image_descript;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_imageRow this[int index] {
                get {
                    return ((staff_activity_imageRow)(this.Rows[index]));
                }
            }
            
            public event staff_activity_imageRowChangeEventHandler staff_activity_imageRowChanging;
            
            public event staff_activity_imageRowChangeEventHandler staff_activity_imageRowChanged;
            
            public event staff_activity_imageRowChangeEventHandler staff_activity_imageRowDeleting;
            
            public event staff_activity_imageRowChangeEventHandler staff_activity_imageRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_activity_imageRow(staff_activity_imageRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_imageRow Addstaff_activity_imageRow(staff_activityRow parentstaff_activityRowByFK_staff_activity_image_staff_activity, string activity_image, string activity_image_thumb, string activity_image_descript) {
                staff_activity_imageRow rowstaff_activity_imageRow = ((staff_activity_imageRow)(this.NewRow()));
                rowstaff_activity_imageRow.ItemArray = new object[] {
                        null,
                        parentstaff_activityRowByFK_staff_activity_image_staff_activity[0],
                        activity_image,
                        activity_image_thumb,
                        activity_image_descript};
                this.Rows.Add(rowstaff_activity_imageRow);
                return rowstaff_activity_imageRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_imageRow FindBystaff_activity_image_id(int staff_activity_image_id) {
                return ((staff_activity_imageRow)(this.Rows.Find(new object[] {
                            staff_activity_image_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_activity_imageDataTable cln = ((staff_activity_imageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_activity_imageDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_activity_image_id = base.Columns["staff_activity_image_id"];
                this.columnstaff_activity_id = base.Columns["staff_activity_id"];
                this.columnactivity_image = base.Columns["activity_image"];
                this.columnactivity_image_thumb = base.Columns["activity_image_thumb"];
                this.columnactivity_image_descript = base.Columns["activity_image_descript"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_activity_image_id = new System.Data.DataColumn("staff_activity_image_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_activity_image_id);
                this.columnstaff_activity_id = new System.Data.DataColumn("staff_activity_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_activity_id);
                this.columnactivity_image = new System.Data.DataColumn("activity_image", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_image);
                this.columnactivity_image_thumb = new System.Data.DataColumn("activity_image_thumb", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_image_thumb);
                this.columnactivity_image_descript = new System.Data.DataColumn("activity_image_descript", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_image_descript);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_activity_image_id}, true));
                this.columnstaff_activity_image_id.AutoIncrement = true;
                this.columnstaff_activity_image_id.AllowDBNull = false;
                this.columnstaff_activity_image_id.ReadOnly = true;
                this.columnstaff_activity_image_id.Unique = true;
                this.columnactivity_image.MaxLength = 50;
                this.columnactivity_image_thumb.MaxLength = 50;
                this.columnactivity_image_descript.MaxLength = 150;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_imageRow Newstaff_activity_imageRow() {
                return ((staff_activity_imageRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_activity_imageRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_activity_imageRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_activity_imageRowChanged != null)) {
                    this.staff_activity_imageRowChanged(this, new staff_activity_imageRowChangeEvent(((staff_activity_imageRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_activity_imageRowChanging != null)) {
                    this.staff_activity_imageRowChanging(this, new staff_activity_imageRowChangeEvent(((staff_activity_imageRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_activity_imageRowDeleted != null)) {
                    this.staff_activity_imageRowDeleted(this, new staff_activity_imageRowChangeEvent(((staff_activity_imageRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_activity_imageRowDeleting != null)) {
                    this.staff_activity_imageRowDeleting(this, new staff_activity_imageRowChangeEvent(((staff_activity_imageRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_activity_imageRow(staff_activity_imageRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_activity_imageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_activity_tempDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_activity_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnstaff_activity_date;
            
            private System.Data.DataColumn columnactivity_subject;
            
            private System.Data.DataColumn columnactivity_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_tempDataTable() {
                this.TableName = "staff_activity_temp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_activity_tempDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_activity_tempDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_activity_idColumn {
                get {
                    return this.columnstaff_activity_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_activity_dateColumn {
                get {
                    return this.columnstaff_activity_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_subjectColumn {
                get {
                    return this.columnactivity_subject;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_detailColumn {
                get {
                    return this.columnactivity_detail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_tempRow this[int index] {
                get {
                    return ((staff_activity_tempRow)(this.Rows[index]));
                }
            }
            
            public event staff_activity_tempRowChangeEventHandler staff_activity_tempRowChanging;
            
            public event staff_activity_tempRowChangeEventHandler staff_activity_tempRowChanged;
            
            public event staff_activity_tempRowChangeEventHandler staff_activity_tempRowDeleting;
            
            public event staff_activity_tempRowChangeEventHandler staff_activity_tempRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_activity_tempRow(staff_activity_tempRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_tempRow Addstaff_activity_tempRow(int staff_activity_id, string uname, string staff_activity_date, string activity_subject, string activity_detail) {
                staff_activity_tempRow rowstaff_activity_tempRow = ((staff_activity_tempRow)(this.NewRow()));
                rowstaff_activity_tempRow.ItemArray = new object[] {
                        staff_activity_id,
                        uname,
                        staff_activity_date,
                        activity_subject,
                        activity_detail};
                this.Rows.Add(rowstaff_activity_tempRow);
                return rowstaff_activity_tempRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_tempRow FindBystaff_activity_id(int staff_activity_id) {
                return ((staff_activity_tempRow)(this.Rows.Find(new object[] {
                            staff_activity_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_activity_tempDataTable cln = ((staff_activity_tempDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_activity_tempDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_activity_id = base.Columns["staff_activity_id"];
                this.columnuname = base.Columns["uname"];
                this.columnstaff_activity_date = base.Columns["staff_activity_date"];
                this.columnactivity_subject = base.Columns["activity_subject"];
                this.columnactivity_detail = base.Columns["activity_detail"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_activity_id = new System.Data.DataColumn("staff_activity_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_activity_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnstaff_activity_date = new System.Data.DataColumn("staff_activity_date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_activity_date);
                this.columnactivity_subject = new System.Data.DataColumn("activity_subject", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_subject);
                this.columnactivity_detail = new System.Data.DataColumn("activity_detail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_detail);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_activity_id}, true));
                this.columnstaff_activity_id.AllowDBNull = false;
                this.columnstaff_activity_id.Unique = true;
                this.columnuname.MaxLength = 50;
                this.columnstaff_activity_date.MaxLength = 50;
                this.columnactivity_subject.MaxLength = 255;
                this.columnactivity_detail.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_tempRow Newstaff_activity_tempRow() {
                return ((staff_activity_tempRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_activity_tempRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_activity_tempRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_activity_tempRowChanged != null)) {
                    this.staff_activity_tempRowChanged(this, new staff_activity_tempRowChangeEvent(((staff_activity_tempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_activity_tempRowChanging != null)) {
                    this.staff_activity_tempRowChanging(this, new staff_activity_tempRowChangeEvent(((staff_activity_tempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_activity_tempRowDeleted != null)) {
                    this.staff_activity_tempRowDeleted(this, new staff_activity_tempRowChangeEvent(((staff_activity_tempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_activity_tempRowDeleting != null)) {
                    this.staff_activity_tempRowDeleting(this, new staff_activity_tempRowChangeEvent(((staff_activity_tempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_activity_tempRow(staff_activity_tempRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_activity_tempDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_activity_videoDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_activity_video_id;
            
            private System.Data.DataColumn columnstaff_activity_id;
            
            private System.Data.DataColumn columnactivity_video;
            
            private System.Data.DataColumn columnactivity_video_descript;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_videoDataTable() {
                this.TableName = "staff_activity_video";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_activity_videoDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_activity_videoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_activity_video_idColumn {
                get {
                    return this.columnstaff_activity_video_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_activity_idColumn {
                get {
                    return this.columnstaff_activity_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_videoColumn {
                get {
                    return this.columnactivity_video;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_video_descriptColumn {
                get {
                    return this.columnactivity_video_descript;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_videoRow this[int index] {
                get {
                    return ((staff_activity_videoRow)(this.Rows[index]));
                }
            }
            
            public event staff_activity_videoRowChangeEventHandler staff_activity_videoRowChanging;
            
            public event staff_activity_videoRowChangeEventHandler staff_activity_videoRowChanged;
            
            public event staff_activity_videoRowChangeEventHandler staff_activity_videoRowDeleting;
            
            public event staff_activity_videoRowChangeEventHandler staff_activity_videoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_activity_videoRow(staff_activity_videoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_videoRow Addstaff_activity_videoRow(int staff_activity_id, string activity_video, string activity_video_descript) {
                staff_activity_videoRow rowstaff_activity_videoRow = ((staff_activity_videoRow)(this.NewRow()));
                rowstaff_activity_videoRow.ItemArray = new object[] {
                        null,
                        staff_activity_id,
                        activity_video,
                        activity_video_descript};
                this.Rows.Add(rowstaff_activity_videoRow);
                return rowstaff_activity_videoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_videoRow FindBystaff_activity_video_id(int staff_activity_video_id) {
                return ((staff_activity_videoRow)(this.Rows.Find(new object[] {
                            staff_activity_video_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_activity_videoDataTable cln = ((staff_activity_videoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_activity_videoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_activity_video_id = base.Columns["staff_activity_video_id"];
                this.columnstaff_activity_id = base.Columns["staff_activity_id"];
                this.columnactivity_video = base.Columns["activity_video"];
                this.columnactivity_video_descript = base.Columns["activity_video_descript"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_activity_video_id = new System.Data.DataColumn("staff_activity_video_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_activity_video_id);
                this.columnstaff_activity_id = new System.Data.DataColumn("staff_activity_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_activity_id);
                this.columnactivity_video = new System.Data.DataColumn("activity_video", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_video);
                this.columnactivity_video_descript = new System.Data.DataColumn("activity_video_descript", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_video_descript);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_activity_video_id}, true));
                this.columnstaff_activity_video_id.AutoIncrement = true;
                this.columnstaff_activity_video_id.AllowDBNull = false;
                this.columnstaff_activity_video_id.ReadOnly = true;
                this.columnstaff_activity_video_id.Unique = true;
                this.columnactivity_video.MaxLength = 50;
                this.columnactivity_video_descript.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_videoRow Newstaff_activity_videoRow() {
                return ((staff_activity_videoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_activity_videoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_activity_videoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_activity_videoRowChanged != null)) {
                    this.staff_activity_videoRowChanged(this, new staff_activity_videoRowChangeEvent(((staff_activity_videoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_activity_videoRowChanging != null)) {
                    this.staff_activity_videoRowChanging(this, new staff_activity_videoRowChangeEvent(((staff_activity_videoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_activity_videoRowDeleted != null)) {
                    this.staff_activity_videoRowDeleted(this, new staff_activity_videoRowChangeEvent(((staff_activity_videoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_activity_videoRowDeleting != null)) {
                    this.staff_activity_videoRowDeleting(this, new staff_activity_videoRowChangeEvent(((staff_activity_videoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_activity_videoRow(staff_activity_videoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_activity_videoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_addressDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnstaff_address;
            
            private System.Data.DataColumn columnstaff_locality;
            
            private System.Data.DataColumn columnstaff_amphur;
            
            private System.Data.DataColumn columnstaff_province;
            
            private System.Data.DataColumn columnstaff_postalcode;
            
            private System.Data.DataColumn columnstaff_map;
            
            private System.Data.DataColumn columnstaff_tel;
            
            private System.Data.DataColumn columnstaff_mobile;
            
            private System.Data.DataColumn columnstaff_tel_office;
            
            private System.Data.DataColumn columnstaff_tel_office_ext;
            
            private System.Data.DataColumn columnstaff_email;
            
            private System.Data.DataColumn columnstaff_emergency_name;
            
            private System.Data.DataColumn columnstaff_emergency_tel;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_addressDataTable() {
                this.TableName = "staff_address";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_addressDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_addressDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_addressColumn {
                get {
                    return this.columnstaff_address;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_localityColumn {
                get {
                    return this.columnstaff_locality;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_amphurColumn {
                get {
                    return this.columnstaff_amphur;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_provinceColumn {
                get {
                    return this.columnstaff_province;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_postalcodeColumn {
                get {
                    return this.columnstaff_postalcode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_mapColumn {
                get {
                    return this.columnstaff_map;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_telColumn {
                get {
                    return this.columnstaff_tel;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_mobileColumn {
                get {
                    return this.columnstaff_mobile;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_tel_officeColumn {
                get {
                    return this.columnstaff_tel_office;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_tel_office_extColumn {
                get {
                    return this.columnstaff_tel_office_ext;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_emailColumn {
                get {
                    return this.columnstaff_email;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_emergency_nameColumn {
                get {
                    return this.columnstaff_emergency_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_emergency_telColumn {
                get {
                    return this.columnstaff_emergency_tel;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_addressRow this[int index] {
                get {
                    return ((staff_addressRow)(this.Rows[index]));
                }
            }
            
            public event staff_addressRowChangeEventHandler staff_addressRowChanging;
            
            public event staff_addressRowChangeEventHandler staff_addressRowChanged;
            
            public event staff_addressRowChangeEventHandler staff_addressRowDeleting;
            
            public event staff_addressRowChangeEventHandler staff_addressRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_addressRow(staff_addressRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_addressRow Addstaff_addressRow(staff_indexRow parentstaff_indexRowByFK_staff_address_staff_index, string staff_address, string staff_locality, string staff_amphur, string staff_province, string staff_postalcode, string staff_map, string staff_tel, string staff_mobile, string staff_tel_office, string staff_tel_office_ext, string staff_email, string staff_emergency_name, string staff_emergency_tel) {
                staff_addressRow rowstaff_addressRow = ((staff_addressRow)(this.NewRow()));
                rowstaff_addressRow.ItemArray = new object[] {
                        parentstaff_indexRowByFK_staff_address_staff_index[0],
                        staff_address,
                        staff_locality,
                        staff_amphur,
                        staff_province,
                        staff_postalcode,
                        staff_map,
                        staff_tel,
                        staff_mobile,
                        staff_tel_office,
                        staff_tel_office_ext,
                        staff_email,
                        staff_emergency_name,
                        staff_emergency_tel};
                this.Rows.Add(rowstaff_addressRow);
                return rowstaff_addressRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_addressRow FindByuname(string uname) {
                return ((staff_addressRow)(this.Rows.Find(new object[] {
                            uname})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_addressDataTable cln = ((staff_addressDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_addressDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuname = base.Columns["uname"];
                this.columnstaff_address = base.Columns["staff_address"];
                this.columnstaff_locality = base.Columns["staff_locality"];
                this.columnstaff_amphur = base.Columns["staff_amphur"];
                this.columnstaff_province = base.Columns["staff_province"];
                this.columnstaff_postalcode = base.Columns["staff_postalcode"];
                this.columnstaff_map = base.Columns["staff_map"];
                this.columnstaff_tel = base.Columns["staff_tel"];
                this.columnstaff_mobile = base.Columns["staff_mobile"];
                this.columnstaff_tel_office = base.Columns["staff_tel_office"];
                this.columnstaff_tel_office_ext = base.Columns["staff_tel_office_ext"];
                this.columnstaff_email = base.Columns["staff_email"];
                this.columnstaff_emergency_name = base.Columns["staff_emergency_name"];
                this.columnstaff_emergency_tel = base.Columns["staff_emergency_tel"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnstaff_address = new System.Data.DataColumn("staff_address", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_address);
                this.columnstaff_locality = new System.Data.DataColumn("staff_locality", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_locality);
                this.columnstaff_amphur = new System.Data.DataColumn("staff_amphur", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_amphur);
                this.columnstaff_province = new System.Data.DataColumn("staff_province", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_province);
                this.columnstaff_postalcode = new System.Data.DataColumn("staff_postalcode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_postalcode);
                this.columnstaff_map = new System.Data.DataColumn("staff_map", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_map);
                this.columnstaff_tel = new System.Data.DataColumn("staff_tel", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_tel);
                this.columnstaff_mobile = new System.Data.DataColumn("staff_mobile", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_mobile);
                this.columnstaff_tel_office = new System.Data.DataColumn("staff_tel_office", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_tel_office);
                this.columnstaff_tel_office_ext = new System.Data.DataColumn("staff_tel_office_ext", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_tel_office_ext);
                this.columnstaff_email = new System.Data.DataColumn("staff_email", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_email);
                this.columnstaff_emergency_name = new System.Data.DataColumn("staff_emergency_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_emergency_name);
                this.columnstaff_emergency_tel = new System.Data.DataColumn("staff_emergency_tel", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_emergency_tel);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuname}, true));
                this.columnuname.AllowDBNull = false;
                this.columnuname.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnstaff_address.MaxLength = 255;
                this.columnstaff_locality.MaxLength = 100;
                this.columnstaff_amphur.MaxLength = 100;
                this.columnstaff_province.MaxLength = 100;
                this.columnstaff_postalcode.MaxLength = 50;
                this.columnstaff_map.MaxLength = 50;
                this.columnstaff_tel.MaxLength = 100;
                this.columnstaff_mobile.MaxLength = 50;
                this.columnstaff_tel_office.MaxLength = 100;
                this.columnstaff_tel_office_ext.MaxLength = 50;
                this.columnstaff_email.MaxLength = 50;
                this.columnstaff_emergency_name.MaxLength = 255;
                this.columnstaff_emergency_tel.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_addressRow Newstaff_addressRow() {
                return ((staff_addressRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_addressRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_addressRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_addressRowChanged != null)) {
                    this.staff_addressRowChanged(this, new staff_addressRowChangeEvent(((staff_addressRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_addressRowChanging != null)) {
                    this.staff_addressRowChanging(this, new staff_addressRowChangeEvent(((staff_addressRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_addressRowDeleted != null)) {
                    this.staff_addressRowDeleted(this, new staff_addressRowChangeEvent(((staff_addressRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_addressRowDeleting != null)) {
                    this.staff_addressRowDeleting(this, new staff_addressRowChangeEvent(((staff_addressRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_addressRow(staff_addressRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_addressDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_ailmentDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_ailment_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnailment_name_th;
            
            private System.Data.DataColumn columnailment_name_en;
            
            private System.Data.DataColumn columnailment_comment;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ailmentDataTable() {
                this.TableName = "staff_ailment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_ailmentDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_ailmentDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_ailment_idColumn {
                get {
                    return this.columnstaff_ailment_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ailment_name_thColumn {
                get {
                    return this.columnailment_name_th;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ailment_name_enColumn {
                get {
                    return this.columnailment_name_en;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ailment_commentColumn {
                get {
                    return this.columnailment_comment;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ailmentRow this[int index] {
                get {
                    return ((staff_ailmentRow)(this.Rows[index]));
                }
            }
            
            public event staff_ailmentRowChangeEventHandler staff_ailmentRowChanging;
            
            public event staff_ailmentRowChangeEventHandler staff_ailmentRowChanged;
            
            public event staff_ailmentRowChangeEventHandler staff_ailmentRowDeleting;
            
            public event staff_ailmentRowChangeEventHandler staff_ailmentRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_ailmentRow(staff_ailmentRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ailmentRow Addstaff_ailmentRow(int staff_ailment_id, staff_indexRow parentstaff_indexRowByFK_staff_ailment_staff_index1, string ailment_name_th, string ailment_name_en, string ailment_comment) {
                staff_ailmentRow rowstaff_ailmentRow = ((staff_ailmentRow)(this.NewRow()));
                rowstaff_ailmentRow.ItemArray = new object[] {
                        staff_ailment_id,
                        parentstaff_indexRowByFK_staff_ailment_staff_index1[0],
                        ailment_name_th,
                        ailment_name_en,
                        ailment_comment};
                this.Rows.Add(rowstaff_ailmentRow);
                return rowstaff_ailmentRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ailmentRow FindBystaff_ailment_id(int staff_ailment_id) {
                return ((staff_ailmentRow)(this.Rows.Find(new object[] {
                            staff_ailment_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_ailmentDataTable cln = ((staff_ailmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_ailmentDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_ailment_id = base.Columns["staff_ailment_id"];
                this.columnuname = base.Columns["uname"];
                this.columnailment_name_th = base.Columns["ailment_name_th"];
                this.columnailment_name_en = base.Columns["ailment_name_en"];
                this.columnailment_comment = base.Columns["ailment_comment"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_ailment_id = new System.Data.DataColumn("staff_ailment_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_ailment_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnailment_name_th = new System.Data.DataColumn("ailment_name_th", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnailment_name_th);
                this.columnailment_name_en = new System.Data.DataColumn("ailment_name_en", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnailment_name_en);
                this.columnailment_comment = new System.Data.DataColumn("ailment_comment", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnailment_comment);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_ailment_id}, true));
                this.columnstaff_ailment_id.AllowDBNull = false;
                this.columnstaff_ailment_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnailment_name_th.MaxLength = 255;
                this.columnailment_name_en.MaxLength = 255;
                this.columnailment_comment.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ailmentRow Newstaff_ailmentRow() {
                return ((staff_ailmentRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_ailmentRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_ailmentRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_ailmentRowChanged != null)) {
                    this.staff_ailmentRowChanged(this, new staff_ailmentRowChangeEvent(((staff_ailmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_ailmentRowChanging != null)) {
                    this.staff_ailmentRowChanging(this, new staff_ailmentRowChangeEvent(((staff_ailmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_ailmentRowDeleted != null)) {
                    this.staff_ailmentRowDeleted(this, new staff_ailmentRowChangeEvent(((staff_ailmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_ailmentRowDeleting != null)) {
                    this.staff_ailmentRowDeleting(this, new staff_ailmentRowChangeEvent(((staff_ailmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_ailmentRow(staff_ailmentRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_ailmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_assessmentDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnassessment_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnapprove_by;
            
            private System.Data.DataColumn columnapprove_date;
            
            private System.Data.DataColumn columnachievement;
            
            private System.Data.DataColumn columnmiss_goal;
            
            private System.Data.DataColumn columnarea_improvement;
            
            private System.Data.DataColumn columnstrength;
            
            private System.Data.DataColumn columnassessment_yr;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_assessmentDataTable() {
                this.TableName = "staff_assessment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_assessmentDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_assessmentDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn assessment_idColumn {
                get {
                    return this.columnassessment_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn approve_byColumn {
                get {
                    return this.columnapprove_by;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn approve_dateColumn {
                get {
                    return this.columnapprove_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn achievementColumn {
                get {
                    return this.columnachievement;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn miss_goalColumn {
                get {
                    return this.columnmiss_goal;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn area_improvementColumn {
                get {
                    return this.columnarea_improvement;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn strengthColumn {
                get {
                    return this.columnstrength;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn assessment_yrColumn {
                get {
                    return this.columnassessment_yr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_assessmentRow this[int index] {
                get {
                    return ((staff_assessmentRow)(this.Rows[index]));
                }
            }
            
            public event staff_assessmentRowChangeEventHandler staff_assessmentRowChanging;
            
            public event staff_assessmentRowChangeEventHandler staff_assessmentRowChanged;
            
            public event staff_assessmentRowChangeEventHandler staff_assessmentRowDeleting;
            
            public event staff_assessmentRowChangeEventHandler staff_assessmentRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_assessmentRow(staff_assessmentRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_assessmentRow Addstaff_assessmentRow(staff_indexRow parentstaff_indexRowByFK_staff_assessment_staff_index, string approve_by, System.DateTime approve_date, string achievement, string miss_goal, string area_improvement, string strength, string assessment_yr) {
                staff_assessmentRow rowstaff_assessmentRow = ((staff_assessmentRow)(this.NewRow()));
                rowstaff_assessmentRow.ItemArray = new object[] {
                        null,
                        parentstaff_indexRowByFK_staff_assessment_staff_index[0],
                        approve_by,
                        approve_date,
                        achievement,
                        miss_goal,
                        area_improvement,
                        strength,
                        assessment_yr};
                this.Rows.Add(rowstaff_assessmentRow);
                return rowstaff_assessmentRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_assessmentRow FindByassessment_id(int assessment_id) {
                return ((staff_assessmentRow)(this.Rows.Find(new object[] {
                            assessment_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_assessmentDataTable cln = ((staff_assessmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_assessmentDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnassessment_id = base.Columns["assessment_id"];
                this.columnuname = base.Columns["uname"];
                this.columnapprove_by = base.Columns["approve_by"];
                this.columnapprove_date = base.Columns["approve_date"];
                this.columnachievement = base.Columns["achievement"];
                this.columnmiss_goal = base.Columns["miss_goal"];
                this.columnarea_improvement = base.Columns["area_improvement"];
                this.columnstrength = base.Columns["strength"];
                this.columnassessment_yr = base.Columns["assessment_yr"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnassessment_id = new System.Data.DataColumn("assessment_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnassessment_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnapprove_by = new System.Data.DataColumn("approve_by", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprove_by);
                this.columnapprove_date = new System.Data.DataColumn("approve_date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnapprove_date);
                this.columnachievement = new System.Data.DataColumn("achievement", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnachievement);
                this.columnmiss_goal = new System.Data.DataColumn("miss_goal", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiss_goal);
                this.columnarea_improvement = new System.Data.DataColumn("area_improvement", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnarea_improvement);
                this.columnstrength = new System.Data.DataColumn("strength", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstrength);
                this.columnassessment_yr = new System.Data.DataColumn("assessment_yr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnassessment_yr);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnassessment_id}, true));
                this.columnassessment_id.AutoIncrement = true;
                this.columnassessment_id.AllowDBNull = false;
                this.columnassessment_id.ReadOnly = true;
                this.columnassessment_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnapprove_by.MaxLength = 100;
                this.columnachievement.MaxLength = 2147483647;
                this.columnmiss_goal.MaxLength = 2147483647;
                this.columnarea_improvement.MaxLength = 2147483647;
                this.columnstrength.MaxLength = 2147483647;
                this.columnassessment_yr.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_assessmentRow Newstaff_assessmentRow() {
                return ((staff_assessmentRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_assessmentRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_assessmentRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_assessmentRowChanged != null)) {
                    this.staff_assessmentRowChanged(this, new staff_assessmentRowChangeEvent(((staff_assessmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_assessmentRowChanging != null)) {
                    this.staff_assessmentRowChanging(this, new staff_assessmentRowChangeEvent(((staff_assessmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_assessmentRowDeleted != null)) {
                    this.staff_assessmentRowDeleted(this, new staff_assessmentRowChangeEvent(((staff_assessmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_assessmentRowDeleting != null)) {
                    this.staff_assessmentRowDeleting(this, new staff_assessmentRowChangeEvent(((staff_assessmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_assessmentRow(staff_assessmentRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_assessmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_competency_coreDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columncc_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnscore;
            
            private System.Data.DataColumn columncreatedate;
            
            private System.Data.DataColumn columnupdatedate;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_coreDataTable() {
                this.TableName = "staff_competency_core";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_competency_coreDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_competency_coreDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cc_idColumn {
                get {
                    return this.columncc_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn scoreColumn {
                get {
                    return this.columnscore;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn createdateColumn {
                get {
                    return this.columncreatedate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn updatedateColumn {
                get {
                    return this.columnupdatedate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_coreRow this[int index] {
                get {
                    return ((staff_competency_coreRow)(this.Rows[index]));
                }
            }
            
            public event staff_competency_coreRowChangeEventHandler staff_competency_coreRowChanging;
            
            public event staff_competency_coreRowChangeEventHandler staff_competency_coreRowChanged;
            
            public event staff_competency_coreRowChangeEventHandler staff_competency_coreRowDeleting;
            
            public event staff_competency_coreRowChangeEventHandler staff_competency_coreRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_competency_coreRow(staff_competency_coreRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_coreRow Addstaff_competency_coreRow(int cc_id, staff_indexRow parentstaff_indexRowByFK_staff_competency_core_staff_index, int score, System.DateTime createdate, System.DateTime updatedate) {
                staff_competency_coreRow rowstaff_competency_coreRow = ((staff_competency_coreRow)(this.NewRow()));
                rowstaff_competency_coreRow.ItemArray = new object[] {
                        null,
                        cc_id,
                        parentstaff_indexRowByFK_staff_competency_core_staff_index[0],
                        score,
                        createdate,
                        updatedate};
                this.Rows.Add(rowstaff_competency_coreRow);
                return rowstaff_competency_coreRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_coreRow FindByid(int id) {
                return ((staff_competency_coreRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_competency_coreDataTable cln = ((staff_competency_coreDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_competency_coreDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncc_id = base.Columns["cc_id"];
                this.columnuname = base.Columns["uname"];
                this.columnscore = base.Columns["score"];
                this.columncreatedate = base.Columns["createdate"];
                this.columnupdatedate = base.Columns["updatedate"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncc_id = new System.Data.DataColumn("cc_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncc_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnscore = new System.Data.DataColumn("score", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnscore);
                this.columncreatedate = new System.Data.DataColumn("createdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedate);
                this.columnupdatedate = new System.Data.DataColumn("updatedate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdatedate);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnuname.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_coreRow Newstaff_competency_coreRow() {
                return ((staff_competency_coreRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_competency_coreRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_competency_coreRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_competency_coreRowChanged != null)) {
                    this.staff_competency_coreRowChanged(this, new staff_competency_coreRowChangeEvent(((staff_competency_coreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_competency_coreRowChanging != null)) {
                    this.staff_competency_coreRowChanging(this, new staff_competency_coreRowChangeEvent(((staff_competency_coreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_competency_coreRowDeleted != null)) {
                    this.staff_competency_coreRowDeleted(this, new staff_competency_coreRowChangeEvent(((staff_competency_coreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_competency_coreRowDeleting != null)) {
                    this.staff_competency_coreRowDeleting(this, new staff_competency_coreRowChangeEvent(((staff_competency_coreRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_competency_coreRow(staff_competency_coreRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_competency_coreDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_competency_structuralDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columncst_subject_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnscore;
            
            private System.Data.DataColumn columncreatedate;
            
            private System.Data.DataColumn columnupdatedate;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_structuralDataTable() {
                this.TableName = "staff_competency_structural";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_competency_structuralDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_competency_structuralDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_subject_idColumn {
                get {
                    return this.columncst_subject_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn scoreColumn {
                get {
                    return this.columnscore;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn createdateColumn {
                get {
                    return this.columncreatedate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn updatedateColumn {
                get {
                    return this.columnupdatedate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_structuralRow this[int index] {
                get {
                    return ((staff_competency_structuralRow)(this.Rows[index]));
                }
            }
            
            public event staff_competency_structuralRowChangeEventHandler staff_competency_structuralRowChanging;
            
            public event staff_competency_structuralRowChangeEventHandler staff_competency_structuralRowChanged;
            
            public event staff_competency_structuralRowChangeEventHandler staff_competency_structuralRowDeleting;
            
            public event staff_competency_structuralRowChangeEventHandler staff_competency_structuralRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_competency_structuralRow(staff_competency_structuralRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_structuralRow Addstaff_competency_structuralRow(int cst_subject_id, staff_indexRow parentstaff_indexRowByFK_staff_competency_structural_staff_index, int score, string createdate, string updatedate) {
                staff_competency_structuralRow rowstaff_competency_structuralRow = ((staff_competency_structuralRow)(this.NewRow()));
                rowstaff_competency_structuralRow.ItemArray = new object[] {
                        null,
                        cst_subject_id,
                        parentstaff_indexRowByFK_staff_competency_structural_staff_index[0],
                        score,
                        createdate,
                        updatedate};
                this.Rows.Add(rowstaff_competency_structuralRow);
                return rowstaff_competency_structuralRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_structuralRow FindByid(int id) {
                return ((staff_competency_structuralRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_competency_structuralDataTable cln = ((staff_competency_structuralDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_competency_structuralDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columncst_subject_id = base.Columns["cst_subject_id"];
                this.columnuname = base.Columns["uname"];
                this.columnscore = base.Columns["score"];
                this.columncreatedate = base.Columns["createdate"];
                this.columnupdatedate = base.Columns["updatedate"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncst_subject_id = new System.Data.DataColumn("cst_subject_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_subject_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnscore = new System.Data.DataColumn("score", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnscore);
                this.columncreatedate = new System.Data.DataColumn("createdate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncreatedate);
                this.columnupdatedate = new System.Data.DataColumn("updatedate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdatedate);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columncreatedate.MaxLength = 50;
                this.columnupdatedate.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_structuralRow Newstaff_competency_structuralRow() {
                return ((staff_competency_structuralRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_competency_structuralRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_competency_structuralRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_competency_structuralRowChanged != null)) {
                    this.staff_competency_structuralRowChanged(this, new staff_competency_structuralRowChangeEvent(((staff_competency_structuralRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_competency_structuralRowChanging != null)) {
                    this.staff_competency_structuralRowChanging(this, new staff_competency_structuralRowChangeEvent(((staff_competency_structuralRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_competency_structuralRowDeleted != null)) {
                    this.staff_competency_structuralRowDeleted(this, new staff_competency_structuralRowChangeEvent(((staff_competency_structuralRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_competency_structuralRowDeleting != null)) {
                    this.staff_competency_structuralRowDeleting(this, new staff_competency_structuralRowChangeEvent(((staff_competency_structuralRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_competency_structuralRow(staff_competency_structuralRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_competency_structuralDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_educationDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_education_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columneducation_level;
            
            private System.Data.DataColumn columneducation_startdate;
            
            private System.Data.DataColumn columneducation_enddate;
            
            private System.Data.DataColumn columneducation_major;
            
            private System.Data.DataColumn columneducation_gpa;
            
            private System.Data.DataColumn columneducation_institute;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_educationDataTable() {
                this.TableName = "staff_education";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_educationDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_educationDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_education_idColumn {
                get {
                    return this.columnstaff_education_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn education_levelColumn {
                get {
                    return this.columneducation_level;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn education_startdateColumn {
                get {
                    return this.columneducation_startdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn education_enddateColumn {
                get {
                    return this.columneducation_enddate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn education_majorColumn {
                get {
                    return this.columneducation_major;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn education_gpaColumn {
                get {
                    return this.columneducation_gpa;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn education_instituteColumn {
                get {
                    return this.columneducation_institute;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_educationRow this[int index] {
                get {
                    return ((staff_educationRow)(this.Rows[index]));
                }
            }
            
            public event staff_educationRowChangeEventHandler staff_educationRowChanging;
            
            public event staff_educationRowChangeEventHandler staff_educationRowChanged;
            
            public event staff_educationRowChangeEventHandler staff_educationRowDeleting;
            
            public event staff_educationRowChangeEventHandler staff_educationRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_educationRow(staff_educationRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_educationRow Addstaff_educationRow(int staff_education_id, staff_indexRow parentstaff_indexRowByFK_staff_education_staff_index, string education_level, System.DateTime education_startdate, System.DateTime education_enddate, string education_major, decimal education_gpa, string education_institute) {
                staff_educationRow rowstaff_educationRow = ((staff_educationRow)(this.NewRow()));
                rowstaff_educationRow.ItemArray = new object[] {
                        staff_education_id,
                        parentstaff_indexRowByFK_staff_education_staff_index[0],
                        education_level,
                        education_startdate,
                        education_enddate,
                        education_major,
                        education_gpa,
                        education_institute};
                this.Rows.Add(rowstaff_educationRow);
                return rowstaff_educationRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_educationRow FindBystaff_education_id(int staff_education_id) {
                return ((staff_educationRow)(this.Rows.Find(new object[] {
                            staff_education_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_educationDataTable cln = ((staff_educationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_educationDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_education_id = base.Columns["staff_education_id"];
                this.columnuname = base.Columns["uname"];
                this.columneducation_level = base.Columns["education_level"];
                this.columneducation_startdate = base.Columns["education_startdate"];
                this.columneducation_enddate = base.Columns["education_enddate"];
                this.columneducation_major = base.Columns["education_major"];
                this.columneducation_gpa = base.Columns["education_gpa"];
                this.columneducation_institute = base.Columns["education_institute"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_education_id = new System.Data.DataColumn("staff_education_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_education_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columneducation_level = new System.Data.DataColumn("education_level", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columneducation_level);
                this.columneducation_startdate = new System.Data.DataColumn("education_startdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columneducation_startdate);
                this.columneducation_enddate = new System.Data.DataColumn("education_enddate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columneducation_enddate);
                this.columneducation_major = new System.Data.DataColumn("education_major", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columneducation_major);
                this.columneducation_gpa = new System.Data.DataColumn("education_gpa", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columneducation_gpa);
                this.columneducation_institute = new System.Data.DataColumn("education_institute", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columneducation_institute);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_education_id}, true));
                this.columnstaff_education_id.AllowDBNull = false;
                this.columnstaff_education_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columneducation_level.MaxLength = 150;
                this.columneducation_major.MaxLength = 255;
                this.columneducation_institute.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_educationRow Newstaff_educationRow() {
                return ((staff_educationRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_educationRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_educationRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_educationRowChanged != null)) {
                    this.staff_educationRowChanged(this, new staff_educationRowChangeEvent(((staff_educationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_educationRowChanging != null)) {
                    this.staff_educationRowChanging(this, new staff_educationRowChangeEvent(((staff_educationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_educationRowDeleted != null)) {
                    this.staff_educationRowDeleted(this, new staff_educationRowChangeEvent(((staff_educationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_educationRowDeleting != null)) {
                    this.staff_educationRowDeleting(this, new staff_educationRowChangeEvent(((staff_educationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_educationRow(staff_educationRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_educationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_familyDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnfamily_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnfamily_salutation;
            
            private System.Data.DataColumn columnfamily_name;
            
            private System.Data.DataColumn columnfamily_surname;
            
            private System.Data.DataColumn columnfamily_relation;
            
            private System.Data.DataColumn columnfamily_occupation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_familyDataTable() {
                this.TableName = "staff_family";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_familyDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_familyDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn family_idColumn {
                get {
                    return this.columnfamily_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn family_salutationColumn {
                get {
                    return this.columnfamily_salutation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn family_nameColumn {
                get {
                    return this.columnfamily_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn family_surnameColumn {
                get {
                    return this.columnfamily_surname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn family_relationColumn {
                get {
                    return this.columnfamily_relation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn family_occupationColumn {
                get {
                    return this.columnfamily_occupation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_familyRow this[int index] {
                get {
                    return ((staff_familyRow)(this.Rows[index]));
                }
            }
            
            public event staff_familyRowChangeEventHandler staff_familyRowChanging;
            
            public event staff_familyRowChangeEventHandler staff_familyRowChanged;
            
            public event staff_familyRowChangeEventHandler staff_familyRowDeleting;
            
            public event staff_familyRowChangeEventHandler staff_familyRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_familyRow(staff_familyRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_familyRow Addstaff_familyRow(int family_id, staff_indexRow parentstaff_indexRowByFK_staff_family_staff_index, string family_salutation, string family_name, string family_surname, string family_relation, string family_occupation) {
                staff_familyRow rowstaff_familyRow = ((staff_familyRow)(this.NewRow()));
                rowstaff_familyRow.ItemArray = new object[] {
                        family_id,
                        parentstaff_indexRowByFK_staff_family_staff_index[0],
                        family_salutation,
                        family_name,
                        family_surname,
                        family_relation,
                        family_occupation};
                this.Rows.Add(rowstaff_familyRow);
                return rowstaff_familyRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_familyRow FindByfamily_id(int family_id) {
                return ((staff_familyRow)(this.Rows.Find(new object[] {
                            family_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_familyDataTable cln = ((staff_familyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_familyDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnfamily_id = base.Columns["family_id"];
                this.columnuname = base.Columns["uname"];
                this.columnfamily_salutation = base.Columns["family_salutation"];
                this.columnfamily_name = base.Columns["family_name"];
                this.columnfamily_surname = base.Columns["family_surname"];
                this.columnfamily_relation = base.Columns["family_relation"];
                this.columnfamily_occupation = base.Columns["family_occupation"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnfamily_id = new System.Data.DataColumn("family_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnfamily_salutation = new System.Data.DataColumn("family_salutation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily_salutation);
                this.columnfamily_name = new System.Data.DataColumn("family_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily_name);
                this.columnfamily_surname = new System.Data.DataColumn("family_surname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily_surname);
                this.columnfamily_relation = new System.Data.DataColumn("family_relation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily_relation);
                this.columnfamily_occupation = new System.Data.DataColumn("family_occupation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily_occupation);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnfamily_id}, true));
                this.columnfamily_id.AllowDBNull = false;
                this.columnfamily_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnfamily_salutation.MaxLength = 50;
                this.columnfamily_name.MaxLength = 50;
                this.columnfamily_surname.MaxLength = 50;
                this.columnfamily_relation.MaxLength = 50;
                this.columnfamily_occupation.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_familyRow Newstaff_familyRow() {
                return ((staff_familyRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_familyRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_familyRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_familyRowChanged != null)) {
                    this.staff_familyRowChanged(this, new staff_familyRowChangeEvent(((staff_familyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_familyRowChanging != null)) {
                    this.staff_familyRowChanging(this, new staff_familyRowChangeEvent(((staff_familyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_familyRowDeleted != null)) {
                    this.staff_familyRowDeleted(this, new staff_familyRowChangeEvent(((staff_familyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_familyRowDeleting != null)) {
                    this.staff_familyRowDeleting(this, new staff_familyRowChangeEvent(((staff_familyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_familyRow(staff_familyRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_familyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_healhistoryDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_healhistory_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnhealhistory_hospital;
            
            private System.Data.DataColumn columnhealhistory_startdate;
            
            private System.Data.DataColumn columnhealhistory_enddate;
            
            private System.Data.DataColumn columnhealhistory_detail;
            
            private System.Data.DataColumn columnhealhistory_expense;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_healhistoryDataTable() {
                this.TableName = "staff_healhistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_healhistoryDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_healhistoryDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_healhistory_idColumn {
                get {
                    return this.columnstaff_healhistory_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn healhistory_hospitalColumn {
                get {
                    return this.columnhealhistory_hospital;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn healhistory_startdateColumn {
                get {
                    return this.columnhealhistory_startdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn healhistory_enddateColumn {
                get {
                    return this.columnhealhistory_enddate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn healhistory_detailColumn {
                get {
                    return this.columnhealhistory_detail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn healhistory_expenseColumn {
                get {
                    return this.columnhealhistory_expense;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_healhistoryRow this[int index] {
                get {
                    return ((staff_healhistoryRow)(this.Rows[index]));
                }
            }
            
            public event staff_healhistoryRowChangeEventHandler staff_healhistoryRowChanging;
            
            public event staff_healhistoryRowChangeEventHandler staff_healhistoryRowChanged;
            
            public event staff_healhistoryRowChangeEventHandler staff_healhistoryRowDeleting;
            
            public event staff_healhistoryRowChangeEventHandler staff_healhistoryRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_healhistoryRow(staff_healhistoryRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_healhistoryRow Addstaff_healhistoryRow(int staff_healhistory_id, staff_indexRow parentstaff_indexRowByFK_staff_healhistory_staff_index, string healhistory_hospital, System.DateTime healhistory_startdate, System.DateTime healhistory_enddate, string healhistory_detail, string healhistory_expense) {
                staff_healhistoryRow rowstaff_healhistoryRow = ((staff_healhistoryRow)(this.NewRow()));
                rowstaff_healhistoryRow.ItemArray = new object[] {
                        staff_healhistory_id,
                        parentstaff_indexRowByFK_staff_healhistory_staff_index[0],
                        healhistory_hospital,
                        healhistory_startdate,
                        healhistory_enddate,
                        healhistory_detail,
                        healhistory_expense};
                this.Rows.Add(rowstaff_healhistoryRow);
                return rowstaff_healhistoryRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_healhistoryRow FindBystaff_healhistory_id(int staff_healhistory_id) {
                return ((staff_healhistoryRow)(this.Rows.Find(new object[] {
                            staff_healhistory_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_healhistoryDataTable cln = ((staff_healhistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_healhistoryDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_healhistory_id = base.Columns["staff_healhistory_id"];
                this.columnuname = base.Columns["uname"];
                this.columnhealhistory_hospital = base.Columns["healhistory_hospital"];
                this.columnhealhistory_startdate = base.Columns["healhistory_startdate"];
                this.columnhealhistory_enddate = base.Columns["healhistory_enddate"];
                this.columnhealhistory_detail = base.Columns["healhistory_detail"];
                this.columnhealhistory_expense = base.Columns["healhistory_expense"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_healhistory_id = new System.Data.DataColumn("staff_healhistory_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_healhistory_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnhealhistory_hospital = new System.Data.DataColumn("healhistory_hospital", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhealhistory_hospital);
                this.columnhealhistory_startdate = new System.Data.DataColumn("healhistory_startdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhealhistory_startdate);
                this.columnhealhistory_enddate = new System.Data.DataColumn("healhistory_enddate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhealhistory_enddate);
                this.columnhealhistory_detail = new System.Data.DataColumn("healhistory_detail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhealhistory_detail);
                this.columnhealhistory_expense = new System.Data.DataColumn("healhistory_expense", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhealhistory_expense);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_healhistory_id}, true));
                this.columnstaff_healhistory_id.AllowDBNull = false;
                this.columnstaff_healhistory_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnhealhistory_hospital.MaxLength = 100;
                this.columnhealhistory_detail.MaxLength = 255;
                this.columnhealhistory_expense.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_healhistoryRow Newstaff_healhistoryRow() {
                return ((staff_healhistoryRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_healhistoryRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_healhistoryRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_healhistoryRowChanged != null)) {
                    this.staff_healhistoryRowChanged(this, new staff_healhistoryRowChangeEvent(((staff_healhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_healhistoryRowChanging != null)) {
                    this.staff_healhistoryRowChanging(this, new staff_healhistoryRowChangeEvent(((staff_healhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_healhistoryRowDeleted != null)) {
                    this.staff_healhistoryRowDeleted(this, new staff_healhistoryRowChangeEvent(((staff_healhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_healhistoryRowDeleting != null)) {
                    this.staff_healhistoryRowDeleting(this, new staff_healhistoryRowChangeEvent(((staff_healhistoryRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_healhistoryRow(staff_healhistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_healhistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_hipotDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnstatus_hipot;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_hipotDataTable() {
                this.TableName = "staff_hipot";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_hipotDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_hipotDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn status_hipotColumn {
                get {
                    return this.columnstatus_hipot;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_hipotRow this[int index] {
                get {
                    return ((staff_hipotRow)(this.Rows[index]));
                }
            }
            
            public event staff_hipotRowChangeEventHandler staff_hipotRowChanging;
            
            public event staff_hipotRowChangeEventHandler staff_hipotRowChanged;
            
            public event staff_hipotRowChangeEventHandler staff_hipotRowDeleting;
            
            public event staff_hipotRowChangeEventHandler staff_hipotRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_hipotRow(staff_hipotRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_hipotRow Addstaff_hipotRow(staff_indexRow parentstaff_indexRowByFK_staff_hipot_staff_index, bool status_hipot) {
                staff_hipotRow rowstaff_hipotRow = ((staff_hipotRow)(this.NewRow()));
                rowstaff_hipotRow.ItemArray = new object[] {
                        parentstaff_indexRowByFK_staff_hipot_staff_index[0],
                        status_hipot};
                this.Rows.Add(rowstaff_hipotRow);
                return rowstaff_hipotRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_hipotRow FindByuname(string uname) {
                return ((staff_hipotRow)(this.Rows.Find(new object[] {
                            uname})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_hipotDataTable cln = ((staff_hipotDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_hipotDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuname = base.Columns["uname"];
                this.columnstatus_hipot = base.Columns["status_hipot"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnstatus_hipot = new System.Data.DataColumn("status_hipot", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus_hipot);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuname}, true));
                this.columnuname.AllowDBNull = false;
                this.columnuname.Unique = true;
                this.columnuname.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_hipotRow Newstaff_hipotRow() {
                return ((staff_hipotRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_hipotRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_hipotRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_hipotRowChanged != null)) {
                    this.staff_hipotRowChanged(this, new staff_hipotRowChangeEvent(((staff_hipotRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_hipotRowChanging != null)) {
                    this.staff_hipotRowChanging(this, new staff_hipotRowChangeEvent(((staff_hipotRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_hipotRowDeleted != null)) {
                    this.staff_hipotRowDeleted(this, new staff_hipotRowChangeEvent(((staff_hipotRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_hipotRowDeleting != null)) {
                    this.staff_hipotRowDeleting(this, new staff_hipotRowChangeEvent(((staff_hipotRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_hipotRow(staff_hipotRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_hipotDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_indexDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnpwd;
            
            private System.Data.DataColumn columncompany_id;
            
            private System.Data.DataColumn columndepartment_id;
            
            private System.Data.DataColumn columnstaff_position;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexDataTable() {
                this.TableName = "staff_index";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_indexDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_indexDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn pwdColumn {
                get {
                    return this.columnpwd;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn company_idColumn {
                get {
                    return this.columncompany_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn department_idColumn {
                get {
                    return this.columndepartment_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_positionColumn {
                get {
                    return this.columnstaff_position;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow this[int index] {
                get {
                    return ((staff_indexRow)(this.Rows[index]));
                }
            }
            
            public event staff_indexRowChangeEventHandler staff_indexRowChanging;
            
            public event staff_indexRowChangeEventHandler staff_indexRowChanged;
            
            public event staff_indexRowChangeEventHandler staff_indexRowDeleting;
            
            public event staff_indexRowChangeEventHandler staff_indexRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_indexRow(staff_indexRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow Addstaff_indexRow(string uname, string pwd, string company_id, int department_id, int staff_position) {
                staff_indexRow rowstaff_indexRow = ((staff_indexRow)(this.NewRow()));
                rowstaff_indexRow.ItemArray = new object[] {
                        uname,
                        pwd,
                        company_id,
                        department_id,
                        staff_position};
                this.Rows.Add(rowstaff_indexRow);
                return rowstaff_indexRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow FindByuname(string uname) {
                return ((staff_indexRow)(this.Rows.Find(new object[] {
                            uname})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_indexDataTable cln = ((staff_indexDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_indexDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuname = base.Columns["uname"];
                this.columnpwd = base.Columns["pwd"];
                this.columncompany_id = base.Columns["company_id"];
                this.columndepartment_id = base.Columns["department_id"];
                this.columnstaff_position = base.Columns["staff_position"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnpwd = new System.Data.DataColumn("pwd", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpwd);
                this.columncompany_id = new System.Data.DataColumn("company_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_id);
                this.columndepartment_id = new System.Data.DataColumn("department_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_id);
                this.columnstaff_position = new System.Data.DataColumn("staff_position", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_position);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuname}, true));
                this.columnuname.AllowDBNull = false;
                this.columnuname.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnpwd.MaxLength = 50;
                this.columncompany_id.MaxLength = 20;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow Newstaff_indexRow() {
                return ((staff_indexRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_indexRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_indexRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_indexRowChanged != null)) {
                    this.staff_indexRowChanged(this, new staff_indexRowChangeEvent(((staff_indexRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_indexRowChanging != null)) {
                    this.staff_indexRowChanging(this, new staff_indexRowChangeEvent(((staff_indexRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_indexRowDeleted != null)) {
                    this.staff_indexRowDeleted(this, new staff_indexRowChangeEvent(((staff_indexRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_indexRowDeleting != null)) {
                    this.staff_indexRowDeleting(this, new staff_indexRowChangeEvent(((staff_indexRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_indexRow(staff_indexRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_indexDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_infoDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnstaff_id;
            
            private System.Data.DataColumn columnstaff_salutation;
            
            private System.Data.DataColumn columnstaff_name;
            
            private System.Data.DataColumn columnstaff_surname;
            
            private System.Data.DataColumn columnstaff_salutation_en;
            
            private System.Data.DataColumn columnstaff_name_en;
            
            private System.Data.DataColumn columnstaff_surname_en;
            
            private System.Data.DataColumn columnstaff_gender;
            
            private System.Data.DataColumn columnstaff_height;
            
            private System.Data.DataColumn columnstaff_weight;
            
            private System.Data.DataColumn columnstaff_bloodtype;
            
            private System.Data.DataColumn columnstaff_origin;
            
            private System.Data.DataColumn columnstaff_nationality;
            
            private System.Data.DataColumn columnstaff_religion;
            
            private System.Data.DataColumn columnstaff_birthcountry;
            
            private System.Data.DataColumn columnstaff_birthprovince;
            
            private System.Data.DataColumn columnstaff_birthdate;
            
            private System.Data.DataColumn columnstaff_marital_status;
            
            private System.Data.DataColumn columnstaff_marital_registdate;
            
            private System.Data.DataColumn columnstaff_photo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_infoDataTable() {
                this.TableName = "staff_info";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_infoDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_infoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_idColumn {
                get {
                    return this.columnstaff_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_salutationColumn {
                get {
                    return this.columnstaff_salutation;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_nameColumn {
                get {
                    return this.columnstaff_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_surnameColumn {
                get {
                    return this.columnstaff_surname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_salutation_enColumn {
                get {
                    return this.columnstaff_salutation_en;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_name_enColumn {
                get {
                    return this.columnstaff_name_en;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_surname_enColumn {
                get {
                    return this.columnstaff_surname_en;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_genderColumn {
                get {
                    return this.columnstaff_gender;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_heightColumn {
                get {
                    return this.columnstaff_height;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_weightColumn {
                get {
                    return this.columnstaff_weight;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_bloodtypeColumn {
                get {
                    return this.columnstaff_bloodtype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_originColumn {
                get {
                    return this.columnstaff_origin;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_nationalityColumn {
                get {
                    return this.columnstaff_nationality;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_religionColumn {
                get {
                    return this.columnstaff_religion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_birthcountryColumn {
                get {
                    return this.columnstaff_birthcountry;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_birthprovinceColumn {
                get {
                    return this.columnstaff_birthprovince;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_birthdateColumn {
                get {
                    return this.columnstaff_birthdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_marital_statusColumn {
                get {
                    return this.columnstaff_marital_status;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_marital_registdateColumn {
                get {
                    return this.columnstaff_marital_registdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_photoColumn {
                get {
                    return this.columnstaff_photo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_infoRow this[int index] {
                get {
                    return ((staff_infoRow)(this.Rows[index]));
                }
            }
            
            public event staff_infoRowChangeEventHandler staff_infoRowChanging;
            
            public event staff_infoRowChangeEventHandler staff_infoRowChanged;
            
            public event staff_infoRowChangeEventHandler staff_infoRowDeleting;
            
            public event staff_infoRowChangeEventHandler staff_infoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_infoRow(staff_infoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_infoRow Addstaff_infoRow(
                        staff_indexRow parentstaff_indexRowByFK_staff_info_staff_index, 
                        string staff_id, 
                        string staff_salutation, 
                        string staff_name, 
                        string staff_surname, 
                        string staff_salutation_en, 
                        string staff_name_en, 
                        string staff_surname_en, 
                        int staff_gender, 
                        int staff_height, 
                        int staff_weight, 
                        string staff_bloodtype, 
                        string staff_origin, 
                        string staff_nationality, 
                        string staff_religion, 
                        string staff_birthcountry, 
                        string staff_birthprovince, 
                        System.DateTime staff_birthdate, 
                        int staff_marital_status, 
                        System.DateTime staff_marital_registdate, 
                        string staff_photo) {
                staff_infoRow rowstaff_infoRow = ((staff_infoRow)(this.NewRow()));
                rowstaff_infoRow.ItemArray = new object[] {
                        parentstaff_indexRowByFK_staff_info_staff_index[0],
                        staff_id,
                        staff_salutation,
                        staff_name,
                        staff_surname,
                        staff_salutation_en,
                        staff_name_en,
                        staff_surname_en,
                        staff_gender,
                        staff_height,
                        staff_weight,
                        staff_bloodtype,
                        staff_origin,
                        staff_nationality,
                        staff_religion,
                        staff_birthcountry,
                        staff_birthprovince,
                        staff_birthdate,
                        staff_marital_status,
                        staff_marital_registdate,
                        staff_photo};
                this.Rows.Add(rowstaff_infoRow);
                return rowstaff_infoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_infoRow FindByuname(string uname) {
                return ((staff_infoRow)(this.Rows.Find(new object[] {
                            uname})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_infoDataTable cln = ((staff_infoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_infoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuname = base.Columns["uname"];
                this.columnstaff_id = base.Columns["staff_id"];
                this.columnstaff_salutation = base.Columns["staff_salutation"];
                this.columnstaff_name = base.Columns["staff_name"];
                this.columnstaff_surname = base.Columns["staff_surname"];
                this.columnstaff_salutation_en = base.Columns["staff_salutation_en"];
                this.columnstaff_name_en = base.Columns["staff_name_en"];
                this.columnstaff_surname_en = base.Columns["staff_surname_en"];
                this.columnstaff_gender = base.Columns["staff_gender"];
                this.columnstaff_height = base.Columns["staff_height"];
                this.columnstaff_weight = base.Columns["staff_weight"];
                this.columnstaff_bloodtype = base.Columns["staff_bloodtype"];
                this.columnstaff_origin = base.Columns["staff_origin"];
                this.columnstaff_nationality = base.Columns["staff_nationality"];
                this.columnstaff_religion = base.Columns["staff_religion"];
                this.columnstaff_birthcountry = base.Columns["staff_birthcountry"];
                this.columnstaff_birthprovince = base.Columns["staff_birthprovince"];
                this.columnstaff_birthdate = base.Columns["staff_birthdate"];
                this.columnstaff_marital_status = base.Columns["staff_marital_status"];
                this.columnstaff_marital_registdate = base.Columns["staff_marital_registdate"];
                this.columnstaff_photo = base.Columns["staff_photo"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnstaff_id = new System.Data.DataColumn("staff_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_id);
                this.columnstaff_salutation = new System.Data.DataColumn("staff_salutation", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_salutation);
                this.columnstaff_name = new System.Data.DataColumn("staff_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_name);
                this.columnstaff_surname = new System.Data.DataColumn("staff_surname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_surname);
                this.columnstaff_salutation_en = new System.Data.DataColumn("staff_salutation_en", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_salutation_en);
                this.columnstaff_name_en = new System.Data.DataColumn("staff_name_en", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_name_en);
                this.columnstaff_surname_en = new System.Data.DataColumn("staff_surname_en", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_surname_en);
                this.columnstaff_gender = new System.Data.DataColumn("staff_gender", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_gender);
                this.columnstaff_height = new System.Data.DataColumn("staff_height", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_height);
                this.columnstaff_weight = new System.Data.DataColumn("staff_weight", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_weight);
                this.columnstaff_bloodtype = new System.Data.DataColumn("staff_bloodtype", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_bloodtype);
                this.columnstaff_origin = new System.Data.DataColumn("staff_origin", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_origin);
                this.columnstaff_nationality = new System.Data.DataColumn("staff_nationality", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_nationality);
                this.columnstaff_religion = new System.Data.DataColumn("staff_religion", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_religion);
                this.columnstaff_birthcountry = new System.Data.DataColumn("staff_birthcountry", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_birthcountry);
                this.columnstaff_birthprovince = new System.Data.DataColumn("staff_birthprovince", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_birthprovince);
                this.columnstaff_birthdate = new System.Data.DataColumn("staff_birthdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_birthdate);
                this.columnstaff_marital_status = new System.Data.DataColumn("staff_marital_status", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_marital_status);
                this.columnstaff_marital_registdate = new System.Data.DataColumn("staff_marital_registdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_marital_registdate);
                this.columnstaff_photo = new System.Data.DataColumn("staff_photo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_photo);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuname}, true));
                this.columnuname.AllowDBNull = false;
                this.columnuname.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnstaff_id.MaxLength = 255;
                this.columnstaff_salutation.MaxLength = 100;
                this.columnstaff_name.MaxLength = 255;
                this.columnstaff_surname.MaxLength = 255;
                this.columnstaff_salutation_en.MaxLength = 100;
                this.columnstaff_name_en.MaxLength = 255;
                this.columnstaff_surname_en.MaxLength = 255;
                this.columnstaff_bloodtype.MaxLength = 255;
                this.columnstaff_origin.MaxLength = 255;
                this.columnstaff_nationality.MaxLength = 255;
                this.columnstaff_religion.MaxLength = 255;
                this.columnstaff_birthcountry.MaxLength = 255;
                this.columnstaff_birthprovince.MaxLength = 255;
                this.columnstaff_photo.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_infoRow Newstaff_infoRow() {
                return ((staff_infoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_infoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_infoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_infoRowChanged != null)) {
                    this.staff_infoRowChanged(this, new staff_infoRowChangeEvent(((staff_infoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_infoRowChanging != null)) {
                    this.staff_infoRowChanging(this, new staff_infoRowChangeEvent(((staff_infoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_infoRowDeleted != null)) {
                    this.staff_infoRowDeleted(this, new staff_infoRowChangeEvent(((staff_infoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_infoRowDeleting != null)) {
                    this.staff_infoRowDeleting(this, new staff_infoRowChangeEvent(((staff_infoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_infoRow(staff_infoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_infoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_nonworkingDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnnonworking_business_day;
            
            private System.Data.DataColumn columnnonworking_business_hr;
            
            private System.Data.DataColumn columnnonworking_sick_day;
            
            private System.Data.DataColumn columnnonworking_sick_hr;
            
            private System.Data.DataColumn columnnonworking_work_day;
            
            private System.Data.DataColumn columnnonworking_work_hr;
            
            private System.Data.DataColumn columnnonworking_vacation_day;
            
            private System.Data.DataColumn columnnonworking_vacation_hr;
            
            private System.Data.DataColumn columnnonworking_late_day;
            
            private System.Data.DataColumn columnnonworking_late_hr;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_nonworkingDataTable() {
                this.TableName = "staff_nonworking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_nonworkingDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_nonworkingDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_business_dayColumn {
                get {
                    return this.columnnonworking_business_day;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_business_hrColumn {
                get {
                    return this.columnnonworking_business_hr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_sick_dayColumn {
                get {
                    return this.columnnonworking_sick_day;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_sick_hrColumn {
                get {
                    return this.columnnonworking_sick_hr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_work_dayColumn {
                get {
                    return this.columnnonworking_work_day;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_work_hrColumn {
                get {
                    return this.columnnonworking_work_hr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_vacation_dayColumn {
                get {
                    return this.columnnonworking_vacation_day;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_vacation_hrColumn {
                get {
                    return this.columnnonworking_vacation_hr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_late_dayColumn {
                get {
                    return this.columnnonworking_late_day;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_late_hrColumn {
                get {
                    return this.columnnonworking_late_hr;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_nonworkingRow this[int index] {
                get {
                    return ((staff_nonworkingRow)(this.Rows[index]));
                }
            }
            
            public event staff_nonworkingRowChangeEventHandler staff_nonworkingRowChanging;
            
            public event staff_nonworkingRowChangeEventHandler staff_nonworkingRowChanged;
            
            public event staff_nonworkingRowChangeEventHandler staff_nonworkingRowDeleting;
            
            public event staff_nonworkingRowChangeEventHandler staff_nonworkingRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_nonworkingRow(staff_nonworkingRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_nonworkingRow Addstaff_nonworkingRow(string uname, string nonworking_business_day, string nonworking_business_hr, string nonworking_sick_day, string nonworking_sick_hr, string nonworking_work_day, string nonworking_work_hr, string nonworking_vacation_day, string nonworking_vacation_hr, string nonworking_late_day, string nonworking_late_hr) {
                staff_nonworkingRow rowstaff_nonworkingRow = ((staff_nonworkingRow)(this.NewRow()));
                rowstaff_nonworkingRow.ItemArray = new object[] {
                        uname,
                        nonworking_business_day,
                        nonworking_business_hr,
                        nonworking_sick_day,
                        nonworking_sick_hr,
                        nonworking_work_day,
                        nonworking_work_hr,
                        nonworking_vacation_day,
                        nonworking_vacation_hr,
                        nonworking_late_day,
                        nonworking_late_hr};
                this.Rows.Add(rowstaff_nonworkingRow);
                return rowstaff_nonworkingRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_nonworkingRow FindByuname(string uname) {
                return ((staff_nonworkingRow)(this.Rows.Find(new object[] {
                            uname})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_nonworkingDataTable cln = ((staff_nonworkingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_nonworkingDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuname = base.Columns["uname"];
                this.columnnonworking_business_day = base.Columns["nonworking_business_day"];
                this.columnnonworking_business_hr = base.Columns["nonworking_business_hr"];
                this.columnnonworking_sick_day = base.Columns["nonworking_sick_day"];
                this.columnnonworking_sick_hr = base.Columns["nonworking_sick_hr"];
                this.columnnonworking_work_day = base.Columns["nonworking_work_day"];
                this.columnnonworking_work_hr = base.Columns["nonworking_work_hr"];
                this.columnnonworking_vacation_day = base.Columns["nonworking_vacation_day"];
                this.columnnonworking_vacation_hr = base.Columns["nonworking_vacation_hr"];
                this.columnnonworking_late_day = base.Columns["nonworking_late_day"];
                this.columnnonworking_late_hr = base.Columns["nonworking_late_hr"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnnonworking_business_day = new System.Data.DataColumn("nonworking_business_day", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_business_day);
                this.columnnonworking_business_hr = new System.Data.DataColumn("nonworking_business_hr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_business_hr);
                this.columnnonworking_sick_day = new System.Data.DataColumn("nonworking_sick_day", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_sick_day);
                this.columnnonworking_sick_hr = new System.Data.DataColumn("nonworking_sick_hr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_sick_hr);
                this.columnnonworking_work_day = new System.Data.DataColumn("nonworking_work_day", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_work_day);
                this.columnnonworking_work_hr = new System.Data.DataColumn("nonworking_work_hr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_work_hr);
                this.columnnonworking_vacation_day = new System.Data.DataColumn("nonworking_vacation_day", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_vacation_day);
                this.columnnonworking_vacation_hr = new System.Data.DataColumn("nonworking_vacation_hr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_vacation_hr);
                this.columnnonworking_late_day = new System.Data.DataColumn("nonworking_late_day", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_late_day);
                this.columnnonworking_late_hr = new System.Data.DataColumn("nonworking_late_hr", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_late_hr);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuname}, true));
                this.columnuname.AllowDBNull = false;
                this.columnuname.Unique = true;
                this.columnuname.MaxLength = 50;
                this.columnnonworking_business_day.MaxLength = 50;
                this.columnnonworking_business_hr.MaxLength = 50;
                this.columnnonworking_sick_day.MaxLength = 50;
                this.columnnonworking_sick_hr.MaxLength = 50;
                this.columnnonworking_work_day.MaxLength = 50;
                this.columnnonworking_work_hr.MaxLength = 50;
                this.columnnonworking_vacation_day.MaxLength = 50;
                this.columnnonworking_vacation_hr.MaxLength = 50;
                this.columnnonworking_late_day.MaxLength = 50;
                this.columnnonworking_late_hr.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_nonworkingRow Newstaff_nonworkingRow() {
                return ((staff_nonworkingRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_nonworkingRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_nonworkingRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_nonworkingRowChanged != null)) {
                    this.staff_nonworkingRowChanged(this, new staff_nonworkingRowChangeEvent(((staff_nonworkingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_nonworkingRowChanging != null)) {
                    this.staff_nonworkingRowChanging(this, new staff_nonworkingRowChangeEvent(((staff_nonworkingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_nonworkingRowDeleted != null)) {
                    this.staff_nonworkingRowDeleted(this, new staff_nonworkingRowChangeEvent(((staff_nonworkingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_nonworkingRowDeleting != null)) {
                    this.staff_nonworkingRowDeleting(this, new staff_nonworkingRowChangeEvent(((staff_nonworkingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_nonworkingRow(staff_nonworkingRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_nonworkingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_ocDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnparent;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ocDataTable() {
                this.TableName = "staff_oc";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_ocDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_ocDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn parentColumn {
                get {
                    return this.columnparent;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ocRow this[int index] {
                get {
                    return ((staff_ocRow)(this.Rows[index]));
                }
            }
            
            public event staff_ocRowChangeEventHandler staff_ocRowChanging;
            
            public event staff_ocRowChangeEventHandler staff_ocRowChanged;
            
            public event staff_ocRowChangeEventHandler staff_ocRowDeleting;
            
            public event staff_ocRowChangeEventHandler staff_ocRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_ocRow(staff_ocRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ocRow Addstaff_ocRow(string uname, string parent) {
                staff_ocRow rowstaff_ocRow = ((staff_ocRow)(this.NewRow()));
                rowstaff_ocRow.ItemArray = new object[] {
                        null,
                        uname,
                        parent};
                this.Rows.Add(rowstaff_ocRow);
                return rowstaff_ocRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ocRow FindByid(int id) {
                return ((staff_ocRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_ocDataTable cln = ((staff_ocDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_ocDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuname = base.Columns["uname"];
                this.columnparent = base.Columns["parent"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnparent = new System.Data.DataColumn("parent", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnuname.MaxLength = 50;
                this.columnparent.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ocRow Newstaff_ocRow() {
                return ((staff_ocRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_ocRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_ocRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_ocRowChanged != null)) {
                    this.staff_ocRowChanged(this, new staff_ocRowChangeEvent(((staff_ocRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_ocRowChanging != null)) {
                    this.staff_ocRowChanging(this, new staff_ocRowChangeEvent(((staff_ocRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_ocRowDeleted != null)) {
                    this.staff_ocRowDeleted(this, new staff_ocRowChangeEvent(((staff_ocRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_ocRowDeleting != null)) {
                    this.staff_ocRowDeleting(this, new staff_ocRowChangeEvent(((staff_ocRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_ocRow(staff_ocRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_ocDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_occupationDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnoccupation_position;
            
            private System.Data.DataColumn columnoccupation_office;
            
            private System.Data.DataColumn columnoccupation_sector;
            
            private System.Data.DataColumn columnoccupation_division;
            
            private System.Data.DataColumn columnoccupation_department;
            
            private System.Data.DataColumn columnoccupation_company;
            
            private System.Data.DataColumn columnoccupation_status;
            
            private System.Data.DataColumn columnoccupation_startdate;
            
            private System.Data.DataColumn columnoccupation_enddate;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupationDataTable() {
                this.TableName = "staff_occupation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_occupationDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_occupationDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_positionColumn {
                get {
                    return this.columnoccupation_position;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_officeColumn {
                get {
                    return this.columnoccupation_office;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_sectorColumn {
                get {
                    return this.columnoccupation_sector;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_divisionColumn {
                get {
                    return this.columnoccupation_division;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_departmentColumn {
                get {
                    return this.columnoccupation_department;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_companyColumn {
                get {
                    return this.columnoccupation_company;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_statusColumn {
                get {
                    return this.columnoccupation_status;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_startdateColumn {
                get {
                    return this.columnoccupation_startdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_enddateColumn {
                get {
                    return this.columnoccupation_enddate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupationRow this[int index] {
                get {
                    return ((staff_occupationRow)(this.Rows[index]));
                }
            }
            
            public event staff_occupationRowChangeEventHandler staff_occupationRowChanging;
            
            public event staff_occupationRowChangeEventHandler staff_occupationRowChanged;
            
            public event staff_occupationRowChangeEventHandler staff_occupationRowDeleting;
            
            public event staff_occupationRowChangeEventHandler staff_occupationRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_occupationRow(staff_occupationRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupationRow Addstaff_occupationRow(staff_indexRow parentstaff_indexRowByFK_staff_occupation_staff_index, string occupation_position, string occupation_office, string occupation_sector, string occupation_division, string occupation_department, string occupation_company, bool occupation_status, System.DateTime occupation_startdate, System.DateTime occupation_enddate) {
                staff_occupationRow rowstaff_occupationRow = ((staff_occupationRow)(this.NewRow()));
                rowstaff_occupationRow.ItemArray = new object[] {
                        parentstaff_indexRowByFK_staff_occupation_staff_index[0],
                        occupation_position,
                        occupation_office,
                        occupation_sector,
                        occupation_division,
                        occupation_department,
                        occupation_company,
                        occupation_status,
                        occupation_startdate,
                        occupation_enddate};
                this.Rows.Add(rowstaff_occupationRow);
                return rowstaff_occupationRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupationRow FindByuname(string uname) {
                return ((staff_occupationRow)(this.Rows.Find(new object[] {
                            uname})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_occupationDataTable cln = ((staff_occupationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_occupationDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuname = base.Columns["uname"];
                this.columnoccupation_position = base.Columns["occupation_position"];
                this.columnoccupation_office = base.Columns["occupation_office"];
                this.columnoccupation_sector = base.Columns["occupation_sector"];
                this.columnoccupation_division = base.Columns["occupation_division"];
                this.columnoccupation_department = base.Columns["occupation_department"];
                this.columnoccupation_company = base.Columns["occupation_company"];
                this.columnoccupation_status = base.Columns["occupation_status"];
                this.columnoccupation_startdate = base.Columns["occupation_startdate"];
                this.columnoccupation_enddate = base.Columns["occupation_enddate"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnoccupation_position = new System.Data.DataColumn("occupation_position", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_position);
                this.columnoccupation_office = new System.Data.DataColumn("occupation_office", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_office);
                this.columnoccupation_sector = new System.Data.DataColumn("occupation_sector", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_sector);
                this.columnoccupation_division = new System.Data.DataColumn("occupation_division", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_division);
                this.columnoccupation_department = new System.Data.DataColumn("occupation_department", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_department);
                this.columnoccupation_company = new System.Data.DataColumn("occupation_company", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_company);
                this.columnoccupation_status = new System.Data.DataColumn("occupation_status", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_status);
                this.columnoccupation_startdate = new System.Data.DataColumn("occupation_startdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_startdate);
                this.columnoccupation_enddate = new System.Data.DataColumn("occupation_enddate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_enddate);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuname}, true));
                this.columnuname.AllowDBNull = false;
                this.columnuname.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnoccupation_position.MaxLength = 100;
                this.columnoccupation_office.MaxLength = 100;
                this.columnoccupation_sector.MaxLength = 100;
                this.columnoccupation_division.MaxLength = 100;
                this.columnoccupation_department.MaxLength = 100;
                this.columnoccupation_company.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupationRow Newstaff_occupationRow() {
                return ((staff_occupationRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_occupationRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_occupationRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_occupationRowChanged != null)) {
                    this.staff_occupationRowChanged(this, new staff_occupationRowChangeEvent(((staff_occupationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_occupationRowChanging != null)) {
                    this.staff_occupationRowChanging(this, new staff_occupationRowChangeEvent(((staff_occupationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_occupationRowDeleted != null)) {
                    this.staff_occupationRowDeleted(this, new staff_occupationRowChangeEvent(((staff_occupationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_occupationRowDeleting != null)) {
                    this.staff_occupationRowDeleting(this, new staff_occupationRowChangeEvent(((staff_occupationRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_occupationRow(staff_occupationRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_occupationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_occupation_historyDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnoccupation_history_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnoccupationhis_company;
            
            private System.Data.DataColumn columnoccupationhis_postion;
            
            private System.Data.DataColumn columnoccupationhis_startdate;
            
            private System.Data.DataColumn columnoccupationhis_enddate;
            
            private System.Data.DataColumn columnoccupationhis_salary;
            
            private System.Data.DataColumn columnoccupationhis_change_reason;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupation_historyDataTable() {
                this.TableName = "staff_occupation_history";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_occupation_historyDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_occupation_historyDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_history_idColumn {
                get {
                    return this.columnoccupation_history_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupationhis_companyColumn {
                get {
                    return this.columnoccupationhis_company;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupationhis_postionColumn {
                get {
                    return this.columnoccupationhis_postion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupationhis_startdateColumn {
                get {
                    return this.columnoccupationhis_startdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupationhis_enddateColumn {
                get {
                    return this.columnoccupationhis_enddate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupationhis_salaryColumn {
                get {
                    return this.columnoccupationhis_salary;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupationhis_change_reasonColumn {
                get {
                    return this.columnoccupationhis_change_reason;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupation_historyRow this[int index] {
                get {
                    return ((staff_occupation_historyRow)(this.Rows[index]));
                }
            }
            
            public event staff_occupation_historyRowChangeEventHandler staff_occupation_historyRowChanging;
            
            public event staff_occupation_historyRowChangeEventHandler staff_occupation_historyRowChanged;
            
            public event staff_occupation_historyRowChangeEventHandler staff_occupation_historyRowDeleting;
            
            public event staff_occupation_historyRowChangeEventHandler staff_occupation_historyRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_occupation_historyRow(staff_occupation_historyRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupation_historyRow Addstaff_occupation_historyRow(int occupation_history_id, staff_indexRow parentstaff_indexRowByFK_staff_occupation_history_staff_index, string occupationhis_company, string occupationhis_postion, System.DateTime occupationhis_startdate, System.DateTime occupationhis_enddate, int occupationhis_salary, string occupationhis_change_reason) {
                staff_occupation_historyRow rowstaff_occupation_historyRow = ((staff_occupation_historyRow)(this.NewRow()));
                rowstaff_occupation_historyRow.ItemArray = new object[] {
                        occupation_history_id,
                        parentstaff_indexRowByFK_staff_occupation_history_staff_index[0],
                        occupationhis_company,
                        occupationhis_postion,
                        occupationhis_startdate,
                        occupationhis_enddate,
                        occupationhis_salary,
                        occupationhis_change_reason};
                this.Rows.Add(rowstaff_occupation_historyRow);
                return rowstaff_occupation_historyRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupation_historyRow FindByoccupation_history_id(int occupation_history_id) {
                return ((staff_occupation_historyRow)(this.Rows.Find(new object[] {
                            occupation_history_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_occupation_historyDataTable cln = ((staff_occupation_historyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_occupation_historyDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnoccupation_history_id = base.Columns["occupation_history_id"];
                this.columnuname = base.Columns["uname"];
                this.columnoccupationhis_company = base.Columns["occupationhis_company"];
                this.columnoccupationhis_postion = base.Columns["occupationhis_postion"];
                this.columnoccupationhis_startdate = base.Columns["occupationhis_startdate"];
                this.columnoccupationhis_enddate = base.Columns["occupationhis_enddate"];
                this.columnoccupationhis_salary = base.Columns["occupationhis_salary"];
                this.columnoccupationhis_change_reason = base.Columns["occupationhis_change_reason"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnoccupation_history_id = new System.Data.DataColumn("occupation_history_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_history_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnoccupationhis_company = new System.Data.DataColumn("occupationhis_company", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupationhis_company);
                this.columnoccupationhis_postion = new System.Data.DataColumn("occupationhis_postion", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupationhis_postion);
                this.columnoccupationhis_startdate = new System.Data.DataColumn("occupationhis_startdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupationhis_startdate);
                this.columnoccupationhis_enddate = new System.Data.DataColumn("occupationhis_enddate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupationhis_enddate);
                this.columnoccupationhis_salary = new System.Data.DataColumn("occupationhis_salary", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupationhis_salary);
                this.columnoccupationhis_change_reason = new System.Data.DataColumn("occupationhis_change_reason", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupationhis_change_reason);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnoccupation_history_id}, true));
                this.columnoccupation_history_id.AllowDBNull = false;
                this.columnoccupation_history_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnoccupationhis_company.MaxLength = 100;
                this.columnoccupationhis_postion.MaxLength = 100;
                this.columnoccupationhis_change_reason.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupation_historyRow Newstaff_occupation_historyRow() {
                return ((staff_occupation_historyRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_occupation_historyRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_occupation_historyRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_occupation_historyRowChanged != null)) {
                    this.staff_occupation_historyRowChanged(this, new staff_occupation_historyRowChangeEvent(((staff_occupation_historyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_occupation_historyRowChanging != null)) {
                    this.staff_occupation_historyRowChanging(this, new staff_occupation_historyRowChangeEvent(((staff_occupation_historyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_occupation_historyRowDeleted != null)) {
                    this.staff_occupation_historyRowDeleted(this, new staff_occupation_historyRowChangeEvent(((staff_occupation_historyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_occupation_historyRowDeleting != null)) {
                    this.staff_occupation_historyRowDeleting(this, new staff_occupation_historyRowChangeEvent(((staff_occupation_historyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_occupation_historyRow(staff_occupation_historyRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_occupation_historyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_status_controlDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnisactive;
            
            private System.Data.DataColumn columninfo_update_approve;
            
            private System.Data.DataColumn columnfamily_update_approve;
            
            private System.Data.DataColumn columnoccupation_update_approve;
            
            private System.Data.DataColumn columneducation_update_approve;
            
            private System.Data.DataColumn columnsuccess_update_approve;
            
            private System.Data.DataColumn columntraining_update_approve;
            
            private System.Data.DataColumn columnactivity_update_approve;
            
            private System.Data.DataColumn columnnonworking_update_approve;
            
            private System.Data.DataColumn columnhealhistory_update_approve;
            
            private System.Data.DataColumn columnailment_update_approve;
            
            private System.Data.DataColumn columnauthority;
            
            private System.Data.DataColumn columncst_group_id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_status_controlDataTable() {
                this.TableName = "staff_status_control";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_status_controlDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_status_controlDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn isactiveColumn {
                get {
                    return this.columnisactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn info_update_approveColumn {
                get {
                    return this.columninfo_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn family_update_approveColumn {
                get {
                    return this.columnfamily_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn occupation_update_approveColumn {
                get {
                    return this.columnoccupation_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn education_update_approveColumn {
                get {
                    return this.columneducation_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn success_update_approveColumn {
                get {
                    return this.columnsuccess_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn training_update_approveColumn {
                get {
                    return this.columntraining_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn activity_update_approveColumn {
                get {
                    return this.columnactivity_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nonworking_update_approveColumn {
                get {
                    return this.columnnonworking_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn healhistory_update_approveColumn {
                get {
                    return this.columnhealhistory_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ailment_update_approveColumn {
                get {
                    return this.columnailment_update_approve;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn authorityColumn {
                get {
                    return this.columnauthority;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn cst_group_idColumn {
                get {
                    return this.columncst_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_status_controlRow this[int index] {
                get {
                    return ((staff_status_controlRow)(this.Rows[index]));
                }
            }
            
            public event staff_status_controlRowChangeEventHandler staff_status_controlRowChanging;
            
            public event staff_status_controlRowChangeEventHandler staff_status_controlRowChanged;
            
            public event staff_status_controlRowChangeEventHandler staff_status_controlRowDeleting;
            
            public event staff_status_controlRowChangeEventHandler staff_status_controlRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_status_controlRow(staff_status_controlRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_status_controlRow Addstaff_status_controlRow(staff_indexRow parentstaff_indexRowByFK_staff_status_control_staff_index, bool isactive, bool info_update_approve, bool family_update_approve, bool occupation_update_approve, bool education_update_approve, bool success_update_approve, bool training_update_approve, bool activity_update_approve, bool nonworking_update_approve, bool healhistory_update_approve, bool ailment_update_approve, string authority, int cst_group_id) {
                staff_status_controlRow rowstaff_status_controlRow = ((staff_status_controlRow)(this.NewRow()));
                rowstaff_status_controlRow.ItemArray = new object[] {
                        parentstaff_indexRowByFK_staff_status_control_staff_index[0],
                        isactive,
                        info_update_approve,
                        family_update_approve,
                        occupation_update_approve,
                        education_update_approve,
                        success_update_approve,
                        training_update_approve,
                        activity_update_approve,
                        nonworking_update_approve,
                        healhistory_update_approve,
                        ailment_update_approve,
                        authority,
                        cst_group_id};
                this.Rows.Add(rowstaff_status_controlRow);
                return rowstaff_status_controlRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_status_controlRow FindByuname(string uname) {
                return ((staff_status_controlRow)(this.Rows.Find(new object[] {
                            uname})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_status_controlDataTable cln = ((staff_status_controlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_status_controlDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuname = base.Columns["uname"];
                this.columnisactive = base.Columns["isactive"];
                this.columninfo_update_approve = base.Columns["info_update_approve"];
                this.columnfamily_update_approve = base.Columns["family_update_approve"];
                this.columnoccupation_update_approve = base.Columns["occupation_update_approve"];
                this.columneducation_update_approve = base.Columns["education_update_approve"];
                this.columnsuccess_update_approve = base.Columns["success_update_approve"];
                this.columntraining_update_approve = base.Columns["training_update_approve"];
                this.columnactivity_update_approve = base.Columns["activity_update_approve"];
                this.columnnonworking_update_approve = base.Columns["nonworking_update_approve"];
                this.columnhealhistory_update_approve = base.Columns["healhistory_update_approve"];
                this.columnailment_update_approve = base.Columns["ailment_update_approve"];
                this.columnauthority = base.Columns["authority"];
                this.columncst_group_id = base.Columns["cst_group_id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnisactive = new System.Data.DataColumn("isactive", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnisactive);
                this.columninfo_update_approve = new System.Data.DataColumn("info_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columninfo_update_approve);
                this.columnfamily_update_approve = new System.Data.DataColumn("family_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnfamily_update_approve);
                this.columnoccupation_update_approve = new System.Data.DataColumn("occupation_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoccupation_update_approve);
                this.columneducation_update_approve = new System.Data.DataColumn("education_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columneducation_update_approve);
                this.columnsuccess_update_approve = new System.Data.DataColumn("success_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuccess_update_approve);
                this.columntraining_update_approve = new System.Data.DataColumn("training_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntraining_update_approve);
                this.columnactivity_update_approve = new System.Data.DataColumn("activity_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnactivity_update_approve);
                this.columnnonworking_update_approve = new System.Data.DataColumn("nonworking_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnonworking_update_approve);
                this.columnhealhistory_update_approve = new System.Data.DataColumn("healhistory_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnhealhistory_update_approve);
                this.columnailment_update_approve = new System.Data.DataColumn("ailment_update_approve", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnailment_update_approve);
                this.columnauthority = new System.Data.DataColumn("authority", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnauthority);
                this.columncst_group_id = new System.Data.DataColumn("cst_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncst_group_id);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnuname}, true));
                this.columnuname.AllowDBNull = false;
                this.columnuname.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnauthority.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_status_controlRow Newstaff_status_controlRow() {
                return ((staff_status_controlRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_status_controlRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_status_controlRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_status_controlRowChanged != null)) {
                    this.staff_status_controlRowChanged(this, new staff_status_controlRowChangeEvent(((staff_status_controlRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_status_controlRowChanging != null)) {
                    this.staff_status_controlRowChanging(this, new staff_status_controlRowChangeEvent(((staff_status_controlRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_status_controlRowDeleted != null)) {
                    this.staff_status_controlRowDeleted(this, new staff_status_controlRowChangeEvent(((staff_status_controlRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_status_controlRowDeleting != null)) {
                    this.staff_status_controlRowDeleting(this, new staff_status_controlRowChangeEvent(((staff_status_controlRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_status_controlRow(staff_status_controlRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_status_controlDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_successDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_success_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnsuccess_date;
            
            private System.Data.DataColumn columnsuccess_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_successDataTable() {
                this.TableName = "staff_success";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_successDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_successDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_success_idColumn {
                get {
                    return this.columnstaff_success_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn success_dateColumn {
                get {
                    return this.columnsuccess_date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn success_detailColumn {
                get {
                    return this.columnsuccess_detail;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_successRow this[int index] {
                get {
                    return ((staff_successRow)(this.Rows[index]));
                }
            }
            
            public event staff_successRowChangeEventHandler staff_successRowChanging;
            
            public event staff_successRowChangeEventHandler staff_successRowChanged;
            
            public event staff_successRowChangeEventHandler staff_successRowDeleting;
            
            public event staff_successRowChangeEventHandler staff_successRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_successRow(staff_successRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_successRow Addstaff_successRow(int staff_success_id, staff_indexRow parentstaff_indexRowByFK_staff_success_staff_index, string success_date, string success_detail) {
                staff_successRow rowstaff_successRow = ((staff_successRow)(this.NewRow()));
                rowstaff_successRow.ItemArray = new object[] {
                        staff_success_id,
                        parentstaff_indexRowByFK_staff_success_staff_index[0],
                        success_date,
                        success_detail};
                this.Rows.Add(rowstaff_successRow);
                return rowstaff_successRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_successRow FindBystaff_success_id(int staff_success_id) {
                return ((staff_successRow)(this.Rows.Find(new object[] {
                            staff_success_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_successDataTable cln = ((staff_successDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_successDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_success_id = base.Columns["staff_success_id"];
                this.columnuname = base.Columns["uname"];
                this.columnsuccess_date = base.Columns["success_date"];
                this.columnsuccess_detail = base.Columns["success_detail"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_success_id = new System.Data.DataColumn("staff_success_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_success_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnsuccess_date = new System.Data.DataColumn("success_date", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuccess_date);
                this.columnsuccess_detail = new System.Data.DataColumn("success_detail", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuccess_detail);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_success_id}, true));
                this.columnstaff_success_id.AllowDBNull = false;
                this.columnstaff_success_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columnsuccess_date.MaxLength = 50;
                this.columnsuccess_detail.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_successRow Newstaff_successRow() {
                return ((staff_successRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_successRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_successRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_successRowChanged != null)) {
                    this.staff_successRowChanged(this, new staff_successRowChangeEvent(((staff_successRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_successRowChanging != null)) {
                    this.staff_successRowChanging(this, new staff_successRowChangeEvent(((staff_successRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_successRowDeleted != null)) {
                    this.staff_successRowDeleted(this, new staff_successRowChangeEvent(((staff_successRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_successRowDeleting != null)) {
                    this.staff_successRowDeleting(this, new staff_successRowChangeEvent(((staff_successRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_successRow(staff_successRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_successDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class staff_trainingDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_training_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columntraining_code;
            
            private System.Data.DataColumn columntraining_course;
            
            private System.Data.DataColumn columntraining_startdate;
            
            private System.Data.DataColumn columntraining_enddate;
            
            private System.Data.DataColumn columntraining_expertname;
            
            private System.Data.DataColumn columntraining_institute;
            
            private System.Data.DataColumn columntraining_result;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_trainingDataTable() {
                this.TableName = "staff_training";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_trainingDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected staff_trainingDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_training_idColumn {
                get {
                    return this.columnstaff_training_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn training_codeColumn {
                get {
                    return this.columntraining_code;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn training_courseColumn {
                get {
                    return this.columntraining_course;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn training_startdateColumn {
                get {
                    return this.columntraining_startdate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn training_enddateColumn {
                get {
                    return this.columntraining_enddate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn training_expertnameColumn {
                get {
                    return this.columntraining_expertname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn training_instituteColumn {
                get {
                    return this.columntraining_institute;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn training_resultColumn {
                get {
                    return this.columntraining_result;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_trainingRow this[int index] {
                get {
                    return ((staff_trainingRow)(this.Rows[index]));
                }
            }
            
            public event staff_trainingRowChangeEventHandler staff_trainingRowChanging;
            
            public event staff_trainingRowChangeEventHandler staff_trainingRowChanged;
            
            public event staff_trainingRowChangeEventHandler staff_trainingRowDeleting;
            
            public event staff_trainingRowChangeEventHandler staff_trainingRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addstaff_trainingRow(staff_trainingRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_trainingRow Addstaff_trainingRow(int staff_training_id, staff_indexRow parentstaff_indexRowByFK_staff_training_staff_index, string training_code, string training_course, string training_startdate, string training_enddate, string training_expertname, string training_institute, string training_result) {
                staff_trainingRow rowstaff_trainingRow = ((staff_trainingRow)(this.NewRow()));
                rowstaff_trainingRow.ItemArray = new object[] {
                        staff_training_id,
                        parentstaff_indexRowByFK_staff_training_staff_index[0],
                        training_code,
                        training_course,
                        training_startdate,
                        training_enddate,
                        training_expertname,
                        training_institute,
                        training_result};
                this.Rows.Add(rowstaff_trainingRow);
                return rowstaff_trainingRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_trainingRow FindBystaff_training_id(int staff_training_id) {
                return ((staff_trainingRow)(this.Rows.Find(new object[] {
                            staff_training_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                staff_trainingDataTable cln = ((staff_trainingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new staff_trainingDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_training_id = base.Columns["staff_training_id"];
                this.columnuname = base.Columns["uname"];
                this.columntraining_code = base.Columns["training_code"];
                this.columntraining_course = base.Columns["training_course"];
                this.columntraining_startdate = base.Columns["training_startdate"];
                this.columntraining_enddate = base.Columns["training_enddate"];
                this.columntraining_expertname = base.Columns["training_expertname"];
                this.columntraining_institute = base.Columns["training_institute"];
                this.columntraining_result = base.Columns["training_result"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_training_id = new System.Data.DataColumn("staff_training_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_training_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columntraining_code = new System.Data.DataColumn("training_code", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntraining_code);
                this.columntraining_course = new System.Data.DataColumn("training_course", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntraining_course);
                this.columntraining_startdate = new System.Data.DataColumn("training_startdate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntraining_startdate);
                this.columntraining_enddate = new System.Data.DataColumn("training_enddate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntraining_enddate);
                this.columntraining_expertname = new System.Data.DataColumn("training_expertname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntraining_expertname);
                this.columntraining_institute = new System.Data.DataColumn("training_institute", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntraining_institute);
                this.columntraining_result = new System.Data.DataColumn("training_result", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntraining_result);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_training_id}, true));
                this.columnstaff_training_id.AllowDBNull = false;
                this.columnstaff_training_id.Unique = true;
                this.columnuname.MaxLength = 100;
                this.columntraining_code.MaxLength = 500;
                this.columntraining_course.MaxLength = 2147483647;
                this.columntraining_startdate.MaxLength = 500;
                this.columntraining_enddate.MaxLength = 500;
                this.columntraining_expertname.MaxLength = 500;
                this.columntraining_institute.MaxLength = 700;
                this.columntraining_result.MaxLength = 2147483647;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_trainingRow Newstaff_trainingRow() {
                return ((staff_trainingRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new staff_trainingRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(staff_trainingRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.staff_trainingRowChanged != null)) {
                    this.staff_trainingRowChanged(this, new staff_trainingRowChangeEvent(((staff_trainingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.staff_trainingRowChanging != null)) {
                    this.staff_trainingRowChanging(this, new staff_trainingRowChangeEvent(((staff_trainingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.staff_trainingRowDeleted != null)) {
                    this.staff_trainingRowDeleted(this, new staff_trainingRowChangeEvent(((staff_trainingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.staff_trainingRowDeleting != null)) {
                    this.staff_trainingRowDeleting(this, new staff_trainingRowChangeEvent(((staff_trainingRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removestaff_trainingRow(staff_trainingRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "staff_trainingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sys_companyDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columncompany_id;
            
            private System.Data.DataColumn columncompany_name;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_companyDataTable() {
                this.TableName = "sys_company";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sys_companyDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sys_companyDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn company_idColumn {
                get {
                    return this.columncompany_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn company_nameColumn {
                get {
                    return this.columncompany_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_companyRow this[int index] {
                get {
                    return ((sys_companyRow)(this.Rows[index]));
                }
            }
            
            public event sys_companyRowChangeEventHandler sys_companyRowChanging;
            
            public event sys_companyRowChangeEventHandler sys_companyRowChanged;
            
            public event sys_companyRowChangeEventHandler sys_companyRowDeleting;
            
            public event sys_companyRowChangeEventHandler sys_companyRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsys_companyRow(sys_companyRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_companyRow Addsys_companyRow(string company_id, string company_name) {
                sys_companyRow rowsys_companyRow = ((sys_companyRow)(this.NewRow()));
                rowsys_companyRow.ItemArray = new object[] {
                        company_id,
                        company_name};
                this.Rows.Add(rowsys_companyRow);
                return rowsys_companyRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_companyRow FindBycompany_id(string company_id) {
                return ((sys_companyRow)(this.Rows.Find(new object[] {
                            company_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                sys_companyDataTable cln = ((sys_companyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new sys_companyDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncompany_id = base.Columns["company_id"];
                this.columncompany_name = base.Columns["company_name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncompany_id = new System.Data.DataColumn("company_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_id);
                this.columncompany_name = new System.Data.DataColumn("company_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_name);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columncompany_id}, true));
                this.columncompany_id.AllowDBNull = false;
                this.columncompany_id.Unique = true;
                this.columncompany_id.MaxLength = 20;
                this.columncompany_name.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_companyRow Newsys_companyRow() {
                return ((sys_companyRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new sys_companyRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(sys_companyRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sys_companyRowChanged != null)) {
                    this.sys_companyRowChanged(this, new sys_companyRowChangeEvent(((sys_companyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sys_companyRowChanging != null)) {
                    this.sys_companyRowChanging(this, new sys_companyRowChangeEvent(((sys_companyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sys_companyRowDeleted != null)) {
                    this.sys_companyRowDeleted(this, new sys_companyRowChangeEvent(((sys_companyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sys_companyRowDeleting != null)) {
                    this.sys_companyRowDeleting(this, new sys_companyRowChangeEvent(((sys_companyRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesys_companyRow(sys_companyRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sys_companyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sys_departmentDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columndepartment_id;
            
            private System.Data.DataColumn columndepartment_name;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_departmentDataTable() {
                this.TableName = "sys_department";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sys_departmentDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sys_departmentDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn department_idColumn {
                get {
                    return this.columndepartment_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn department_nameColumn {
                get {
                    return this.columndepartment_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_departmentRow this[int index] {
                get {
                    return ((sys_departmentRow)(this.Rows[index]));
                }
            }
            
            public event sys_departmentRowChangeEventHandler sys_departmentRowChanging;
            
            public event sys_departmentRowChangeEventHandler sys_departmentRowChanged;
            
            public event sys_departmentRowChangeEventHandler sys_departmentRowDeleting;
            
            public event sys_departmentRowChangeEventHandler sys_departmentRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsys_departmentRow(sys_departmentRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_departmentRow Addsys_departmentRow(int department_id, string department_name) {
                sys_departmentRow rowsys_departmentRow = ((sys_departmentRow)(this.NewRow()));
                rowsys_departmentRow.ItemArray = new object[] {
                        department_id,
                        department_name};
                this.Rows.Add(rowsys_departmentRow);
                return rowsys_departmentRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_departmentRow FindBydepartment_id(int department_id) {
                return ((sys_departmentRow)(this.Rows.Find(new object[] {
                            department_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                sys_departmentDataTable cln = ((sys_departmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new sys_departmentDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndepartment_id = base.Columns["department_id"];
                this.columndepartment_name = base.Columns["department_name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndepartment_id = new System.Data.DataColumn("department_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_id);
                this.columndepartment_name = new System.Data.DataColumn("department_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_name);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columndepartment_id}, true));
                this.columndepartment_id.AllowDBNull = false;
                this.columndepartment_id.Unique = true;
                this.columndepartment_name.MaxLength = 255;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_departmentRow Newsys_departmentRow() {
                return ((sys_departmentRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new sys_departmentRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(sys_departmentRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sys_departmentRowChanged != null)) {
                    this.sys_departmentRowChanged(this, new sys_departmentRowChangeEvent(((sys_departmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sys_departmentRowChanging != null)) {
                    this.sys_departmentRowChanging(this, new sys_departmentRowChangeEvent(((sys_departmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sys_departmentRowDeleted != null)) {
                    this.sys_departmentRowDeleted(this, new sys_departmentRowChangeEvent(((sys_departmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sys_departmentRowDeleting != null)) {
                    this.sys_departmentRowDeleting(this, new sys_departmentRowChangeEvent(((sys_departmentRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesys_departmentRow(sys_departmentRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sys_departmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sys_menuauthorityDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnsys_menuauthority_id;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnmenuauthority_group_id;
            
            private System.Data.DataColumn columnmenuauthority_id;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_menuauthorityDataTable() {
                this.TableName = "sys_menuauthority";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sys_menuauthorityDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sys_menuauthorityDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sys_menuauthority_idColumn {
                get {
                    return this.columnsys_menuauthority_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_group_idColumn {
                get {
                    return this.columnmenuauthority_group_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn menuauthority_idColumn {
                get {
                    return this.columnmenuauthority_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_menuauthorityRow this[int index] {
                get {
                    return ((sys_menuauthorityRow)(this.Rows[index]));
                }
            }
            
            public event sys_menuauthorityRowChangeEventHandler sys_menuauthorityRowChanging;
            
            public event sys_menuauthorityRowChangeEventHandler sys_menuauthorityRowChanged;
            
            public event sys_menuauthorityRowChangeEventHandler sys_menuauthorityRowDeleting;
            
            public event sys_menuauthorityRowChangeEventHandler sys_menuauthorityRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsys_menuauthorityRow(sys_menuauthorityRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_menuauthorityRow Addsys_menuauthorityRow(string uname, int menuauthority_group_id, int menuauthority_id) {
                sys_menuauthorityRow rowsys_menuauthorityRow = ((sys_menuauthorityRow)(this.NewRow()));
                rowsys_menuauthorityRow.ItemArray = new object[] {
                        null,
                        uname,
                        menuauthority_group_id,
                        menuauthority_id};
                this.Rows.Add(rowsys_menuauthorityRow);
                return rowsys_menuauthorityRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_menuauthorityRow FindBysys_menuauthority_id(int sys_menuauthority_id) {
                return ((sys_menuauthorityRow)(this.Rows.Find(new object[] {
                            sys_menuauthority_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                sys_menuauthorityDataTable cln = ((sys_menuauthorityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new sys_menuauthorityDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsys_menuauthority_id = base.Columns["sys_menuauthority_id"];
                this.columnuname = base.Columns["uname"];
                this.columnmenuauthority_group_id = base.Columns["menuauthority_group_id"];
                this.columnmenuauthority_id = base.Columns["menuauthority_id"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsys_menuauthority_id = new System.Data.DataColumn("sys_menuauthority_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_menuauthority_id);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnmenuauthority_group_id = new System.Data.DataColumn("menuauthority_group_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_group_id);
                this.columnmenuauthority_id = new System.Data.DataColumn("menuauthority_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmenuauthority_id);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnsys_menuauthority_id}, true));
                this.columnsys_menuauthority_id.AutoIncrement = true;
                this.columnsys_menuauthority_id.AllowDBNull = false;
                this.columnsys_menuauthority_id.ReadOnly = true;
                this.columnsys_menuauthority_id.Unique = true;
                this.columnuname.MaxLength = 100;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_menuauthorityRow Newsys_menuauthorityRow() {
                return ((sys_menuauthorityRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new sys_menuauthorityRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(sys_menuauthorityRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sys_menuauthorityRowChanged != null)) {
                    this.sys_menuauthorityRowChanged(this, new sys_menuauthorityRowChangeEvent(((sys_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sys_menuauthorityRowChanging != null)) {
                    this.sys_menuauthorityRowChanging(this, new sys_menuauthorityRowChangeEvent(((sys_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sys_menuauthorityRowDeleted != null)) {
                    this.sys_menuauthorityRowDeleted(this, new sys_menuauthorityRowChangeEvent(((sys_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sys_menuauthorityRowDeleting != null)) {
                    this.sys_menuauthorityRowDeleting(this, new sys_menuauthorityRowChangeEvent(((sys_menuauthorityRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesys_menuauthorityRow(sys_menuauthorityRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sys_menuauthorityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sys_positionDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnstaff_position;
            
            private System.Data.DataColumn columnstaff_position_name;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_positionDataTable() {
                this.TableName = "sys_position";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sys_positionDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sys_positionDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_positionColumn {
                get {
                    return this.columnstaff_position;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_position_nameColumn {
                get {
                    return this.columnstaff_position_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_positionRow this[int index] {
                get {
                    return ((sys_positionRow)(this.Rows[index]));
                }
            }
            
            public event sys_positionRowChangeEventHandler sys_positionRowChanging;
            
            public event sys_positionRowChangeEventHandler sys_positionRowChanged;
            
            public event sys_positionRowChangeEventHandler sys_positionRowDeleting;
            
            public event sys_positionRowChangeEventHandler sys_positionRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsys_positionRow(sys_positionRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_positionRow Addsys_positionRow(int staff_position, string staff_position_name) {
                sys_positionRow rowsys_positionRow = ((sys_positionRow)(this.NewRow()));
                rowsys_positionRow.ItemArray = new object[] {
                        staff_position,
                        staff_position_name};
                this.Rows.Add(rowsys_positionRow);
                return rowsys_positionRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_positionRow FindBystaff_position(int staff_position) {
                return ((sys_positionRow)(this.Rows.Find(new object[] {
                            staff_position})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                sys_positionDataTable cln = ((sys_positionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new sys_positionDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnstaff_position = base.Columns["staff_position"];
                this.columnstaff_position_name = base.Columns["staff_position_name"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnstaff_position = new System.Data.DataColumn("staff_position", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_position);
                this.columnstaff_position_name = new System.Data.DataColumn("staff_position_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_position_name);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnstaff_position}, true));
                this.columnstaff_position.AllowDBNull = false;
                this.columnstaff_position.Unique = true;
                this.columnstaff_position_name.MaxLength = 150;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_positionRow Newsys_positionRow() {
                return ((sys_positionRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new sys_positionRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(sys_positionRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sys_positionRowChanged != null)) {
                    this.sys_positionRowChanged(this, new sys_positionRowChangeEvent(((sys_positionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sys_positionRowChanging != null)) {
                    this.sys_positionRowChanging(this, new sys_positionRowChangeEvent(((sys_positionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sys_positionRowDeleted != null)) {
                    this.sys_positionRowDeleted(this, new sys_positionRowChangeEvent(((sys_positionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sys_positionRowDeleting != null)) {
                    this.sys_positionRowDeleting(this, new sys_positionRowChangeEvent(((sys_positionRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesys_positionRow(sys_positionRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sys_positionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class temp_uname11DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnstaff_nm;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname11DataTable() {
                this.TableName = "temp_uname11";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal temp_uname11DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected temp_uname11DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_nmColumn {
                get {
                    return this.columnstaff_nm;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname11Row this[int index] {
                get {
                    return ((temp_uname11Row)(this.Rows[index]));
                }
            }
            
            public event temp_uname11RowChangeEventHandler temp_uname11RowChanging;
            
            public event temp_uname11RowChangeEventHandler temp_uname11RowChanged;
            
            public event temp_uname11RowChangeEventHandler temp_uname11RowDeleting;
            
            public event temp_uname11RowChangeEventHandler temp_uname11RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtemp_uname11Row(temp_uname11Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname11Row Addtemp_uname11Row(string uname, string staff_nm) {
                temp_uname11Row rowtemp_uname11Row = ((temp_uname11Row)(this.NewRow()));
                rowtemp_uname11Row.ItemArray = new object[] {
                        null,
                        uname,
                        staff_nm};
                this.Rows.Add(rowtemp_uname11Row);
                return rowtemp_uname11Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname11Row FindByid(int id) {
                return ((temp_uname11Row)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                temp_uname11DataTable cln = ((temp_uname11DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new temp_uname11DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuname = base.Columns["uname"];
                this.columnstaff_nm = base.Columns["staff_nm"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnstaff_nm = new System.Data.DataColumn("staff_nm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_nm);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnuname.MaxLength = 50;
                this.columnstaff_nm.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname11Row Newtemp_uname11Row() {
                return ((temp_uname11Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new temp_uname11Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(temp_uname11Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.temp_uname11RowChanged != null)) {
                    this.temp_uname11RowChanged(this, new temp_uname11RowChangeEvent(((temp_uname11Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.temp_uname11RowChanging != null)) {
                    this.temp_uname11RowChanging(this, new temp_uname11RowChangeEvent(((temp_uname11Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.temp_uname11RowDeleted != null)) {
                    this.temp_uname11RowDeleted(this, new temp_uname11RowChangeEvent(((temp_uname11Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.temp_uname11RowDeleting != null)) {
                    this.temp_uname11RowDeleting(this, new temp_uname11RowChangeEvent(((temp_uname11Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetemp_uname11Row(temp_uname11Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "temp_uname11DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class temp_uname12DataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnid;
            
            private System.Data.DataColumn columnuname;
            
            private System.Data.DataColumn columnprefix;
            
            private System.Data.DataColumn columnstaff_nm;
            
            private System.Data.DataColumn columnstaff_sm;
            
            private System.Data.DataColumn columnstatus;
            
            private System.Data.DataColumn columncompany_id;
            
            private System.Data.DataColumn columndepartment_id;
            
            private System.Data.DataColumn columnstaff_position;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname12DataTable() {
                this.TableName = "temp_uname12";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal temp_uname12DataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected temp_uname12DataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameColumn {
                get {
                    return this.columnuname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn prefixColumn {
                get {
                    return this.columnprefix;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_nmColumn {
                get {
                    return this.columnstaff_nm;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_smColumn {
                get {
                    return this.columnstaff_sm;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn company_idColumn {
                get {
                    return this.columncompany_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn department_idColumn {
                get {
                    return this.columndepartment_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn staff_positionColumn {
                get {
                    return this.columnstaff_position;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname12Row this[int index] {
                get {
                    return ((temp_uname12Row)(this.Rows[index]));
                }
            }
            
            public event temp_uname12RowChangeEventHandler temp_uname12RowChanging;
            
            public event temp_uname12RowChangeEventHandler temp_uname12RowChanged;
            
            public event temp_uname12RowChangeEventHandler temp_uname12RowDeleting;
            
            public event temp_uname12RowChangeEventHandler temp_uname12RowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtemp_uname12Row(temp_uname12Row row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname12Row Addtemp_uname12Row(string uname, string prefix, string staff_nm, string staff_sm, bool status, string company_id, string department_id, string staff_position) {
                temp_uname12Row rowtemp_uname12Row = ((temp_uname12Row)(this.NewRow()));
                rowtemp_uname12Row.ItemArray = new object[] {
                        null,
                        uname,
                        prefix,
                        staff_nm,
                        staff_sm,
                        status,
                        company_id,
                        department_id,
                        staff_position};
                this.Rows.Add(rowtemp_uname12Row);
                return rowtemp_uname12Row;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname12Row FindByid(int id) {
                return ((temp_uname12Row)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                temp_uname12DataTable cln = ((temp_uname12DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new temp_uname12DataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuname = base.Columns["uname"];
                this.columnprefix = base.Columns["prefix"];
                this.columnstaff_nm = base.Columns["staff_nm"];
                this.columnstaff_sm = base.Columns["staff_sm"];
                this.columnstatus = base.Columns["status"];
                this.columncompany_id = base.Columns["company_id"];
                this.columndepartment_id = base.Columns["department_id"];
                this.columnstaff_position = base.Columns["staff_position"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new System.Data.DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuname = new System.Data.DataColumn("uname", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuname);
                this.columnprefix = new System.Data.DataColumn("prefix", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnprefix);
                this.columnstaff_nm = new System.Data.DataColumn("staff_nm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_nm);
                this.columnstaff_sm = new System.Data.DataColumn("staff_sm", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_sm);
                this.columnstatus = new System.Data.DataColumn("status", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncompany_id = new System.Data.DataColumn("company_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_id);
                this.columndepartment_id = new System.Data.DataColumn("department_id", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_id);
                this.columnstaff_position = new System.Data.DataColumn("staff_position", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaff_position);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnuname.MaxLength = 50;
                this.columnprefix.MaxLength = 50;
                this.columnstaff_nm.MaxLength = 50;
                this.columnstaff_sm.MaxLength = 50;
                this.columncompany_id.MaxLength = 50;
                this.columndepartment_id.MaxLength = 50;
                this.columnstaff_position.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname12Row Newtemp_uname12Row() {
                return ((temp_uname12Row)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new temp_uname12Row(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(temp_uname12Row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.temp_uname12RowChanged != null)) {
                    this.temp_uname12RowChanged(this, new temp_uname12RowChangeEvent(((temp_uname12Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.temp_uname12RowChanging != null)) {
                    this.temp_uname12RowChanging(this, new temp_uname12RowChangeEvent(((temp_uname12Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.temp_uname12RowDeleted != null)) {
                    this.temp_uname12RowDeleted(this, new temp_uname12RowChangeEvent(((temp_uname12Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.temp_uname12RowDeleting != null)) {
                    this.temp_uname12RowDeleting(this, new temp_uname12RowChangeEvent(((temp_uname12Row)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetemp_uname12Row(temp_uname12Row row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "temp_uname12DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tempTSHDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnunameold;
            
            private System.Data.DataColumn columnunamenew;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tempTSHDataTable() {
                this.TableName = "tempTSH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tempTSHDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tempTSHDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unameoldColumn {
                get {
                    return this.columnunameold;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn unamenewColumn {
                get {
                    return this.columnunamenew;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tempTSHRow this[int index] {
                get {
                    return ((tempTSHRow)(this.Rows[index]));
                }
            }
            
            public event tempTSHRowChangeEventHandler tempTSHRowChanging;
            
            public event tempTSHRowChangeEventHandler tempTSHRowChanged;
            
            public event tempTSHRowChangeEventHandler tempTSHRowDeleting;
            
            public event tempTSHRowChangeEventHandler tempTSHRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtempTSHRow(tempTSHRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tempTSHRow AddtempTSHRow(string unameold, string unamenew) {
                tempTSHRow rowtempTSHRow = ((tempTSHRow)(this.NewRow()));
                rowtempTSHRow.ItemArray = new object[] {
                        unameold,
                        unamenew};
                this.Rows.Add(rowtempTSHRow);
                return rowtempTSHRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                tempTSHDataTable cln = ((tempTSHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new tempTSHDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnunameold = base.Columns["unameold"];
                this.columnunamenew = base.Columns["unamenew"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnunameold = new System.Data.DataColumn("unameold", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnunameold);
                this.columnunamenew = new System.Data.DataColumn("unamenew", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnunamenew);
                this.columnunameold.MaxLength = 50;
                this.columnunamenew.MaxLength = 50;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tempTSHRow NewtempTSHRow() {
                return ((tempTSHRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new tempTSHRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(tempTSHRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tempTSHRowChanged != null)) {
                    this.tempTSHRowChanged(this, new tempTSHRowChangeEvent(((tempTSHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tempTSHRowChanging != null)) {
                    this.tempTSHRowChanging(this, new tempTSHRowChangeEvent(((tempTSHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tempTSHRowDeleted != null)) {
                    this.tempTSHRowDeleted(this, new tempTSHRowChangeEvent(((tempTSHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tempTSHRowDeleting != null)) {
                    this.tempTSHRowDeleting(this, new tempTSHRowChangeEvent(((tempTSHRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetempTSHRow(tempTSHRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                netconceptDataSet ds = new netconceptDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tempTSHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_company_avgRow : System.Data.DataRow {
            
            private _36049_company_avgDataTable table36049_company_avg;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_company_avgRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_company_avg = ((_36049_company_avgDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.table36049_company_avg.idColumn]));
                }
                set {
                    this[this.table36049_company_avg.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_id {
                get {
                    try {
                        return ((string)(this[this.table36049_company_avg.company_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'company_id\' in table \'36049_company_avg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_company_avg.company_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string big_issue {
                get {
                    try {
                        return ((string)(this[this.table36049_company_avg.big_issueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'big_issue\' in table \'36049_company_avg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_company_avg.big_issueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string small_issue {
                get {
                    try {
                        return ((string)(this[this.table36049_company_avg.small_issueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'small_issue\' in table \'36049_company_avg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_company_avg.small_issueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_avg {
                get {
                    try {
                        return ((string)(this[this.table36049_company_avg.company_avgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'company_avg\' in table \'36049_company_avg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_company_avg.company_avgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_idNull() {
                return this.IsNull(this.table36049_company_avg.company_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_idNull() {
                this[this.table36049_company_avg.company_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbig_issueNull() {
                return this.IsNull(this.table36049_company_avg.big_issueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbig_issueNull() {
                this[this.table36049_company_avg.big_issueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issmall_issueNull() {
                return this.IsNull(this.table36049_company_avg.small_issueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsmall_issueNull() {
                this[this.table36049_company_avg.small_issueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_avgNull() {
                return this.IsNull(this.table36049_company_avg.company_avgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_avgNull() {
                this[this.table36049_company_avg.company_avgColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_evaluationRow : System.Data.DataRow {
            
            private _36049_evaluationDataTable table36049_evaluation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_evaluationRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_evaluation = ((_36049_evaluationDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_id {
                get {
                    return ((int)(this[this.table36049_evaluation.evaluation_idColumn]));
                }
                set {
                    this[this.table36049_evaluation.evaluation_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_no {
                get {
                    try {
                        return ((int)(this[this.table36049_evaluation.evaluation_noColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_no\' in table \'36049_evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation.evaluation_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname_eva {
                get {
                    try {
                        return ((string)(this[this.table36049_evaluation.uname_evaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname_eva\' in table \'36049_evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation.uname_evaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.table36049_evaluation.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'36049_evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_eva_relation {
                get {
                    try {
                        return ((string)(this[this.table36049_evaluation.staff_eva_relationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_eva_relation\' in table \'36049_evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation.staff_eva_relationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal staff_id_totalscore {
                get {
                    try {
                        return ((decimal)(this[this.table36049_evaluation.staff_id_totalscoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_id_totalscore\' in table \'36049_evaluation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.table36049_evaluation.staff_id_totalscoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime savedate {
                get {
                    try {
                        return ((System.DateTime)(this[this.table36049_evaluation.savedateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'savedate\' in table \'36049_evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation.savedateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime submitdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.table36049_evaluation.submitdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'submitdate\' in table \'36049_evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation.submitdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool submit_status {
                get {
                    try {
                        return ((bool)(this[this.table36049_evaluation.submit_statusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'submit_status\' in table \'36049_evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation.submit_statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_noNull() {
                return this.IsNull(this.table36049_evaluation.evaluation_noColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_noNull() {
                this[this.table36049_evaluation.evaluation_noColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuname_evaNull() {
                return this.IsNull(this.table36049_evaluation.uname_evaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuname_evaNull() {
                this[this.table36049_evaluation.uname_evaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.table36049_evaluation.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.table36049_evaluation.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_eva_relationNull() {
                return this.IsNull(this.table36049_evaluation.staff_eva_relationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_eva_relationNull() {
                this[this.table36049_evaluation.staff_eva_relationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_id_totalscoreNull() {
                return this.IsNull(this.table36049_evaluation.staff_id_totalscoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_id_totalscoreNull() {
                this[this.table36049_evaluation.staff_id_totalscoreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssavedateNull() {
                return this.IsNull(this.table36049_evaluation.savedateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsavedateNull() {
                this[this.table36049_evaluation.savedateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubmitdateNull() {
                return this.IsNull(this.table36049_evaluation.submitdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubmitdateNull() {
                this[this.table36049_evaluation.submitdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issubmit_statusNull() {
                return this.IsNull(this.table36049_evaluation.submit_statusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsubmit_statusNull() {
                this[this.table36049_evaluation.submit_statusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_evaluation_detailRow : System.Data.DataRow {
            
            private _36049_evaluation_detailDataTable table36049_evaluation_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_evaluation_detailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_evaluation_detail = ((_36049_evaluation_detailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_detail_id {
                get {
                    return ((int)(this[this.table36049_evaluation_detail.evaluation_detail_idColumn]));
                }
                set {
                    this[this.table36049_evaluation_detail.evaluation_detail_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_id {
                get {
                    try {
                        return ((int)(this[this.table36049_evaluation_detail.evaluation_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_id\' in table \'36049_evaluation_detail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.table36049_evaluation_detail.evaluation_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_subject_id {
                get {
                    try {
                        return ((int)(this[this.table36049_evaluation_detail.evaluation_subject_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_subject_id\' in table \'36049_evaluation_detail\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation_detail.evaluation_subject_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_sub_subject_id {
                get {
                    try {
                        return ((int)(this[this.table36049_evaluation_detail.evaluation_sub_subject_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_sub_subject_id\' in table \'36049_evaluation_detai" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation_detail.evaluation_sub_subject_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal evaluation_score {
                get {
                    try {
                        return ((decimal)(this[this.table36049_evaluation_detail.evaluation_scoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_score\' in table \'36049_evaluation_detail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.table36049_evaluation_detail.evaluation_scoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_idNull() {
                return this.IsNull(this.table36049_evaluation_detail.evaluation_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_idNull() {
                this[this.table36049_evaluation_detail.evaluation_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_subject_idNull() {
                return this.IsNull(this.table36049_evaluation_detail.evaluation_subject_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_subject_idNull() {
                this[this.table36049_evaluation_detail.evaluation_subject_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_sub_subject_idNull() {
                return this.IsNull(this.table36049_evaluation_detail.evaluation_sub_subject_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_sub_subject_idNull() {
                this[this.table36049_evaluation_detail.evaluation_sub_subject_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_scoreNull() {
                return this.IsNull(this.table36049_evaluation_detail.evaluation_scoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_scoreNull() {
                this[this.table36049_evaluation_detail.evaluation_scoreColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_generate_scoreRow : System.Data.DataRow {
            
            private _36049_generate_scoreDataTable table36049_generate_score;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_generate_scoreRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_generate_score = ((_36049_generate_scoreDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.table36049_generate_score.idColumn]));
                }
                set {
                    this[this.table36049_generate_score.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime gen_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.table36049_generate_score.gen_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'gen_date\' in table \'36049_generate_score\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_generate_score.gen_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gen_by {
                get {
                    try {
                        return ((string)(this[this.table36049_generate_score.gen_byColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'gen_by\' in table \'36049_generate_score\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_generate_score.gen_byColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gen_type {
                get {
                    try {
                        return ((string)(this[this.table36049_generate_score.gen_typeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'gen_type\' in table \'36049_generate_score\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_generate_score.gen_typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgen_dateNull() {
                return this.IsNull(this.table36049_generate_score.gen_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgen_dateNull() {
                this[this.table36049_generate_score.gen_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgen_byNull() {
                return this.IsNull(this.table36049_generate_score.gen_byColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgen_byNull() {
                this[this.table36049_generate_score.gen_byColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgen_typeNull() {
                return this.IsNull(this.table36049_generate_score.gen_typeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgen_typeNull() {
                this[this.table36049_generate_score.gen_typeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_group_avgRow : System.Data.DataRow {
            
            private _36049_group_avgDataTable table36049_group_avg;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_group_avgRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_group_avg = ((_36049_group_avgDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string big_issue {
                get {
                    return ((string)(this[this.table36049_group_avg.big_issueColumn]));
                }
                set {
                    this[this.table36049_group_avg.big_issueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string small_issue {
                get {
                    try {
                        return ((string)(this[this.table36049_group_avg.small_issueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'small_issue\' in table \'36049_group_avg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_group_avg.small_issueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string group_avg {
                get {
                    try {
                        return ((string)(this[this.table36049_group_avg.group_avgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'group_avg\' in table \'36049_group_avg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_group_avg.group_avgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issmall_issueNull() {
                return this.IsNull(this.table36049_group_avg.small_issueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsmall_issueNull() {
                this[this.table36049_group_avg.small_issueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgroup_avgNull() {
                return this.IsNull(this.table36049_group_avg.group_avgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgroup_avgNull() {
                this[this.table36049_group_avg.group_avgColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_menuauthorityRow : System.Data.DataRow {
            
            private _36049_menuauthorityDataTable table36049_menuauthority;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_menuauthorityRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_menuauthority = ((_36049_menuauthorityDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_id {
                get {
                    return ((string)(this[this.table36049_menuauthority.menuauthority_idColumn]));
                }
                set {
                    this[this.table36049_menuauthority.menuauthority_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_root {
                get {
                    try {
                        return ((string)(this[this.table36049_menuauthority.menuauthority_rootColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_root\' in table \'36049_menuauthority\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.table36049_menuauthority.menuauthority_rootColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_name {
                get {
                    try {
                        return ((string)(this[this.table36049_menuauthority.menuauthority_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_name\' in table \'36049_menuauthority\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.table36049_menuauthority.menuauthority_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_desc {
                get {
                    try {
                        return ((string)(this[this.table36049_menuauthority.menuauthority_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_desc\' in table \'36049_menuauthority\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.table36049_menuauthority.menuauthority_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string webpage {
                get {
                    try {
                        return ((string)(this[this.table36049_menuauthority.webpageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'webpage\' in table \'36049_menuauthority\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_menuauthority.webpageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_rootNull() {
                return this.IsNull(this.table36049_menuauthority.menuauthority_rootColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_rootNull() {
                this[this.table36049_menuauthority.menuauthority_rootColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_nameNull() {
                return this.IsNull(this.table36049_menuauthority.menuauthority_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_nameNull() {
                this[this.table36049_menuauthority.menuauthority_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_descNull() {
                return this.IsNull(this.table36049_menuauthority.menuauthority_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_descNull() {
                this[this.table36049_menuauthority.menuauthority_descColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswebpageNull() {
                return this.IsNull(this.table36049_menuauthority.webpageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwebpageNull() {
                this[this.table36049_menuauthority.webpageColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_menuauthority_groupRow : System.Data.DataRow {
            
            private _36049_menuauthority_groupDataTable table36049_menuauthority_group;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_menuauthority_groupRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_menuauthority_group = ((_36049_menuauthority_groupDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int menuauthority_group_id {
                get {
                    return ((int)(this[this.table36049_menuauthority_group.menuauthority_group_idColumn]));
                }
                set {
                    this[this.table36049_menuauthority_group.menuauthority_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_group_name {
                get {
                    try {
                        return ((string)(this[this.table36049_menuauthority_group.menuauthority_group_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_group_name\' in table \'36049_menuauthority_gro" +
                                "up\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_menuauthority_group.menuauthority_group_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_group_desc {
                get {
                    try {
                        return ((string)(this[this.table36049_menuauthority_group.menuauthority_group_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_group_desc\' in table \'36049_menuauthority_gro" +
                                "up\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_menuauthority_group.menuauthority_group_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_group_nameNull() {
                return this.IsNull(this.table36049_menuauthority_group.menuauthority_group_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_group_nameNull() {
                this[this.table36049_menuauthority_group.menuauthority_group_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_group_descNull() {
                return this.IsNull(this.table36049_menuauthority_group.menuauthority_group_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_group_descNull() {
                this[this.table36049_menuauthority_group.menuauthority_group_descColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_menuauthority_group_detailRow : System.Data.DataRow {
            
            private _36049_menuauthority_group_detailDataTable table36049_menuauthority_group_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_menuauthority_group_detailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_menuauthority_group_detail = ((_36049_menuauthority_group_detailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int group_detail_id {
                get {
                    return ((int)(this[this.table36049_menuauthority_group_detail.group_detail_idColumn]));
                }
                set {
                    this[this.table36049_menuauthority_group_detail.group_detail_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_group_id {
                get {
                    try {
                        return ((string)(this[this.table36049_menuauthority_group_detail.menuauthority_group_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_group_id\' in table \'36049_menuauthority_group" +
                                "_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_menuauthority_group_detail.menuauthority_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_id {
                get {
                    try {
                        return ((string)(this[this.table36049_menuauthority_group_detail.menuauthority_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_id\' in table \'36049_menuauthority_group_detai" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_menuauthority_group_detail.menuauthority_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool fullcontrol {
                get {
                    return ((bool)(this[this.table36049_menuauthority_group_detail.fullcontrolColumn]));
                }
                set {
                    this[this.table36049_menuauthority_group_detail.fullcontrolColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_group_idNull() {
                return this.IsNull(this.table36049_menuauthority_group_detail.menuauthority_group_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_group_idNull() {
                this[this.table36049_menuauthority_group_detail.menuauthority_group_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_idNull() {
                return this.IsNull(this.table36049_menuauthority_group_detail.menuauthority_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_idNull() {
                this[this.table36049_menuauthority_group_detail.menuauthority_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_scoreRow : System.Data.DataRow {
            
            private _36049_scoreDataTable table36049_score;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_scoreRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_score = ((_36049_scoreDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.table36049_score.idColumn]));
                }
                set {
                    this[this.table36049_score.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.table36049_score.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'36049_score\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string big_issue {
                get {
                    try {
                        return ((string)(this[this.table36049_score.big_issueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'big_issue\' in table \'36049_score\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score.big_issueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sum_score {
                get {
                    try {
                        return ((string)(this[this.table36049_score.sum_scoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'sum_score\' in table \'36049_score\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score.sum_scoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string avg_score {
                get {
                    try {
                        return ((string)(this[this.table36049_score.avg_scoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'avg_score\' in table \'36049_score\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score.avg_scoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string percentage {
                get {
                    try {
                        return ((string)(this[this.table36049_score.percentageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'percentage\' in table \'36049_score\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score.percentageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.table36049_score.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.table36049_score.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbig_issueNull() {
                return this.IsNull(this.table36049_score.big_issueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbig_issueNull() {
                this[this.table36049_score.big_issueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issum_scoreNull() {
                return this.IsNull(this.table36049_score.sum_scoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsum_scoreNull() {
                this[this.table36049_score.sum_scoreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isavg_scoreNull() {
                return this.IsNull(this.table36049_score.avg_scoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setavg_scoreNull() {
                this[this.table36049_score.avg_scoreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspercentageNull() {
                return this.IsNull(this.table36049_score.percentageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpercentageNull() {
                this[this.table36049_score.percentageColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049_score_detailRow : System.Data.DataRow {
            
            private _36049_score_detailDataTable table36049_score_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049_score_detailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049_score_detail = ((_36049_score_detailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.table36049_score_detail.idColumn]));
                }
                set {
                    this[this.table36049_score_detail.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string big_issue {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail.big_issueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'big_issue\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail.big_issueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string small_issue {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail.small_issueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'small_issue\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail.small_issueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _1 {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail._1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'1\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail._1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _2 {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail._2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'2\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail._2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _3 {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail._3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'3\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail._3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _4 {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail._4Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'4\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail._4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _5 {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail._5Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'5\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail._5Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string self {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail.selfColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'self\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail.selfColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string get_score {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail.get_scoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'get_score\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail.get_scoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string get_score_avg {
                get {
                    try {
                        return ((string)(this[this.table36049_score_detail.get_score_avgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'get_score_avg\' in table \'36049_score_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049_score_detail.get_score_avgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.table36049_score_detail.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.table36049_score_detail.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbig_issueNull() {
                return this.IsNull(this.table36049_score_detail.big_issueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbig_issueNull() {
                this[this.table36049_score_detail.big_issueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issmall_issueNull() {
                return this.IsNull(this.table36049_score_detail.small_issueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsmall_issueNull() {
                this[this.table36049_score_detail.small_issueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_1Null() {
                return this.IsNull(this.table36049_score_detail._1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_1Null() {
                this[this.table36049_score_detail._1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_2Null() {
                return this.IsNull(this.table36049_score_detail._2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_2Null() {
                this[this.table36049_score_detail._2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_3Null() {
                return this.IsNull(this.table36049_score_detail._3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_3Null() {
                this[this.table36049_score_detail._3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_4Null() {
                return this.IsNull(this.table36049_score_detail._4Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_4Null() {
                this[this.table36049_score_detail._4Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_5Null() {
                return this.IsNull(this.table36049_score_detail._5Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_5Null() {
                this[this.table36049_score_detail._5Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselfNull() {
                return this.IsNull(this.table36049_score_detail.selfColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselfNull() {
                this[this.table36049_score_detail.selfColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isget_scoreNull() {
                return this.IsNull(this.table36049_score_detail.get_scoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setget_scoreNull() {
                this[this.table36049_score_detail.get_scoreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isget_score_avgNull() {
                return this.IsNull(this.table36049_score_detail.get_score_avgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setget_score_avgNull() {
                this[this.table36049_score_detail.get_score_avgColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class _36049userRow : System.Data.DataRow {
            
            private _36049userDataTable table36049user;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal _36049userRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table36049user = ((_36049userDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname360 {
                get {
                    return ((string)(this[this.table36049user.uname360Column]));
                }
                set {
                    this[this.table36049user.uname360Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int menuauthority_group_id {
                get {
                    try {
                        return ((int)(this[this.table36049user.menuauthority_group_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_group_id\' in table \'36049user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049user.menuauthority_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pwd360 {
                get {
                    try {
                        return ((string)(this[this.table36049user.pwd360Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'pwd360\' in table \'36049user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049user.pwd360Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_id {
                get {
                    try {
                        return ((string)(this[this.table36049user.company_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'company_id\' in table \'36049user\' is DBNull.", e);
                    }
                }
                set {
                    this[this.table36049user.company_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_group_idNull() {
                return this.IsNull(this.table36049user.menuauthority_group_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_group_idNull() {
                this[this.table36049user.menuauthority_group_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispwd360Null() {
                return this.IsNull(this.table36049user.pwd360Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpwd360Null() {
                this[this.table36049user.pwd360Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_idNull() {
                return this.IsNull(this.table36049user.company_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_idNull() {
                this[this.table36049user.company_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class competency_st_requireRow : System.Data.DataRow {
            
            private competency_st_requireDataTable tablecompetency_st_require;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal competency_st_requireRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecompetency_st_require = ((competency_st_requireDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_require_id {
                get {
                    return ((int)(this[this.tablecompetency_st_require.cst_require_idColumn]));
                }
                set {
                    this[this.tablecompetency_st_require.cst_require_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_group_id {
                get {
                    try {
                        return ((int)(this[this.tablecompetency_st_require.cst_group_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cst_group_id\' in table \'competency_st_require\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompetency_st_require.cst_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_subject_id {
                get {
                    try {
                        return ((int)(this[this.tablecompetency_st_require.cst_subject_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cst_subject_id\' in table \'competency_st_require\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablecompetency_st_require.cst_subject_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscst_group_idNull() {
                return this.IsNull(this.tablecompetency_st_require.cst_group_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcst_group_idNull() {
                this[this.tablecompetency_st_require.cst_group_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscst_subject_idNull() {
                return this.IsNull(this.tablecompetency_st_require.cst_subject_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcst_subject_idNull() {
                this[this.tablecompetency_st_require.cst_subject_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtpropertiesRow : System.Data.DataRow {
            
            private dtpropertiesDataTable tabledtproperties;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtpropertiesRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtproperties = ((dtpropertiesDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tabledtproperties.idColumn]));
                }
                set {
                    this[this.tabledtproperties.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int objectid {
                get {
                    try {
                        return ((int)(this[this.tabledtproperties.objectidColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'objectid\' in table \'dtproperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtproperties.objectidColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string property {
                get {
                    return ((string)(this[this.tabledtproperties.propertyColumn]));
                }
                set {
                    this[this.tabledtproperties.propertyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string value {
                get {
                    try {
                        return ((string)(this[this.tabledtproperties.valueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'value\' in table \'dtproperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtproperties.valueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uvalue {
                get {
                    try {
                        return ((string)(this[this.tabledtproperties.uvalueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uvalue\' in table \'dtproperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtproperties.uvalueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] lvalue {
                get {
                    try {
                        return ((byte[])(this[this.tabledtproperties.lvalueColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'lvalue\' in table \'dtproperties\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtproperties.lvalueColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int version {
                get {
                    return ((int)(this[this.tabledtproperties.versionColumn]));
                }
                set {
                    this[this.tabledtproperties.versionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectidNull() {
                return this.IsNull(this.tabledtproperties.objectidColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectidNull() {
                this[this.tabledtproperties.objectidColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalueNull() {
                return this.IsNull(this.tabledtproperties.valueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalueNull() {
                this[this.tabledtproperties.valueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuvalueNull() {
                return this.IsNull(this.tabledtproperties.uvalueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuvalueNull() {
                this[this.tabledtproperties.uvalueColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslvalueNull() {
                return this.IsNull(this.tabledtproperties.lvalueColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlvalueNull() {
                this[this.tabledtproperties.lvalueColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class evaluationRow : System.Data.DataRow {
            
            private evaluationDataTable tableevaluation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal evaluationRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableevaluation = ((evaluationDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_id {
                get {
                    return ((int)(this[this.tableevaluation.evaluation_idColumn]));
                }
                set {
                    this[this.tableevaluation.evaluation_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_no {
                get {
                    try {
                        return ((int)(this[this.tableevaluation.evaluation_noColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_no\' in table \'evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation.evaluation_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname_eva {
                get {
                    try {
                        return ((string)(this[this.tableevaluation.uname_evaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname_eva\' in table \'evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation.uname_evaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tableevaluation.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_eva_relation {
                get {
                    try {
                        return ((int)(this[this.tableevaluation.staff_eva_relationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_eva_relation\' in table \'evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation.staff_eva_relationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal staff_id_totalscore {
                get {
                    try {
                        return ((decimal)(this[this.tableevaluation.staff_id_totalscoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_id_totalscore\' in table \'evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation.staff_id_totalscoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime savedate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableevaluation.savedateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'savedate\' in table \'evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation.savedateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime submitdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableevaluation.submitdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'submitdate\' in table \'evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation.submitdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool submit_status {
                get {
                    try {
                        return ((bool)(this[this.tableevaluation.submit_statusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'submit_status\' in table \'evaluation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation.submit_statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_evaluation_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_evaluation_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_noNull() {
                return this.IsNull(this.tableevaluation.evaluation_noColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_noNull() {
                this[this.tableevaluation.evaluation_noColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuname_evaNull() {
                return this.IsNull(this.tableevaluation.uname_evaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuname_evaNull() {
                this[this.tableevaluation.uname_evaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tableevaluation.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tableevaluation.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_eva_relationNull() {
                return this.IsNull(this.tableevaluation.staff_eva_relationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_eva_relationNull() {
                this[this.tableevaluation.staff_eva_relationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_id_totalscoreNull() {
                return this.IsNull(this.tableevaluation.staff_id_totalscoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_id_totalscoreNull() {
                this[this.tableevaluation.staff_id_totalscoreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssavedateNull() {
                return this.IsNull(this.tableevaluation.savedateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsavedateNull() {
                this[this.tableevaluation.savedateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubmitdateNull() {
                return this.IsNull(this.tableevaluation.submitdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubmitdateNull() {
                this[this.tableevaluation.submitdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issubmit_statusNull() {
                return this.IsNull(this.tableevaluation.submit_statusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsubmit_statusNull() {
                this[this.tableevaluation.submit_statusColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class evaluation_detailRow : System.Data.DataRow {
            
            private evaluation_detailDataTable tableevaluation_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal evaluation_detailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableevaluation_detail = ((evaluation_detailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_detail_id {
                get {
                    return ((int)(this[this.tableevaluation_detail.evaluation_detail_idColumn]));
                }
                set {
                    this[this.tableevaluation_detail.evaluation_detail_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_id {
                get {
                    try {
                        return ((int)(this[this.tableevaluation_detail.evaluation_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_id\' in table \'evaluation_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation_detail.evaluation_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_subject_id {
                get {
                    try {
                        return ((int)(this[this.tableevaluation_detail.evaluation_subject_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_subject_id\' in table \'evaluation_detail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableevaluation_detail.evaluation_subject_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_sub_subject_id {
                get {
                    try {
                        return ((int)(this[this.tableevaluation_detail.evaluation_sub_subject_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_sub_subject_id\' in table \'evaluation_detail\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation_detail.evaluation_sub_subject_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal evaluation_score {
                get {
                    try {
                        return ((decimal)(this[this.tableevaluation_detail.evaluation_scoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_score\' in table \'evaluation_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation_detail.evaluation_scoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_idNull() {
                return this.IsNull(this.tableevaluation_detail.evaluation_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_idNull() {
                this[this.tableevaluation_detail.evaluation_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_subject_idNull() {
                return this.IsNull(this.tableevaluation_detail.evaluation_subject_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_subject_idNull() {
                this[this.tableevaluation_detail.evaluation_subject_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_sub_subject_idNull() {
                return this.IsNull(this.tableevaluation_detail.evaluation_sub_subject_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_sub_subject_idNull() {
                this[this.tableevaluation_detail.evaluation_sub_subject_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_scoreNull() {
                return this.IsNull(this.tableevaluation_detail.evaluation_scoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_scoreNull() {
                this[this.tableevaluation_detail.evaluation_scoreColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class evaluation_indexRow : System.Data.DataRow {
            
            private evaluation_indexDataTable tableevaluation_index;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal evaluation_indexRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableevaluation_index = ((evaluation_indexDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int evaluation_no {
                get {
                    return ((int)(this[this.tableevaluation_index.evaluation_noColumn]));
                }
                set {
                    this[this.tableevaluation_index.evaluation_noColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string evaluation_name {
                get {
                    try {
                        return ((string)(this[this.tableevaluation_index.evaluation_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_name\' in table \'evaluation_index\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation_index.evaluation_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime startdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableevaluation_index.startdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'startdate\' in table \'evaluation_index\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation_index.startdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool evaluation_active {
                get {
                    try {
                        return ((bool)(this[this.tableevaluation_index.evaluation_activeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'evaluation_active\' in table \'evaluation_index\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableevaluation_index.evaluation_activeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_nameNull() {
                return this.IsNull(this.tableevaluation_index.evaluation_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_nameNull() {
                this[this.tableevaluation_index.evaluation_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstartdateNull() {
                return this.IsNull(this.tableevaluation_index.startdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstartdateNull() {
                this[this.tableevaluation_index.startdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isevaluation_activeNull() {
                return this.IsNull(this.tableevaluation_index.evaluation_activeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setevaluation_activeNull() {
                this[this.tableevaluation_index.evaluation_activeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class kpiRow : System.Data.DataRow {
            
            private kpiDataTable tablekpi;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal kpiRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablekpi = ((kpiDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int kpi_id {
                get {
                    return ((int)(this[this.tablekpi.kpi_idColumn]));
                }
                set {
                    this[this.tablekpi.kpi_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablekpi.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_subject {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_subjectColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_subject\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_subjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_criteria {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_criteriaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_criteria\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_criteriaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_weight {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_weightColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_weight\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_weightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_q1 {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_q1Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_q1\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_q1Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_q2 {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_q2Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_q2\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_q2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_q3 {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_q3Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_q3\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_q3Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_q4 {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_q4Column]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_q4\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_q4Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_year {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_yearColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_year\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_yearColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_result {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_resultColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_result\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_resultColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_previous_yr {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_previous_yrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_previous_yr\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_previous_yrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_target {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_targetColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_target\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_targetColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_commit {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_commitColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_commit\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_commitColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string kpi_avg {
                get {
                    try {
                        return ((string)(this[this.tablekpi.kpi_avgColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'kpi_avg\' in table \'kpi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablekpi.kpi_avgColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_kpi_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_kpi_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablekpi.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablekpi.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_subjectNull() {
                return this.IsNull(this.tablekpi.kpi_subjectColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_subjectNull() {
                this[this.tablekpi.kpi_subjectColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_criteriaNull() {
                return this.IsNull(this.tablekpi.kpi_criteriaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_criteriaNull() {
                this[this.tablekpi.kpi_criteriaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_weightNull() {
                return this.IsNull(this.tablekpi.kpi_weightColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_weightNull() {
                this[this.tablekpi.kpi_weightColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_q1Null() {
                return this.IsNull(this.tablekpi.kpi_q1Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_q1Null() {
                this[this.tablekpi.kpi_q1Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_q2Null() {
                return this.IsNull(this.tablekpi.kpi_q2Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_q2Null() {
                this[this.tablekpi.kpi_q2Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_q3Null() {
                return this.IsNull(this.tablekpi.kpi_q3Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_q3Null() {
                this[this.tablekpi.kpi_q3Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_q4Null() {
                return this.IsNull(this.tablekpi.kpi_q4Column);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_q4Null() {
                this[this.tablekpi.kpi_q4Column] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_yearNull() {
                return this.IsNull(this.tablekpi.kpi_yearColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_yearNull() {
                this[this.tablekpi.kpi_yearColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_resultNull() {
                return this.IsNull(this.tablekpi.kpi_resultColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_resultNull() {
                this[this.tablekpi.kpi_resultColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_previous_yrNull() {
                return this.IsNull(this.tablekpi.kpi_previous_yrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_previous_yrNull() {
                this[this.tablekpi.kpi_previous_yrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_targetNull() {
                return this.IsNull(this.tablekpi.kpi_targetColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_targetNull() {
                this[this.tablekpi.kpi_targetColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_commitNull() {
                return this.IsNull(this.tablekpi.kpi_commitColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_commitNull() {
                this[this.tablekpi.kpi_commitColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskpi_avgNull() {
                return this.IsNull(this.tablekpi.kpi_avgColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkpi_avgNull() {
                this[this.tablekpi.kpi_avgColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_authorityRow : System.Data.DataRow {
            
            private masterdata_authorityDataTable tablemasterdata_authority;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_authorityRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_authority = ((masterdata_authorityDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string authority {
                get {
                    return ((string)(this[this.tablemasterdata_authority.authorityColumn]));
                }
                set {
                    this[this.tablemasterdata_authority.authorityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string authority_name {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_authority.authority_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'authority_name\' in table \'masterdata_authority\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_authority.authority_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string line_factory {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_authority.line_factoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'line_factory\' in table \'masterdata_authority\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_authority.line_factoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string line_office {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_authority.line_officeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'line_office\' in table \'masterdata_authority\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_authority.line_officeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isauthority_nameNull() {
                return this.IsNull(this.tablemasterdata_authority.authority_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setauthority_nameNull() {
                this[this.tablemasterdata_authority.authority_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isline_factoryNull() {
                return this.IsNull(this.tablemasterdata_authority.line_factoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setline_factoryNull() {
                this[this.tablemasterdata_authority.line_factoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isline_officeNull() {
                return this.IsNull(this.tablemasterdata_authority.line_officeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setline_officeNull() {
                this[this.tablemasterdata_authority.line_officeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_competency_coreRow : System.Data.DataRow {
            
            private masterdata_competency_coreDataTable tablemasterdata_competency_core;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_competency_coreRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_competency_core = ((masterdata_competency_coreDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cc_id {
                get {
                    return ((int)(this[this.tablemasterdata_competency_core.cc_idColumn]));
                }
                set {
                    this[this.tablemasterdata_competency_core.cc_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc_yr {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_competency_core.cc_yrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cc_yr\' in table \'masterdata_competency_core\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_competency_core.cc_yrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc_subject {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_competency_core.cc_subjectColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cc_subject\' in table \'masterdata_competency_core\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablemasterdata_competency_core.cc_subjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int fullscore {
                get {
                    try {
                        return ((int)(this[this.tablemasterdata_competency_core.fullscoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'fullscore\' in table \'masterdata_competency_core\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablemasterdata_competency_core.fullscoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int order_by {
                get {
                    try {
                        return ((int)(this[this.tablemasterdata_competency_core.order_byColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'order_by\' in table \'masterdata_competency_core\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_competency_core.order_byColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscc_yrNull() {
                return this.IsNull(this.tablemasterdata_competency_core.cc_yrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcc_yrNull() {
                this[this.tablemasterdata_competency_core.cc_yrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscc_subjectNull() {
                return this.IsNull(this.tablemasterdata_competency_core.cc_subjectColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcc_subjectNull() {
                this[this.tablemasterdata_competency_core.cc_subjectColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfullscoreNull() {
                return this.IsNull(this.tablemasterdata_competency_core.fullscoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfullscoreNull() {
                this[this.tablemasterdata_competency_core.fullscoreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorder_byNull() {
                return this.IsNull(this.tablemasterdata_competency_core.order_byColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorder_byNull() {
                this[this.tablemasterdata_competency_core.order_byColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_competency_stRow : System.Data.DataRow {
            
            private masterdata_competency_stDataTable tablemasterdata_competency_st;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_competency_stRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_competency_st = ((masterdata_competency_stDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_subject_id {
                get {
                    return ((int)(this[this.tablemasterdata_competency_st.cst_subject_idColumn]));
                }
                set {
                    this[this.tablemasterdata_competency_st.cst_subject_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cst_subject {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_competency_st.cst_subjectColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cst_subject\' in table \'masterdata_competency_st\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablemasterdata_competency_st.cst_subjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscst_subjectNull() {
                return this.IsNull(this.tablemasterdata_competency_st.cst_subjectColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcst_subjectNull() {
                this[this.tablemasterdata_competency_st.cst_subjectColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_competency_st_groupRow : System.Data.DataRow {
            
            private masterdata_competency_st_groupDataTable tablemasterdata_competency_st_group;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_competency_st_groupRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_competency_st_group = ((masterdata_competency_st_groupDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_group_id {
                get {
                    return ((int)(this[this.tablemasterdata_competency_st_group.cst_group_idColumn]));
                }
                set {
                    this[this.tablemasterdata_competency_st_group.cst_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cst_groupname {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_competency_st_group.cst_groupnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cst_groupname\' in table \'masterdata_competency_st_group\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_competency_st_group.cst_groupnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscst_groupnameNull() {
                return this.IsNull(this.tablemasterdata_competency_st_group.cst_groupnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcst_groupnameNull() {
                this[this.tablemasterdata_competency_st_group.cst_groupnameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_competency_st_group_detailRow : System.Data.DataRow {
            
            private masterdata_competency_st_group_detailDataTable tablemasterdata_competency_st_group_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_competency_st_group_detailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_competency_st_group_detail = ((masterdata_competency_st_group_detailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_group_detail_id {
                get {
                    return ((int)(this[this.tablemasterdata_competency_st_group_detail.cst_group_detail_idColumn]));
                }
                set {
                    this[this.tablemasterdata_competency_st_group_detail.cst_group_detail_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_group_id {
                get {
                    try {
                        return ((int)(this[this.tablemasterdata_competency_st_group_detail.cst_group_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cst_group_id\' in table \'masterdata_competency_st_group_deta" +
                                "il\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_competency_st_group_detail.cst_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_subject_id {
                get {
                    try {
                        return ((int)(this[this.tablemasterdata_competency_st_group_detail.cst_subject_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cst_subject_id\' in table \'masterdata_competency_st_group_de" +
                                "tail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_competency_st_group_detail.cst_subject_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscst_group_idNull() {
                return this.IsNull(this.tablemasterdata_competency_st_group_detail.cst_group_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcst_group_idNull() {
                this[this.tablemasterdata_competency_st_group_detail.cst_group_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscst_subject_idNull() {
                return this.IsNull(this.tablemasterdata_competency_st_group_detail.cst_subject_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcst_subject_idNull() {
                this[this.tablemasterdata_competency_st_group_detail.cst_subject_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_eva_relationRow : System.Data.DataRow {
            
            private masterdata_eva_relationDataTable tablemasterdata_eva_relation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_eva_relationRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_eva_relation = ((masterdata_eva_relationDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string relation_id {
                get {
                    return ((string)(this[this.tablemasterdata_eva_relation.relation_idColumn]));
                }
                set {
                    this[this.tablemasterdata_eva_relation.relation_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_eva_relation {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_eva_relation.staff_eva_relationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_eva_relation\' in table \'masterdata_eva_relation\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_eva_relation.staff_eva_relationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_eva_relationNull() {
                return this.IsNull(this.tablemasterdata_eva_relation.staff_eva_relationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_eva_relationNull() {
                this[this.tablemasterdata_eva_relation.staff_eva_relationColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_menuauthorityRow : System.Data.DataRow {
            
            private masterdata_menuauthorityDataTable tablemasterdata_menuauthority;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_menuauthorityRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_menuauthority = ((masterdata_menuauthorityDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int menuauthority_id {
                get {
                    return ((int)(this[this.tablemasterdata_menuauthority.menuauthority_idColumn]));
                }
                set {
                    this[this.tablemasterdata_menuauthority.menuauthority_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_root {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_menuauthority.menuauthority_rootColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_root\' in table \'masterdata_menuauthority\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_menuauthority.menuauthority_rootColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_name {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_menuauthority.menuauthority_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_name\' in table \'masterdata_menuauthority\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_menuauthority.menuauthority_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_desc {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_menuauthority.menuauthority_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_desc\' in table \'masterdata_menuauthority\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_menuauthority.menuauthority_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int orderby {
                get {
                    try {
                        return ((int)(this[this.tablemasterdata_menuauthority.orderbyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'orderby\' in table \'masterdata_menuauthority\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_menuauthority.orderbyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_rootNull() {
                return this.IsNull(this.tablemasterdata_menuauthority.menuauthority_rootColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_rootNull() {
                this[this.tablemasterdata_menuauthority.menuauthority_rootColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_nameNull() {
                return this.IsNull(this.tablemasterdata_menuauthority.menuauthority_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_nameNull() {
                this[this.tablemasterdata_menuauthority.menuauthority_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_descNull() {
                return this.IsNull(this.tablemasterdata_menuauthority.menuauthority_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_descNull() {
                this[this.tablemasterdata_menuauthority.menuauthority_descColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsorderbyNull() {
                return this.IsNull(this.tablemasterdata_menuauthority.orderbyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetorderbyNull() {
                this[this.tablemasterdata_menuauthority.orderbyColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_menuauthority_groupRow : System.Data.DataRow {
            
            private masterdata_menuauthority_groupDataTable tablemasterdata_menuauthority_group;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_menuauthority_groupRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_menuauthority_group = ((masterdata_menuauthority_groupDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int menuauthority_group_id {
                get {
                    return ((int)(this[this.tablemasterdata_menuauthority_group.menuauthority_group_idColumn]));
                }
                set {
                    this[this.tablemasterdata_menuauthority_group.menuauthority_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_group_name {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_menuauthority_group.menuauthority_group_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_group_name\' in table \'masterdata_menuauthorit" +
                                "y_group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_menuauthority_group.menuauthority_group_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string menuauthority_group_desc {
                get {
                    try {
                        return ((string)(this[this.tablemasterdata_menuauthority_group.menuauthority_group_descColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_group_desc\' in table \'masterdata_menuauthorit" +
                                "y_group\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_menuauthority_group.menuauthority_group_descColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_group_nameNull() {
                return this.IsNull(this.tablemasterdata_menuauthority_group.menuauthority_group_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_group_nameNull() {
                this[this.tablemasterdata_menuauthority_group.menuauthority_group_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_group_descNull() {
                return this.IsNull(this.tablemasterdata_menuauthority_group.menuauthority_group_descColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_group_descNull() {
                this[this.tablemasterdata_menuauthority_group.menuauthority_group_descColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_menuauthority_group_detailRow : System.Data.DataRow {
            
            private masterdata_menuauthority_group_detailDataTable tablemasterdata_menuauthority_group_detail;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_menuauthority_group_detailRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_menuauthority_group_detail = ((masterdata_menuauthority_group_detailDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int group_detail_id {
                get {
                    return ((int)(this[this.tablemasterdata_menuauthority_group_detail.group_detail_idColumn]));
                }
                set {
                    this[this.tablemasterdata_menuauthority_group_detail.group_detail_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int menuauthority_group_id {
                get {
                    try {
                        return ((int)(this[this.tablemasterdata_menuauthority_group_detail.menuauthority_group_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_group_id\' in table \'masterdata_menuauthority_" +
                                "group_detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_menuauthority_group_detail.menuauthority_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int menuauthority_id {
                get {
                    try {
                        return ((int)(this[this.tablemasterdata_menuauthority_group_detail.menuauthority_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_id\' in table \'masterdata_menuauthority_group_" +
                                "detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemasterdata_menuauthority_group_detail.menuauthority_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_group_idNull() {
                return this.IsNull(this.tablemasterdata_menuauthority_group_detail.menuauthority_group_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_group_idNull() {
                this[this.tablemasterdata_menuauthority_group_detail.menuauthority_group_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_idNull() {
                return this.IsNull(this.tablemasterdata_menuauthority_group_detail.menuauthority_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_idNull() {
                this[this.tablemasterdata_menuauthority_group_detail.menuauthority_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class masterdata_refRow : System.Data.DataRow {
            
            private masterdata_refDataTable tablemasterdata_ref;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal masterdata_refRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemasterdata_ref = ((masterdata_refDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ref_autono {
                get {
                    return ((int)(this[this.tablemasterdata_ref.ref_autonoColumn]));
                }
                set {
                    this[this.tablemasterdata_ref.ref_autonoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ref_category {
                get {
                    return ((string)(this[this.tablemasterdata_ref.ref_categoryColumn]));
                }
                set {
                    this[this.tablemasterdata_ref.ref_categoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ref_id {
                get {
                    return ((string)(this[this.tablemasterdata_ref.ref_idColumn]));
                }
                set {
                    this[this.tablemasterdata_ref.ref_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ref_name {
                get {
                    return ((string)(this[this.tablemasterdata_ref.ref_nameColumn]));
                }
                set {
                    this[this.tablemasterdata_ref.ref_nameColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_activityRow : System.Data.DataRow {
            
            private staff_activityDataTable tablestaff_activity;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_activityRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_activity = ((staff_activityDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_activity_id {
                get {
                    return ((int)(this[this.tablestaff_activity.staff_activity_idColumn]));
                }
                set {
                    this[this.tablestaff_activity.staff_activity_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_activity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_activity_date {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity.staff_activity_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_activity_date\' in table \'staff_activity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity.staff_activity_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_subject {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity.activity_subjectColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_subject\' in table \'staff_activity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity.activity_subjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_detail {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity.activity_detailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_detail\' in table \'staff_activity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity.activity_detailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_activity_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_activity_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_activity.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_activity.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_activity_dateNull() {
                return this.IsNull(this.tablestaff_activity.staff_activity_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_activity_dateNull() {
                this[this.tablestaff_activity.staff_activity_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_subjectNull() {
                return this.IsNull(this.tablestaff_activity.activity_subjectColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_subjectNull() {
                this[this.tablestaff_activity.activity_subjectColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_detailNull() {
                return this.IsNull(this.tablestaff_activity.activity_detailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_detailNull() {
                this[this.tablestaff_activity.activity_detailColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_imageRow[] Getstaff_activity_imageRows() {
                return ((staff_activity_imageRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_activity_image_staff_activity"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_activity_imageRow : System.Data.DataRow {
            
            private staff_activity_imageDataTable tablestaff_activity_image;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_activity_imageRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_activity_image = ((staff_activity_imageDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_activity_image_id {
                get {
                    return ((int)(this[this.tablestaff_activity_image.staff_activity_image_idColumn]));
                }
                set {
                    this[this.tablestaff_activity_image.staff_activity_image_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_activity_id {
                get {
                    try {
                        return ((int)(this[this.tablestaff_activity_image.staff_activity_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_activity_id\' in table \'staff_activity_image\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_image.staff_activity_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_image {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_image.activity_imageColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_image\' in table \'staff_activity_image\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_image.activity_imageColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_image_thumb {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_image.activity_image_thumbColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_image_thumb\' in table \'staff_activity_image\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_image.activity_image_thumbColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_image_descript {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_image.activity_image_descriptColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_image_descript\' in table \'staff_activity_image\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_image.activity_image_descriptColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityRow staff_activityRow {
                get {
                    return ((staff_activityRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_activity_image_staff_activity"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_activity_image_staff_activity"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_activity_idNull() {
                return this.IsNull(this.tablestaff_activity_image.staff_activity_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_activity_idNull() {
                this[this.tablestaff_activity_image.staff_activity_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_imageNull() {
                return this.IsNull(this.tablestaff_activity_image.activity_imageColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_imageNull() {
                this[this.tablestaff_activity_image.activity_imageColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_image_thumbNull() {
                return this.IsNull(this.tablestaff_activity_image.activity_image_thumbColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_image_thumbNull() {
                this[this.tablestaff_activity_image.activity_image_thumbColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_image_descriptNull() {
                return this.IsNull(this.tablestaff_activity_image.activity_image_descriptColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_image_descriptNull() {
                this[this.tablestaff_activity_image.activity_image_descriptColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_activity_tempRow : System.Data.DataRow {
            
            private staff_activity_tempDataTable tablestaff_activity_temp;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_activity_tempRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_activity_temp = ((staff_activity_tempDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_activity_id {
                get {
                    return ((int)(this[this.tablestaff_activity_temp.staff_activity_idColumn]));
                }
                set {
                    this[this.tablestaff_activity_temp.staff_activity_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_temp.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_activity_temp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_temp.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_activity_date {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_temp.staff_activity_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_activity_date\' in table \'staff_activity_temp\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_temp.staff_activity_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_subject {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_temp.activity_subjectColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_subject\' in table \'staff_activity_temp\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_temp.activity_subjectColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_detail {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_temp.activity_detailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_detail\' in table \'staff_activity_temp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_temp.activity_detailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_activity_temp.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_activity_temp.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_activity_dateNull() {
                return this.IsNull(this.tablestaff_activity_temp.staff_activity_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_activity_dateNull() {
                this[this.tablestaff_activity_temp.staff_activity_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_subjectNull() {
                return this.IsNull(this.tablestaff_activity_temp.activity_subjectColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_subjectNull() {
                this[this.tablestaff_activity_temp.activity_subjectColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_detailNull() {
                return this.IsNull(this.tablestaff_activity_temp.activity_detailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_detailNull() {
                this[this.tablestaff_activity_temp.activity_detailColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_activity_videoRow : System.Data.DataRow {
            
            private staff_activity_videoDataTable tablestaff_activity_video;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_activity_videoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_activity_video = ((staff_activity_videoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_activity_video_id {
                get {
                    return ((int)(this[this.tablestaff_activity_video.staff_activity_video_idColumn]));
                }
                set {
                    this[this.tablestaff_activity_video.staff_activity_video_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_activity_id {
                get {
                    try {
                        return ((int)(this[this.tablestaff_activity_video.staff_activity_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_activity_id\' in table \'staff_activity_video\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_video.staff_activity_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_video {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_video.activity_videoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_video\' in table \'staff_activity_video\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_video.activity_videoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string activity_video_descript {
                get {
                    try {
                        return ((string)(this[this.tablestaff_activity_video.activity_video_descriptColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_video_descript\' in table \'staff_activity_video\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_activity_video.activity_video_descriptColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_activity_idNull() {
                return this.IsNull(this.tablestaff_activity_video.staff_activity_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_activity_idNull() {
                this[this.tablestaff_activity_video.staff_activity_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_videoNull() {
                return this.IsNull(this.tablestaff_activity_video.activity_videoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_videoNull() {
                this[this.tablestaff_activity_video.activity_videoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_video_descriptNull() {
                return this.IsNull(this.tablestaff_activity_video.activity_video_descriptColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_video_descriptNull() {
                this[this.tablestaff_activity_video.activity_video_descriptColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_addressRow : System.Data.DataRow {
            
            private staff_addressDataTable tablestaff_address;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_addressRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_address = ((staff_addressDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    return ((string)(this[this.tablestaff_address.unameColumn]));
                }
                set {
                    this[this.tablestaff_address.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_address {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_addressColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_address\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_addressColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_locality {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_localityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_locality\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_localityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_amphur {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_amphurColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_amphur\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_amphurColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_province {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_provinceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_province\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_provinceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_postalcode {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_postalcodeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_postalcode\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_postalcodeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_map {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_mapColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_map\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_mapColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_tel {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_telColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_tel\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_telColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_mobile {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_mobileColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_mobile\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_mobileColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_tel_office {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_tel_officeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_tel_office\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_tel_officeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_tel_office_ext {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_tel_office_extColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_tel_office_ext\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_tel_office_extColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_email {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_emailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_email\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_emailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_emergency_name {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_emergency_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_emergency_name\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_emergency_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_emergency_tel {
                get {
                    try {
                        return ((string)(this[this.tablestaff_address.staff_emergency_telColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_emergency_tel\' in table \'staff_address\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_address.staff_emergency_telColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_address_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_address_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_addressNull() {
                return this.IsNull(this.tablestaff_address.staff_addressColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_addressNull() {
                this[this.tablestaff_address.staff_addressColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_localityNull() {
                return this.IsNull(this.tablestaff_address.staff_localityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_localityNull() {
                this[this.tablestaff_address.staff_localityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_amphurNull() {
                return this.IsNull(this.tablestaff_address.staff_amphurColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_amphurNull() {
                this[this.tablestaff_address.staff_amphurColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_provinceNull() {
                return this.IsNull(this.tablestaff_address.staff_provinceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_provinceNull() {
                this[this.tablestaff_address.staff_provinceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_postalcodeNull() {
                return this.IsNull(this.tablestaff_address.staff_postalcodeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_postalcodeNull() {
                this[this.tablestaff_address.staff_postalcodeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_mapNull() {
                return this.IsNull(this.tablestaff_address.staff_mapColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_mapNull() {
                this[this.tablestaff_address.staff_mapColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_telNull() {
                return this.IsNull(this.tablestaff_address.staff_telColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_telNull() {
                this[this.tablestaff_address.staff_telColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_mobileNull() {
                return this.IsNull(this.tablestaff_address.staff_mobileColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_mobileNull() {
                this[this.tablestaff_address.staff_mobileColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_tel_officeNull() {
                return this.IsNull(this.tablestaff_address.staff_tel_officeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_tel_officeNull() {
                this[this.tablestaff_address.staff_tel_officeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_tel_office_extNull() {
                return this.IsNull(this.tablestaff_address.staff_tel_office_extColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_tel_office_extNull() {
                this[this.tablestaff_address.staff_tel_office_extColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_emailNull() {
                return this.IsNull(this.tablestaff_address.staff_emailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_emailNull() {
                this[this.tablestaff_address.staff_emailColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_emergency_nameNull() {
                return this.IsNull(this.tablestaff_address.staff_emergency_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_emergency_nameNull() {
                this[this.tablestaff_address.staff_emergency_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_emergency_telNull() {
                return this.IsNull(this.tablestaff_address.staff_emergency_telColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_emergency_telNull() {
                this[this.tablestaff_address.staff_emergency_telColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_ailmentRow : System.Data.DataRow {
            
            private staff_ailmentDataTable tablestaff_ailment;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_ailmentRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_ailment = ((staff_ailmentDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_ailment_id {
                get {
                    return ((int)(this[this.tablestaff_ailment.staff_ailment_idColumn]));
                }
                set {
                    this[this.tablestaff_ailment.staff_ailment_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_ailment.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_ailment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_ailment.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ailment_name_th {
                get {
                    try {
                        return ((string)(this[this.tablestaff_ailment.ailment_name_thColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ailment_name_th\' in table \'staff_ailment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_ailment.ailment_name_thColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ailment_name_en {
                get {
                    try {
                        return ((string)(this[this.tablestaff_ailment.ailment_name_enColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ailment_name_en\' in table \'staff_ailment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_ailment.ailment_name_enColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ailment_comment {
                get {
                    try {
                        return ((string)(this[this.tablestaff_ailment.ailment_commentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ailment_comment\' in table \'staff_ailment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_ailment.ailment_commentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_ailment_staff_index1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_ailment_staff_index1"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_ailment.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_ailment.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isailment_name_thNull() {
                return this.IsNull(this.tablestaff_ailment.ailment_name_thColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setailment_name_thNull() {
                this[this.tablestaff_ailment.ailment_name_thColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isailment_name_enNull() {
                return this.IsNull(this.tablestaff_ailment.ailment_name_enColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setailment_name_enNull() {
                this[this.tablestaff_ailment.ailment_name_enColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isailment_commentNull() {
                return this.IsNull(this.tablestaff_ailment.ailment_commentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setailment_commentNull() {
                this[this.tablestaff_ailment.ailment_commentColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_assessmentRow : System.Data.DataRow {
            
            private staff_assessmentDataTable tablestaff_assessment;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_assessmentRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_assessment = ((staff_assessmentDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int assessment_id {
                get {
                    return ((int)(this[this.tablestaff_assessment.assessment_idColumn]));
                }
                set {
                    this[this.tablestaff_assessment.assessment_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_assessment.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_assessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_assessment.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approve_by {
                get {
                    try {
                        return ((string)(this[this.tablestaff_assessment.approve_byColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'approve_by\' in table \'staff_assessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_assessment.approve_byColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime approve_date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_assessment.approve_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'approve_date\' in table \'staff_assessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_assessment.approve_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string achievement {
                get {
                    try {
                        return ((string)(this[this.tablestaff_assessment.achievementColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'achievement\' in table \'staff_assessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_assessment.achievementColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string miss_goal {
                get {
                    try {
                        return ((string)(this[this.tablestaff_assessment.miss_goalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'miss_goal\' in table \'staff_assessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_assessment.miss_goalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string area_improvement {
                get {
                    try {
                        return ((string)(this[this.tablestaff_assessment.area_improvementColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'area_improvement\' in table \'staff_assessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_assessment.area_improvementColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string strength {
                get {
                    try {
                        return ((string)(this[this.tablestaff_assessment.strengthColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'strength\' in table \'staff_assessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_assessment.strengthColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assessment_yr {
                get {
                    try {
                        return ((string)(this[this.tablestaff_assessment.assessment_yrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'assessment_yr\' in table \'staff_assessment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_assessment.assessment_yrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_assessment_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_assessment_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_assessment.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_assessment.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapprove_byNull() {
                return this.IsNull(this.tablestaff_assessment.approve_byColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapprove_byNull() {
                this[this.tablestaff_assessment.approve_byColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapprove_dateNull() {
                return this.IsNull(this.tablestaff_assessment.approve_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapprove_dateNull() {
                this[this.tablestaff_assessment.approve_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsachievementNull() {
                return this.IsNull(this.tablestaff_assessment.achievementColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetachievementNull() {
                this[this.tablestaff_assessment.achievementColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismiss_goalNull() {
                return this.IsNull(this.tablestaff_assessment.miss_goalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmiss_goalNull() {
                this[this.tablestaff_assessment.miss_goalColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isarea_improvementNull() {
                return this.IsNull(this.tablestaff_assessment.area_improvementColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setarea_improvementNull() {
                this[this.tablestaff_assessment.area_improvementColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstrengthNull() {
                return this.IsNull(this.tablestaff_assessment.strengthColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstrengthNull() {
                this[this.tablestaff_assessment.strengthColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassessment_yrNull() {
                return this.IsNull(this.tablestaff_assessment.assessment_yrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassessment_yrNull() {
                this[this.tablestaff_assessment.assessment_yrColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_competency_coreRow : System.Data.DataRow {
            
            private staff_competency_coreDataTable tablestaff_competency_core;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_competency_coreRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_competency_core = ((staff_competency_coreDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablestaff_competency_core.idColumn]));
                }
                set {
                    this[this.tablestaff_competency_core.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cc_id {
                get {
                    try {
                        return ((int)(this[this.tablestaff_competency_core.cc_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cc_id\' in table \'staff_competency_core\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_core.cc_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_competency_core.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_competency_core\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_core.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int score {
                get {
                    try {
                        return ((int)(this[this.tablestaff_competency_core.scoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'score\' in table \'staff_competency_core\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_core.scoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime createdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_competency_core.createdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'createdate\' in table \'staff_competency_core\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_core.createdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updatedate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_competency_core.updatedateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'updatedate\' in table \'staff_competency_core\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_core.updatedateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_competency_core_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_competency_core_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscc_idNull() {
                return this.IsNull(this.tablestaff_competency_core.cc_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcc_idNull() {
                this[this.tablestaff_competency_core.cc_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_competency_core.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_competency_core.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsscoreNull() {
                return this.IsNull(this.tablestaff_competency_core.scoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetscoreNull() {
                this[this.tablestaff_competency_core.scoreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedateNull() {
                return this.IsNull(this.tablestaff_competency_core.createdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedateNull() {
                this[this.tablestaff_competency_core.createdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdatedateNull() {
                return this.IsNull(this.tablestaff_competency_core.updatedateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdatedateNull() {
                this[this.tablestaff_competency_core.updatedateColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_competency_structuralRow : System.Data.DataRow {
            
            private staff_competency_structuralDataTable tablestaff_competency_structural;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_competency_structuralRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_competency_structural = ((staff_competency_structuralDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablestaff_competency_structural.idColumn]));
                }
                set {
                    this[this.tablestaff_competency_structural.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_subject_id {
                get {
                    try {
                        return ((int)(this[this.tablestaff_competency_structural.cst_subject_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cst_subject_id\' in table \'staff_competency_structural\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_structural.cst_subject_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_competency_structural.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_competency_structural\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_structural.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int score {
                get {
                    try {
                        return ((int)(this[this.tablestaff_competency_structural.scoreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'score\' in table \'staff_competency_structural\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_structural.scoreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string createdate {
                get {
                    try {
                        return ((string)(this[this.tablestaff_competency_structural.createdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'createdate\' in table \'staff_competency_structural\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_structural.createdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string updatedate {
                get {
                    try {
                        return ((string)(this[this.tablestaff_competency_structural.updatedateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'updatedate\' in table \'staff_competency_structural\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablestaff_competency_structural.updatedateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_competency_structural_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_competency_structural_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscst_subject_idNull() {
                return this.IsNull(this.tablestaff_competency_structural.cst_subject_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcst_subject_idNull() {
                this[this.tablestaff_competency_structural.cst_subject_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_competency_structural.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_competency_structural.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsscoreNull() {
                return this.IsNull(this.tablestaff_competency_structural.scoreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetscoreNull() {
                this[this.tablestaff_competency_structural.scoreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedateNull() {
                return this.IsNull(this.tablestaff_competency_structural.createdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedateNull() {
                this[this.tablestaff_competency_structural.createdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdatedateNull() {
                return this.IsNull(this.tablestaff_competency_structural.updatedateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdatedateNull() {
                this[this.tablestaff_competency_structural.updatedateColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_educationRow : System.Data.DataRow {
            
            private staff_educationDataTable tablestaff_education;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_educationRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_education = ((staff_educationDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_education_id {
                get {
                    return ((int)(this[this.tablestaff_education.staff_education_idColumn]));
                }
                set {
                    this[this.tablestaff_education.staff_education_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_education.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_education.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string education_level {
                get {
                    try {
                        return ((string)(this[this.tablestaff_education.education_levelColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'education_level\' in table \'staff_education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_education.education_levelColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime education_startdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_education.education_startdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'education_startdate\' in table \'staff_education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_education.education_startdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime education_enddate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_education.education_enddateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'education_enddate\' in table \'staff_education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_education.education_enddateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string education_major {
                get {
                    try {
                        return ((string)(this[this.tablestaff_education.education_majorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'education_major\' in table \'staff_education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_education.education_majorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal education_gpa {
                get {
                    try {
                        return ((decimal)(this[this.tablestaff_education.education_gpaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'education_gpa\' in table \'staff_education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_education.education_gpaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string education_institute {
                get {
                    try {
                        return ((string)(this[this.tablestaff_education.education_instituteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'education_institute\' in table \'staff_education\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_education.education_instituteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_education_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_education_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_education.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_education.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseducation_levelNull() {
                return this.IsNull(this.tablestaff_education.education_levelColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteducation_levelNull() {
                this[this.tablestaff_education.education_levelColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseducation_startdateNull() {
                return this.IsNull(this.tablestaff_education.education_startdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteducation_startdateNull() {
                this[this.tablestaff_education.education_startdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseducation_enddateNull() {
                return this.IsNull(this.tablestaff_education.education_enddateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteducation_enddateNull() {
                this[this.tablestaff_education.education_enddateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseducation_majorNull() {
                return this.IsNull(this.tablestaff_education.education_majorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteducation_majorNull() {
                this[this.tablestaff_education.education_majorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseducation_gpaNull() {
                return this.IsNull(this.tablestaff_education.education_gpaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteducation_gpaNull() {
                this[this.tablestaff_education.education_gpaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseducation_instituteNull() {
                return this.IsNull(this.tablestaff_education.education_instituteColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteducation_instituteNull() {
                this[this.tablestaff_education.education_instituteColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_familyRow : System.Data.DataRow {
            
            private staff_familyDataTable tablestaff_family;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_familyRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_family = ((staff_familyDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int family_id {
                get {
                    return ((int)(this[this.tablestaff_family.family_idColumn]));
                }
                set {
                    this[this.tablestaff_family.family_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_family.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_family.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string family_salutation {
                get {
                    try {
                        return ((string)(this[this.tablestaff_family.family_salutationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'family_salutation\' in table \'staff_family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_family.family_salutationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string family_name {
                get {
                    try {
                        return ((string)(this[this.tablestaff_family.family_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'family_name\' in table \'staff_family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_family.family_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string family_surname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_family.family_surnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'family_surname\' in table \'staff_family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_family.family_surnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string family_relation {
                get {
                    try {
                        return ((string)(this[this.tablestaff_family.family_relationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'family_relation\' in table \'staff_family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_family.family_relationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string family_occupation {
                get {
                    try {
                        return ((string)(this[this.tablestaff_family.family_occupationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'family_occupation\' in table \'staff_family\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_family.family_occupationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_family_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_family_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_family.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_family.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfamily_salutationNull() {
                return this.IsNull(this.tablestaff_family.family_salutationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfamily_salutationNull() {
                this[this.tablestaff_family.family_salutationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfamily_nameNull() {
                return this.IsNull(this.tablestaff_family.family_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfamily_nameNull() {
                this[this.tablestaff_family.family_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfamily_surnameNull() {
                return this.IsNull(this.tablestaff_family.family_surnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfamily_surnameNull() {
                this[this.tablestaff_family.family_surnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfamily_relationNull() {
                return this.IsNull(this.tablestaff_family.family_relationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfamily_relationNull() {
                this[this.tablestaff_family.family_relationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfamily_occupationNull() {
                return this.IsNull(this.tablestaff_family.family_occupationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfamily_occupationNull() {
                this[this.tablestaff_family.family_occupationColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_healhistoryRow : System.Data.DataRow {
            
            private staff_healhistoryDataTable tablestaff_healhistory;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_healhistoryRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_healhistory = ((staff_healhistoryDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_healhistory_id {
                get {
                    return ((int)(this[this.tablestaff_healhistory.staff_healhistory_idColumn]));
                }
                set {
                    this[this.tablestaff_healhistory.staff_healhistory_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_healhistory.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_healhistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_healhistory.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string healhistory_hospital {
                get {
                    try {
                        return ((string)(this[this.tablestaff_healhistory.healhistory_hospitalColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'healhistory_hospital\' in table \'staff_healhistory\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablestaff_healhistory.healhistory_hospitalColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime healhistory_startdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_healhistory.healhistory_startdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'healhistory_startdate\' in table \'staff_healhistory\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablestaff_healhistory.healhistory_startdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime healhistory_enddate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_healhistory.healhistory_enddateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'healhistory_enddate\' in table \'staff_healhistory\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablestaff_healhistory.healhistory_enddateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string healhistory_detail {
                get {
                    try {
                        return ((string)(this[this.tablestaff_healhistory.healhistory_detailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'healhistory_detail\' in table \'staff_healhistory\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablestaff_healhistory.healhistory_detailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string healhistory_expense {
                get {
                    try {
                        return ((string)(this[this.tablestaff_healhistory.healhistory_expenseColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'healhistory_expense\' in table \'staff_healhistory\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablestaff_healhistory.healhistory_expenseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_healhistory_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_healhistory_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_healhistory.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_healhistory.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishealhistory_hospitalNull() {
                return this.IsNull(this.tablestaff_healhistory.healhistory_hospitalColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethealhistory_hospitalNull() {
                this[this.tablestaff_healhistory.healhistory_hospitalColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishealhistory_startdateNull() {
                return this.IsNull(this.tablestaff_healhistory.healhistory_startdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethealhistory_startdateNull() {
                this[this.tablestaff_healhistory.healhistory_startdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishealhistory_enddateNull() {
                return this.IsNull(this.tablestaff_healhistory.healhistory_enddateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethealhistory_enddateNull() {
                this[this.tablestaff_healhistory.healhistory_enddateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishealhistory_detailNull() {
                return this.IsNull(this.tablestaff_healhistory.healhistory_detailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethealhistory_detailNull() {
                this[this.tablestaff_healhistory.healhistory_detailColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishealhistory_expenseNull() {
                return this.IsNull(this.tablestaff_healhistory.healhistory_expenseColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethealhistory_expenseNull() {
                this[this.tablestaff_healhistory.healhistory_expenseColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_hipotRow : System.Data.DataRow {
            
            private staff_hipotDataTable tablestaff_hipot;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_hipotRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_hipot = ((staff_hipotDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    return ((string)(this[this.tablestaff_hipot.unameColumn]));
                }
                set {
                    this[this.tablestaff_hipot.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool status_hipot {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_hipot.status_hipotColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'status_hipot\' in table \'staff_hipot\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_hipot.status_hipotColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_hipot_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_hipot_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstatus_hipotNull() {
                return this.IsNull(this.tablestaff_hipot.status_hipotColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstatus_hipotNull() {
                this[this.tablestaff_hipot.status_hipotColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_indexRow : System.Data.DataRow {
            
            private staff_indexDataTable tablestaff_index;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_indexRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_index = ((staff_indexDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    return ((string)(this[this.tablestaff_index.unameColumn]));
                }
                set {
                    this[this.tablestaff_index.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pwd {
                get {
                    try {
                        return ((string)(this[this.tablestaff_index.pwdColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'pwd\' in table \'staff_index\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_index.pwdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_id {
                get {
                    try {
                        return ((string)(this[this.tablestaff_index.company_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'company_id\' in table \'staff_index\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_index.company_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int department_id {
                get {
                    try {
                        return ((int)(this[this.tablestaff_index.department_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'department_id\' in table \'staff_index\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_index.department_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_position {
                get {
                    try {
                        return ((int)(this[this.tablestaff_index.staff_positionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_position\' in table \'staff_index\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_index.staff_positionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspwdNull() {
                return this.IsNull(this.tablestaff_index.pwdColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpwdNull() {
                this[this.tablestaff_index.pwdColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_idNull() {
                return this.IsNull(this.tablestaff_index.company_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_idNull() {
                this[this.tablestaff_index.company_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_idNull() {
                return this.IsNull(this.tablestaff_index.department_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_idNull() {
                this[this.tablestaff_index.department_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_positionNull() {
                return this.IsNull(this.tablestaff_index.staff_positionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_positionNull() {
                this[this.tablestaff_index.staff_positionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluationRow[] GetevaluationRows() {
                return ((evaluationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_evaluation_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public kpiRow[] GetkpiRows() {
                return ((kpiRow[])(base.GetChildRows(this.Table.ChildRelations["FK_kpi_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityRow[] Getstaff_activityRows() {
                return ((staff_activityRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_activity_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_addressRow[] Getstaff_addressRows() {
                return ((staff_addressRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_address_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ailmentRow[] Getstaff_ailmentRows() {
                return ((staff_ailmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_ailment_staff_index1"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_assessmentRow[] Getstaff_assessmentRows() {
                return ((staff_assessmentRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_assessment_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_coreRow[] Getstaff_competency_coreRows() {
                return ((staff_competency_coreRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_competency_core_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_structuralRow[] Getstaff_competency_structuralRows() {
                return ((staff_competency_structuralRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_competency_structural_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_educationRow[] Getstaff_educationRows() {
                return ((staff_educationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_education_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_familyRow[] Getstaff_familyRows() {
                return ((staff_familyRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_family_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_healhistoryRow[] Getstaff_healhistoryRows() {
                return ((staff_healhistoryRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_healhistory_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_hipotRow[] Getstaff_hipotRows() {
                return ((staff_hipotRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_hipot_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_infoRow[] Getstaff_infoRows() {
                return ((staff_infoRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_info_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupationRow[] Getstaff_occupationRows() {
                return ((staff_occupationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_occupation_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupation_historyRow[] Getstaff_occupation_historyRows() {
                return ((staff_occupation_historyRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_occupation_history_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_status_controlRow[] Getstaff_status_controlRows() {
                return ((staff_status_controlRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_status_control_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_successRow[] Getstaff_successRows() {
                return ((staff_successRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_success_staff_index"])));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_trainingRow[] Getstaff_trainingRows() {
                return ((staff_trainingRow[])(base.GetChildRows(this.Table.ChildRelations["FK_staff_training_staff_index"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_infoRow : System.Data.DataRow {
            
            private staff_infoDataTable tablestaff_info;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_infoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_info = ((staff_infoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    return ((string)(this[this.tablestaff_info.unameColumn]));
                }
                set {
                    this[this.tablestaff_info.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_id {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_id\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_salutation {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_salutationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_salutation\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_salutationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_name {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_name\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_surname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_surnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_surname\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_surnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_salutation_en {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_salutation_enColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_salutation_en\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_salutation_enColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_name_en {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_name_enColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_name_en\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_name_enColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_surname_en {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_surname_enColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_surname_en\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_surname_enColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_gender {
                get {
                    try {
                        return ((int)(this[this.tablestaff_info.staff_genderColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_gender\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_genderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_height {
                get {
                    try {
                        return ((int)(this[this.tablestaff_info.staff_heightColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_height\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_heightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_weight {
                get {
                    try {
                        return ((int)(this[this.tablestaff_info.staff_weightColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_weight\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_weightColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_bloodtype {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_bloodtypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_bloodtype\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_bloodtypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_origin {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_originColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_origin\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_originColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_nationality {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_nationalityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_nationality\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_nationalityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_religion {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_religionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_religion\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_religionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_birthcountry {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_birthcountryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_birthcountry\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_birthcountryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_birthprovince {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_birthprovinceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_birthprovince\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_birthprovinceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime staff_birthdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_info.staff_birthdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_birthdate\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_birthdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_marital_status {
                get {
                    try {
                        return ((int)(this[this.tablestaff_info.staff_marital_statusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_marital_status\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_marital_statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime staff_marital_registdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_info.staff_marital_registdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_marital_registdate\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_marital_registdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_photo {
                get {
                    try {
                        return ((string)(this[this.tablestaff_info.staff_photoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_photo\' in table \'staff_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_info.staff_photoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_info_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_info_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_idNull() {
                return this.IsNull(this.tablestaff_info.staff_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_idNull() {
                this[this.tablestaff_info.staff_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_salutationNull() {
                return this.IsNull(this.tablestaff_info.staff_salutationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_salutationNull() {
                this[this.tablestaff_info.staff_salutationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_nameNull() {
                return this.IsNull(this.tablestaff_info.staff_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_nameNull() {
                this[this.tablestaff_info.staff_nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_surnameNull() {
                return this.IsNull(this.tablestaff_info.staff_surnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_surnameNull() {
                this[this.tablestaff_info.staff_surnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_salutation_enNull() {
                return this.IsNull(this.tablestaff_info.staff_salutation_enColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_salutation_enNull() {
                this[this.tablestaff_info.staff_salutation_enColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_name_enNull() {
                return this.IsNull(this.tablestaff_info.staff_name_enColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_name_enNull() {
                this[this.tablestaff_info.staff_name_enColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_surname_enNull() {
                return this.IsNull(this.tablestaff_info.staff_surname_enColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_surname_enNull() {
                this[this.tablestaff_info.staff_surname_enColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_genderNull() {
                return this.IsNull(this.tablestaff_info.staff_genderColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_genderNull() {
                this[this.tablestaff_info.staff_genderColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_heightNull() {
                return this.IsNull(this.tablestaff_info.staff_heightColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_heightNull() {
                this[this.tablestaff_info.staff_heightColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_weightNull() {
                return this.IsNull(this.tablestaff_info.staff_weightColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_weightNull() {
                this[this.tablestaff_info.staff_weightColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_bloodtypeNull() {
                return this.IsNull(this.tablestaff_info.staff_bloodtypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_bloodtypeNull() {
                this[this.tablestaff_info.staff_bloodtypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_originNull() {
                return this.IsNull(this.tablestaff_info.staff_originColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_originNull() {
                this[this.tablestaff_info.staff_originColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_nationalityNull() {
                return this.IsNull(this.tablestaff_info.staff_nationalityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_nationalityNull() {
                this[this.tablestaff_info.staff_nationalityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_religionNull() {
                return this.IsNull(this.tablestaff_info.staff_religionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_religionNull() {
                this[this.tablestaff_info.staff_religionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_birthcountryNull() {
                return this.IsNull(this.tablestaff_info.staff_birthcountryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_birthcountryNull() {
                this[this.tablestaff_info.staff_birthcountryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_birthprovinceNull() {
                return this.IsNull(this.tablestaff_info.staff_birthprovinceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_birthprovinceNull() {
                this[this.tablestaff_info.staff_birthprovinceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_birthdateNull() {
                return this.IsNull(this.tablestaff_info.staff_birthdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_birthdateNull() {
                this[this.tablestaff_info.staff_birthdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_marital_statusNull() {
                return this.IsNull(this.tablestaff_info.staff_marital_statusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_marital_statusNull() {
                this[this.tablestaff_info.staff_marital_statusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_marital_registdateNull() {
                return this.IsNull(this.tablestaff_info.staff_marital_registdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_marital_registdateNull() {
                this[this.tablestaff_info.staff_marital_registdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_photoNull() {
                return this.IsNull(this.tablestaff_info.staff_photoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_photoNull() {
                this[this.tablestaff_info.staff_photoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_nonworkingRow : System.Data.DataRow {
            
            private staff_nonworkingDataTable tablestaff_nonworking;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_nonworkingRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_nonworking = ((staff_nonworkingDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    return ((string)(this[this.tablestaff_nonworking.unameColumn]));
                }
                set {
                    this[this.tablestaff_nonworking.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_business_day {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_business_dayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_business_day\' in table \'staff_nonworking\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_business_dayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_business_hr {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_business_hrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_business_hr\' in table \'staff_nonworking\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_business_hrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_sick_day {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_sick_dayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_sick_day\' in table \'staff_nonworking\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_sick_dayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_sick_hr {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_sick_hrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_sick_hr\' in table \'staff_nonworking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_sick_hrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_work_day {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_work_dayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_work_day\' in table \'staff_nonworking\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_work_dayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_work_hr {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_work_hrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_work_hr\' in table \'staff_nonworking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_work_hrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_vacation_day {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_vacation_dayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_vacation_day\' in table \'staff_nonworking\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_vacation_dayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_vacation_hr {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_vacation_hrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_vacation_hr\' in table \'staff_nonworking\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_vacation_hrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_late_day {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_late_dayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_late_day\' in table \'staff_nonworking\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_late_dayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nonworking_late_hr {
                get {
                    try {
                        return ((string)(this[this.tablestaff_nonworking.nonworking_late_hrColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_late_hr\' in table \'staff_nonworking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_nonworking.nonworking_late_hrColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_business_dayNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_business_dayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_business_dayNull() {
                this[this.tablestaff_nonworking.nonworking_business_dayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_business_hrNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_business_hrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_business_hrNull() {
                this[this.tablestaff_nonworking.nonworking_business_hrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_sick_dayNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_sick_dayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_sick_dayNull() {
                this[this.tablestaff_nonworking.nonworking_sick_dayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_sick_hrNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_sick_hrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_sick_hrNull() {
                this[this.tablestaff_nonworking.nonworking_sick_hrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_work_dayNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_work_dayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_work_dayNull() {
                this[this.tablestaff_nonworking.nonworking_work_dayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_work_hrNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_work_hrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_work_hrNull() {
                this[this.tablestaff_nonworking.nonworking_work_hrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_vacation_dayNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_vacation_dayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_vacation_dayNull() {
                this[this.tablestaff_nonworking.nonworking_vacation_dayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_vacation_hrNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_vacation_hrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_vacation_hrNull() {
                this[this.tablestaff_nonworking.nonworking_vacation_hrColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_late_dayNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_late_dayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_late_dayNull() {
                this[this.tablestaff_nonworking.nonworking_late_dayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_late_hrNull() {
                return this.IsNull(this.tablestaff_nonworking.nonworking_late_hrColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_late_hrNull() {
                this[this.tablestaff_nonworking.nonworking_late_hrColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_ocRow : System.Data.DataRow {
            
            private staff_ocDataTable tablestaff_oc;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_ocRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_oc = ((staff_ocDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablestaff_oc.idColumn]));
                }
                set {
                    this[this.tablestaff_oc.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_oc.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_oc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_oc.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parent {
                get {
                    try {
                        return ((string)(this[this.tablestaff_oc.parentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'parent\' in table \'staff_oc\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_oc.parentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_oc.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_oc.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsparentNull() {
                return this.IsNull(this.tablestaff_oc.parentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetparentNull() {
                this[this.tablestaff_oc.parentColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_occupationRow : System.Data.DataRow {
            
            private staff_occupationDataTable tablestaff_occupation;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_occupationRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_occupation = ((staff_occupationDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    return ((string)(this[this.tablestaff_occupation.unameColumn]));
                }
                set {
                    this[this.tablestaff_occupation.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupation_position {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation.occupation_positionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_position\' in table \'staff_occupation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_positionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupation_office {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation.occupation_officeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_office\' in table \'staff_occupation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_officeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupation_sector {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation.occupation_sectorColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_sector\' in table \'staff_occupation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_sectorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupation_division {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation.occupation_divisionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_division\' in table \'staff_occupation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_divisionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupation_department {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation.occupation_departmentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_department\' in table \'staff_occupation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_departmentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupation_company {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation.occupation_companyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_company\' in table \'staff_occupation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_companyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool occupation_status {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_occupation.occupation_statusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_status\' in table \'staff_occupation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime occupation_startdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_occupation.occupation_startdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_startdate\' in table \'staff_occupation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_startdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime occupation_enddate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_occupation.occupation_enddateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_enddate\' in table \'staff_occupation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation.occupation_enddateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_occupation_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_occupation_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_positionNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_positionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_positionNull() {
                this[this.tablestaff_occupation.occupation_positionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_officeNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_officeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_officeNull() {
                this[this.tablestaff_occupation.occupation_officeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_sectorNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_sectorColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_sectorNull() {
                this[this.tablestaff_occupation.occupation_sectorColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_divisionNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_divisionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_divisionNull() {
                this[this.tablestaff_occupation.occupation_divisionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_departmentNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_departmentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_departmentNull() {
                this[this.tablestaff_occupation.occupation_departmentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_companyNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_companyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_companyNull() {
                this[this.tablestaff_occupation.occupation_companyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_statusNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_statusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_statusNull() {
                this[this.tablestaff_occupation.occupation_statusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_startdateNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_startdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_startdateNull() {
                this[this.tablestaff_occupation.occupation_startdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_enddateNull() {
                return this.IsNull(this.tablestaff_occupation.occupation_enddateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_enddateNull() {
                this[this.tablestaff_occupation.occupation_enddateColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_occupation_historyRow : System.Data.DataRow {
            
            private staff_occupation_historyDataTable tablestaff_occupation_history;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_occupation_historyRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_occupation_history = ((staff_occupation_historyDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int occupation_history_id {
                get {
                    return ((int)(this[this.tablestaff_occupation_history.occupation_history_idColumn]));
                }
                set {
                    this[this.tablestaff_occupation_history.occupation_history_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation_history.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_occupation_history\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation_history.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupationhis_company {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation_history.occupationhis_companyColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupationhis_company\' in table \'staff_occupation_history\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation_history.occupationhis_companyColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupationhis_postion {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation_history.occupationhis_postionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupationhis_postion\' in table \'staff_occupation_history\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation_history.occupationhis_postionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime occupationhis_startdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_occupation_history.occupationhis_startdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupationhis_startdate\' in table \'staff_occupation_history" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation_history.occupationhis_startdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime occupationhis_enddate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablestaff_occupation_history.occupationhis_enddateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupationhis_enddate\' in table \'staff_occupation_history\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation_history.occupationhis_enddateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int occupationhis_salary {
                get {
                    try {
                        return ((int)(this[this.tablestaff_occupation_history.occupationhis_salaryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupationhis_salary\' in table \'staff_occupation_history\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation_history.occupationhis_salaryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string occupationhis_change_reason {
                get {
                    try {
                        return ((string)(this[this.tablestaff_occupation_history.occupationhis_change_reasonColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupationhis_change_reason\' in table \'staff_occupation_his" +
                                "tory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_occupation_history.occupationhis_change_reasonColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_occupation_history_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_occupation_history_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_occupation_history.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_occupation_history.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupationhis_companyNull() {
                return this.IsNull(this.tablestaff_occupation_history.occupationhis_companyColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupationhis_companyNull() {
                this[this.tablestaff_occupation_history.occupationhis_companyColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupationhis_postionNull() {
                return this.IsNull(this.tablestaff_occupation_history.occupationhis_postionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupationhis_postionNull() {
                this[this.tablestaff_occupation_history.occupationhis_postionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupationhis_startdateNull() {
                return this.IsNull(this.tablestaff_occupation_history.occupationhis_startdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupationhis_startdateNull() {
                this[this.tablestaff_occupation_history.occupationhis_startdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupationhis_enddateNull() {
                return this.IsNull(this.tablestaff_occupation_history.occupationhis_enddateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupationhis_enddateNull() {
                this[this.tablestaff_occupation_history.occupationhis_enddateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupationhis_salaryNull() {
                return this.IsNull(this.tablestaff_occupation_history.occupationhis_salaryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupationhis_salaryNull() {
                this[this.tablestaff_occupation_history.occupationhis_salaryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupationhis_change_reasonNull() {
                return this.IsNull(this.tablestaff_occupation_history.occupationhis_change_reasonColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupationhis_change_reasonNull() {
                this[this.tablestaff_occupation_history.occupationhis_change_reasonColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_status_controlRow : System.Data.DataRow {
            
            private staff_status_controlDataTable tablestaff_status_control;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_status_controlRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_status_control = ((staff_status_controlDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    return ((string)(this[this.tablestaff_status_control.unameColumn]));
                }
                set {
                    this[this.tablestaff_status_control.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isactive {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.isactiveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'isactive\' in table \'staff_status_control\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.isactiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool info_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.info_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'info_update_approve\' in table \'staff_status_control\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.info_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool family_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.family_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'family_update_approve\' in table \'staff_status_control\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.family_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool occupation_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.occupation_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'occupation_update_approve\' in table \'staff_status_control\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.occupation_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool education_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.education_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'education_update_approve\' in table \'staff_status_control\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.education_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool success_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.success_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'success_update_approve\' in table \'staff_status_control\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.success_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool training_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.training_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'training_update_approve\' in table \'staff_status_control\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.training_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool activity_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.activity_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'activity_update_approve\' in table \'staff_status_control\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.activity_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool nonworking_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.nonworking_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'nonworking_update_approve\' in table \'staff_status_control\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.nonworking_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool healhistory_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.healhistory_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'healhistory_update_approve\' in table \'staff_status_control\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.healhistory_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ailment_update_approve {
                get {
                    try {
                        return ((bool)(this[this.tablestaff_status_control.ailment_update_approveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ailment_update_approve\' in table \'staff_status_control\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.ailment_update_approveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string authority {
                get {
                    try {
                        return ((string)(this[this.tablestaff_status_control.authorityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'authority\' in table \'staff_status_control\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.authorityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cst_group_id {
                get {
                    try {
                        return ((int)(this[this.tablestaff_status_control.cst_group_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'cst_group_id\' in table \'staff_status_control\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_status_control.cst_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_status_control_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_status_control_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisactiveNull() {
                return this.IsNull(this.tablestaff_status_control.isactiveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisactiveNull() {
                this[this.tablestaff_status_control.isactiveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinfo_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.info_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinfo_update_approveNull() {
                this[this.tablestaff_status_control.info_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfamily_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.family_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfamily_update_approveNull() {
                this[this.tablestaff_status_control.family_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoccupation_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.occupation_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoccupation_update_approveNull() {
                this[this.tablestaff_status_control.occupation_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseducation_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.education_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteducation_update_approveNull() {
                this[this.tablestaff_status_control.education_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issuccess_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.success_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsuccess_update_approveNull() {
                this[this.tablestaff_status_control.success_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istraining_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.training_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settraining_update_approveNull() {
                this[this.tablestaff_status_control.training_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isactivity_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.activity_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setactivity_update_approveNull() {
                this[this.tablestaff_status_control.activity_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnonworking_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.nonworking_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnonworking_update_approveNull() {
                this[this.tablestaff_status_control.nonworking_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishealhistory_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.healhistory_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethealhistory_update_approveNull() {
                this[this.tablestaff_status_control.healhistory_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isailment_update_approveNull() {
                return this.IsNull(this.tablestaff_status_control.ailment_update_approveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setailment_update_approveNull() {
                this[this.tablestaff_status_control.ailment_update_approveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsauthorityNull() {
                return this.IsNull(this.tablestaff_status_control.authorityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetauthorityNull() {
                this[this.tablestaff_status_control.authorityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscst_group_idNull() {
                return this.IsNull(this.tablestaff_status_control.cst_group_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcst_group_idNull() {
                this[this.tablestaff_status_control.cst_group_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_successRow : System.Data.DataRow {
            
            private staff_successDataTable tablestaff_success;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_successRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_success = ((staff_successDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_success_id {
                get {
                    return ((int)(this[this.tablestaff_success.staff_success_idColumn]));
                }
                set {
                    this[this.tablestaff_success.staff_success_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_success.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_success\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_success.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string success_date {
                get {
                    try {
                        return ((string)(this[this.tablestaff_success.success_dateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'success_date\' in table \'staff_success\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_success.success_dateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string success_detail {
                get {
                    try {
                        return ((string)(this[this.tablestaff_success.success_detailColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'success_detail\' in table \'staff_success\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_success.success_detailColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_success_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_success_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_success.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_success.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issuccess_dateNull() {
                return this.IsNull(this.tablestaff_success.success_dateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsuccess_dateNull() {
                this[this.tablestaff_success.success_dateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issuccess_detailNull() {
                return this.IsNull(this.tablestaff_success.success_detailColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsuccess_detailNull() {
                this[this.tablestaff_success.success_detailColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class staff_trainingRow : System.Data.DataRow {
            
            private staff_trainingDataTable tablestaff_training;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal staff_trainingRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestaff_training = ((staff_trainingDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_training_id {
                get {
                    return ((int)(this[this.tablestaff_training.staff_training_idColumn]));
                }
                set {
                    this[this.tablestaff_training.staff_training_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_training.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'staff_training\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_training.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string training_code {
                get {
                    try {
                        return ((string)(this[this.tablestaff_training.training_codeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'training_code\' in table \'staff_training\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_training.training_codeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string training_course {
                get {
                    try {
                        return ((string)(this[this.tablestaff_training.training_courseColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'training_course\' in table \'staff_training\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_training.training_courseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string training_startdate {
                get {
                    try {
                        return ((string)(this[this.tablestaff_training.training_startdateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'training_startdate\' in table \'staff_training\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_training.training_startdateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string training_enddate {
                get {
                    try {
                        return ((string)(this[this.tablestaff_training.training_enddateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'training_enddate\' in table \'staff_training\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_training.training_enddateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string training_expertname {
                get {
                    try {
                        return ((string)(this[this.tablestaff_training.training_expertnameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'training_expertname\' in table \'staff_training\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_training.training_expertnameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string training_institute {
                get {
                    try {
                        return ((string)(this[this.tablestaff_training.training_instituteColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'training_institute\' in table \'staff_training\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_training.training_instituteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string training_result {
                get {
                    try {
                        return ((string)(this[this.tablestaff_training.training_resultColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'training_result\' in table \'staff_training\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestaff_training.training_resultColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow staff_indexRow {
                get {
                    return ((staff_indexRow)(this.GetParentRow(this.Table.ParentRelations["FK_staff_training_staff_index"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_staff_training_staff_index"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablestaff_training.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablestaff_training.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istraining_codeNull() {
                return this.IsNull(this.tablestaff_training.training_codeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settraining_codeNull() {
                this[this.tablestaff_training.training_codeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istraining_courseNull() {
                return this.IsNull(this.tablestaff_training.training_courseColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settraining_courseNull() {
                this[this.tablestaff_training.training_courseColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istraining_startdateNull() {
                return this.IsNull(this.tablestaff_training.training_startdateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settraining_startdateNull() {
                this[this.tablestaff_training.training_startdateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istraining_enddateNull() {
                return this.IsNull(this.tablestaff_training.training_enddateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settraining_enddateNull() {
                this[this.tablestaff_training.training_enddateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istraining_expertnameNull() {
                return this.IsNull(this.tablestaff_training.training_expertnameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settraining_expertnameNull() {
                this[this.tablestaff_training.training_expertnameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istraining_instituteNull() {
                return this.IsNull(this.tablestaff_training.training_instituteColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settraining_instituteNull() {
                this[this.tablestaff_training.training_instituteColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istraining_resultNull() {
                return this.IsNull(this.tablestaff_training.training_resultColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settraining_resultNull() {
                this[this.tablestaff_training.training_resultColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sys_companyRow : System.Data.DataRow {
            
            private sys_companyDataTable tablesys_company;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sys_companyRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesys_company = ((sys_companyDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_id {
                get {
                    return ((string)(this[this.tablesys_company.company_idColumn]));
                }
                set {
                    this[this.tablesys_company.company_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_name {
                get {
                    try {
                        return ((string)(this[this.tablesys_company.company_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'company_name\' in table \'sys_company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesys_company.company_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_nameNull() {
                return this.IsNull(this.tablesys_company.company_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_nameNull() {
                this[this.tablesys_company.company_nameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sys_departmentRow : System.Data.DataRow {
            
            private sys_departmentDataTable tablesys_department;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sys_departmentRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesys_department = ((sys_departmentDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int department_id {
                get {
                    return ((int)(this[this.tablesys_department.department_idColumn]));
                }
                set {
                    this[this.tablesys_department.department_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_name {
                get {
                    try {
                        return ((string)(this[this.tablesys_department.department_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'department_name\' in table \'sys_department\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesys_department.department_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_nameNull() {
                return this.IsNull(this.tablesys_department.department_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_nameNull() {
                this[this.tablesys_department.department_nameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sys_menuauthorityRow : System.Data.DataRow {
            
            private sys_menuauthorityDataTable tablesys_menuauthority;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sys_menuauthorityRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesys_menuauthority = ((sys_menuauthorityDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sys_menuauthority_id {
                get {
                    return ((int)(this[this.tablesys_menuauthority.sys_menuauthority_idColumn]));
                }
                set {
                    this[this.tablesys_menuauthority.sys_menuauthority_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tablesys_menuauthority.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'sys_menuauthority\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesys_menuauthority.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int menuauthority_group_id {
                get {
                    try {
                        return ((int)(this[this.tablesys_menuauthority.menuauthority_group_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_group_id\' in table \'sys_menuauthority\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesys_menuauthority.menuauthority_group_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int menuauthority_id {
                get {
                    try {
                        return ((int)(this[this.tablesys_menuauthority.menuauthority_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'menuauthority_id\' in table \'sys_menuauthority\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesys_menuauthority.menuauthority_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tablesys_menuauthority.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tablesys_menuauthority.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_group_idNull() {
                return this.IsNull(this.tablesys_menuauthority.menuauthority_group_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_group_idNull() {
                this[this.tablesys_menuauthority.menuauthority_group_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismenuauthority_idNull() {
                return this.IsNull(this.tablesys_menuauthority.menuauthority_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmenuauthority_idNull() {
                this[this.tablesys_menuauthority.menuauthority_idColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sys_positionRow : System.Data.DataRow {
            
            private sys_positionDataTable tablesys_position;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sys_positionRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesys_position = ((sys_positionDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int staff_position {
                get {
                    return ((int)(this[this.tablesys_position.staff_positionColumn]));
                }
                set {
                    this[this.tablesys_position.staff_positionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_position_name {
                get {
                    try {
                        return ((string)(this[this.tablesys_position.staff_position_nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_position_name\' in table \'sys_position\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesys_position.staff_position_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_position_nameNull() {
                return this.IsNull(this.tablesys_position.staff_position_nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_position_nameNull() {
                this[this.tablesys_position.staff_position_nameColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class temp_uname11Row : System.Data.DataRow {
            
            private temp_uname11DataTable tabletemp_uname11;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal temp_uname11Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletemp_uname11 = ((temp_uname11DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tabletemp_uname11.idColumn]));
                }
                set {
                    this[this.tabletemp_uname11.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname11.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'temp_uname11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname11.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_nm {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname11.staff_nmColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_nm\' in table \'temp_uname11\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname11.staff_nmColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tabletemp_uname11.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tabletemp_uname11.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_nmNull() {
                return this.IsNull(this.tabletemp_uname11.staff_nmColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_nmNull() {
                this[this.tabletemp_uname11.staff_nmColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class temp_uname12Row : System.Data.DataRow {
            
            private temp_uname12DataTable tabletemp_uname12;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal temp_uname12Row(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletemp_uname12 = ((temp_uname12DataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tabletemp_uname12.idColumn]));
                }
                set {
                    this[this.tabletemp_uname12.idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uname {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname12.unameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'uname\' in table \'temp_uname12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname12.unameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prefix {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname12.prefixColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'prefix\' in table \'temp_uname12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname12.prefixColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_nm {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname12.staff_nmColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_nm\' in table \'temp_uname12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname12.staff_nmColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_sm {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname12.staff_smColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_sm\' in table \'temp_uname12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname12.staff_smColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool status {
                get {
                    try {
                        return ((bool)(this[this.tabletemp_uname12.statusColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'status\' in table \'temp_uname12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname12.statusColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_id {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname12.company_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'company_id\' in table \'temp_uname12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname12.company_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_id {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname12.department_idColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'department_id\' in table \'temp_uname12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname12.department_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string staff_position {
                get {
                    try {
                        return ((string)(this[this.tabletemp_uname12.staff_positionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'staff_position\' in table \'temp_uname12\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletemp_uname12.staff_positionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameNull() {
                return this.IsNull(this.tabletemp_uname12.unameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameNull() {
                this[this.tabletemp_uname12.unameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprefixNull() {
                return this.IsNull(this.tabletemp_uname12.prefixColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprefixNull() {
                this[this.tabletemp_uname12.prefixColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_nmNull() {
                return this.IsNull(this.tabletemp_uname12.staff_nmColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_nmNull() {
                this[this.tabletemp_uname12.staff_nmColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_smNull() {
                return this.IsNull(this.tabletemp_uname12.staff_smColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_smNull() {
                this[this.tabletemp_uname12.staff_smColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tabletemp_uname12.statusColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tabletemp_uname12.statusColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_idNull() {
                return this.IsNull(this.tabletemp_uname12.company_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_idNull() {
                this[this.tabletemp_uname12.company_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_idNull() {
                return this.IsNull(this.tabletemp_uname12.department_idColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_idNull() {
                this[this.tabletemp_uname12.department_idColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstaff_positionNull() {
                return this.IsNull(this.tabletemp_uname12.staff_positionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstaff_positionNull() {
                this[this.tabletemp_uname12.staff_positionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tempTSHRow : System.Data.DataRow {
            
            private tempTSHDataTable tabletempTSH;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tempTSHRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletempTSH = ((tempTSHDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unameold {
                get {
                    try {
                        return ((string)(this[this.tabletempTSH.unameoldColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'unameold\' in table \'tempTSH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletempTSH.unameoldColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unamenew {
                get {
                    try {
                        return ((string)(this[this.tabletempTSH.unamenewColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'unamenew\' in table \'tempTSH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletempTSH.unamenewColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunameoldNull() {
                return this.IsNull(this.tabletempTSH.unameoldColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunameoldNull() {
                this[this.tabletempTSH.unameoldColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunamenewNull() {
                return this.IsNull(this.tabletempTSH.unamenewColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunamenewNull() {
                this[this.tabletempTSH.unamenewColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_company_avgRowChangeEvent : System.EventArgs {
            
            private _36049_company_avgRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_company_avgRowChangeEvent(_36049_company_avgRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_company_avgRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_evaluationRowChangeEvent : System.EventArgs {
            
            private _36049_evaluationRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluationRowChangeEvent(_36049_evaluationRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_evaluation_detailRowChangeEvent : System.EventArgs {
            
            private _36049_evaluation_detailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluation_detailRowChangeEvent(_36049_evaluation_detailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_evaluation_detailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_generate_scoreRowChangeEvent : System.EventArgs {
            
            private _36049_generate_scoreRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_generate_scoreRowChangeEvent(_36049_generate_scoreRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_generate_scoreRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_group_avgRowChangeEvent : System.EventArgs {
            
            private _36049_group_avgRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_group_avgRowChangeEvent(_36049_group_avgRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_group_avgRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_menuauthorityRowChangeEvent : System.EventArgs {
            
            private _36049_menuauthorityRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthorityRowChangeEvent(_36049_menuauthorityRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthorityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_menuauthority_groupRowChangeEvent : System.EventArgs {
            
            private _36049_menuauthority_groupRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_groupRowChangeEvent(_36049_menuauthority_groupRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_groupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_menuauthority_group_detailRowChangeEvent : System.EventArgs {
            
            private _36049_menuauthority_group_detailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_group_detailRowChangeEvent(_36049_menuauthority_group_detailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_menuauthority_group_detailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_scoreRowChangeEvent : System.EventArgs {
            
            private _36049_scoreRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_scoreRowChangeEvent(_36049_scoreRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_scoreRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049_score_detailRowChangeEvent : System.EventArgs {
            
            private _36049_score_detailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_score_detailRowChangeEvent(_36049_score_detailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049_score_detailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class _36049userRowChangeEvent : System.EventArgs {
            
            private _36049userRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049userRowChangeEvent(_36049userRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public _36049userRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class competency_st_requireRowChangeEvent : System.EventArgs {
            
            private competency_st_requireRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public competency_st_requireRowChangeEvent(competency_st_requireRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public competency_st_requireRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtpropertiesRowChangeEvent : System.EventArgs {
            
            private dtpropertiesRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtpropertiesRowChangeEvent(dtpropertiesRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtpropertiesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class evaluationRowChangeEvent : System.EventArgs {
            
            private evaluationRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluationRowChangeEvent(evaluationRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class evaluation_detailRowChangeEvent : System.EventArgs {
            
            private evaluation_detailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_detailRowChangeEvent(evaluation_detailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_detailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class evaluation_indexRowChangeEvent : System.EventArgs {
            
            private evaluation_indexRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_indexRowChangeEvent(evaluation_indexRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public evaluation_indexRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class kpiRowChangeEvent : System.EventArgs {
            
            private kpiRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public kpiRowChangeEvent(kpiRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public kpiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_authorityRowChangeEvent : System.EventArgs {
            
            private masterdata_authorityRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_authorityRowChangeEvent(masterdata_authorityRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_authorityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_competency_coreRowChangeEvent : System.EventArgs {
            
            private masterdata_competency_coreRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_coreRowChangeEvent(masterdata_competency_coreRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_coreRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_competency_stRowChangeEvent : System.EventArgs {
            
            private masterdata_competency_stRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_stRowChangeEvent(masterdata_competency_stRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_stRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_competency_st_groupRowChangeEvent : System.EventArgs {
            
            private masterdata_competency_st_groupRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_groupRowChangeEvent(masterdata_competency_st_groupRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_groupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_competency_st_group_detailRowChangeEvent : System.EventArgs {
            
            private masterdata_competency_st_group_detailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_group_detailRowChangeEvent(masterdata_competency_st_group_detailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_competency_st_group_detailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_eva_relationRowChangeEvent : System.EventArgs {
            
            private masterdata_eva_relationRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_eva_relationRowChangeEvent(masterdata_eva_relationRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_eva_relationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_menuauthorityRowChangeEvent : System.EventArgs {
            
            private masterdata_menuauthorityRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthorityRowChangeEvent(masterdata_menuauthorityRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthorityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_menuauthority_groupRowChangeEvent : System.EventArgs {
            
            private masterdata_menuauthority_groupRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_groupRowChangeEvent(masterdata_menuauthority_groupRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_groupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_menuauthority_group_detailRowChangeEvent : System.EventArgs {
            
            private masterdata_menuauthority_group_detailRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_group_detailRowChangeEvent(masterdata_menuauthority_group_detailRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_menuauthority_group_detailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class masterdata_refRowChangeEvent : System.EventArgs {
            
            private masterdata_refRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_refRowChangeEvent(masterdata_refRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public masterdata_refRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_activityRowChangeEvent : System.EventArgs {
            
            private staff_activityRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityRowChangeEvent(staff_activityRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_activity_imageRowChangeEvent : System.EventArgs {
            
            private staff_activity_imageRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_imageRowChangeEvent(staff_activity_imageRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_imageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_activity_tempRowChangeEvent : System.EventArgs {
            
            private staff_activity_tempRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_tempRowChangeEvent(staff_activity_tempRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_tempRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_activity_videoRowChangeEvent : System.EventArgs {
            
            private staff_activity_videoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_videoRowChangeEvent(staff_activity_videoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_activity_videoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_addressRowChangeEvent : System.EventArgs {
            
            private staff_addressRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_addressRowChangeEvent(staff_addressRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_addressRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_ailmentRowChangeEvent : System.EventArgs {
            
            private staff_ailmentRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ailmentRowChangeEvent(staff_ailmentRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ailmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_assessmentRowChangeEvent : System.EventArgs {
            
            private staff_assessmentRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_assessmentRowChangeEvent(staff_assessmentRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_assessmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_competency_coreRowChangeEvent : System.EventArgs {
            
            private staff_competency_coreRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_coreRowChangeEvent(staff_competency_coreRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_coreRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_competency_structuralRowChangeEvent : System.EventArgs {
            
            private staff_competency_structuralRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_structuralRowChangeEvent(staff_competency_structuralRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_competency_structuralRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_educationRowChangeEvent : System.EventArgs {
            
            private staff_educationRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_educationRowChangeEvent(staff_educationRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_educationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_familyRowChangeEvent : System.EventArgs {
            
            private staff_familyRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_familyRowChangeEvent(staff_familyRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_familyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_healhistoryRowChangeEvent : System.EventArgs {
            
            private staff_healhistoryRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_healhistoryRowChangeEvent(staff_healhistoryRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_healhistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_hipotRowChangeEvent : System.EventArgs {
            
            private staff_hipotRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_hipotRowChangeEvent(staff_hipotRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_hipotRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_indexRowChangeEvent : System.EventArgs {
            
            private staff_indexRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRowChangeEvent(staff_indexRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_indexRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_infoRowChangeEvent : System.EventArgs {
            
            private staff_infoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_infoRowChangeEvent(staff_infoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_infoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_nonworkingRowChangeEvent : System.EventArgs {
            
            private staff_nonworkingRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_nonworkingRowChangeEvent(staff_nonworkingRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_nonworkingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_ocRowChangeEvent : System.EventArgs {
            
            private staff_ocRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ocRowChangeEvent(staff_ocRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_ocRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_occupationRowChangeEvent : System.EventArgs {
            
            private staff_occupationRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupationRowChangeEvent(staff_occupationRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_occupation_historyRowChangeEvent : System.EventArgs {
            
            private staff_occupation_historyRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupation_historyRowChangeEvent(staff_occupation_historyRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_occupation_historyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_status_controlRowChangeEvent : System.EventArgs {
            
            private staff_status_controlRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_status_controlRowChangeEvent(staff_status_controlRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_status_controlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_successRowChangeEvent : System.EventArgs {
            
            private staff_successRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_successRowChangeEvent(staff_successRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_successRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class staff_trainingRowChangeEvent : System.EventArgs {
            
            private staff_trainingRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_trainingRowChangeEvent(staff_trainingRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public staff_trainingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sys_companyRowChangeEvent : System.EventArgs {
            
            private sys_companyRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_companyRowChangeEvent(sys_companyRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_companyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sys_departmentRowChangeEvent : System.EventArgs {
            
            private sys_departmentRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_departmentRowChangeEvent(sys_departmentRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_departmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sys_menuauthorityRowChangeEvent : System.EventArgs {
            
            private sys_menuauthorityRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_menuauthorityRowChangeEvent(sys_menuauthorityRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_menuauthorityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sys_positionRowChangeEvent : System.EventArgs {
            
            private sys_positionRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_positionRowChangeEvent(sys_positionRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sys_positionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class temp_uname11RowChangeEvent : System.EventArgs {
            
            private temp_uname11Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname11RowChangeEvent(temp_uname11Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname11Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class temp_uname12RowChangeEvent : System.EventArgs {
            
            private temp_uname12Row eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname12RowChangeEvent(temp_uname12Row row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public temp_uname12Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tempTSHRowChangeEvent : System.EventArgs {
            
            private tempTSHRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tempTSHRowChangeEvent(tempTSHRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tempTSHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ThaHr30.netconceptDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_company_avgTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_company_avgTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_company_avg";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("company_id", "company_id");
            tableMapping.ColumnMappings.Add("big_issue", "big_issue");
            tableMapping.ColumnMappings.Add("small_issue", "small_issue");
            tableMapping.ColumnMappings.Add("company_avg", "company_avg");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_company_avg] WHERE (([id] = @Original_id) AND ((@IsNull_company_id = 1 AND [company_id] IS NULL) OR ([company_id] = @Original_company_id)) AND ((@IsNull_big_issue = 1 AND [big_issue] IS NULL) OR ([big_issue] = @Original_big_issue)) AND ((@IsNull_small_issue = 1 AND [small_issue] IS NULL) OR ([small_issue] = @Original_small_issue)) AND ((@IsNull_company_avg = 1 AND [company_avg] IS NULL) OR ([company_avg] = @Original_company_avg)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_big_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_small_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_avg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_avg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_avg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049_company_avg] ([company_id], [big_issue], [small_issue], [company_avg]) VALUES (@company_id, @big_issue, @small_issue, @company_avg);
SELECT id, company_id, big_issue, small_issue, company_avg FROM [36049_company_avg] WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_avg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_company_avg] SET [company_id] = @company_id, [big_issue] = @big_issue, [small_issue] = @small_issue, [company_avg] = @company_avg WHERE (([id] = @Original_id) AND ((@IsNull_company_id = 1 AND [company_id] IS NULL) OR ([company_id] = @Original_company_id)) AND ((@IsNull_big_issue = 1 AND [big_issue] IS NULL) OR ([big_issue] = @Original_big_issue)) AND ((@IsNull_small_issue = 1 AND [small_issue] IS NULL) OR ([small_issue] = @Original_small_issue)) AND ((@IsNull_company_avg = 1 AND [company_avg] IS NULL) OR ([company_avg] = @Original_company_avg)));
SELECT id, company_id, big_issue, small_issue, company_avg FROM [36049_company_avg] WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_avg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_big_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_small_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_avg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_avg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_avg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, company_id, big_issue, small_issue, company_avg FROM dbo.[36049_compan" +
                "y_avg]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_company_avgDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_company_avgDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_company_avgDataTable dataTable = new netconceptDataSet._36049_company_avgDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_company_avgDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_company_avg");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_company_id, string Original_big_issue, string Original_small_issue, string Original_company_avg) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_company_id == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_company_id));
            }
            if ((Original_big_issue == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_big_issue));
            }
            if ((Original_small_issue == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_small_issue));
            }
            if ((Original_company_avg == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_company_avg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string company_id, string big_issue, string small_issue, string company_avg) {
            if ((company_id == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(company_id));
            }
            if ((big_issue == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(big_issue));
            }
            if ((small_issue == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(small_issue));
            }
            if ((company_avg == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(company_avg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string company_id, string big_issue, string small_issue, string company_avg, int Original_id, string Original_company_id, string Original_big_issue, string Original_small_issue, string Original_company_avg, int id) {
            if ((company_id == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(company_id));
            }
            if ((big_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(big_issue));
            }
            if ((small_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(small_issue));
            }
            if ((company_avg == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(company_avg));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_id));
            if ((Original_company_id == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_company_id));
            }
            if ((Original_big_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_big_issue));
            }
            if ((Original_small_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_small_issue));
            }
            if ((Original_company_avg == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_company_avg));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_evaluationTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_evaluationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_evaluation";
            tableMapping.ColumnMappings.Add("evaluation_id", "evaluation_id");
            tableMapping.ColumnMappings.Add("evaluation_no", "evaluation_no");
            tableMapping.ColumnMappings.Add("uname_eva", "uname_eva");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("staff_eva_relation", "staff_eva_relation");
            tableMapping.ColumnMappings.Add("staff_id_totalscore", "staff_id_totalscore");
            tableMapping.ColumnMappings.Add("savedate", "savedate");
            tableMapping.ColumnMappings.Add("submitdate", "submitdate");
            tableMapping.ColumnMappings.Add("submit_status", "submit_status");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_evaluation] WHERE (([evaluation_id] = @Original_evaluation_id) AND ((@IsNull_evaluation_no = 1 AND [evaluation_no] IS NULL) OR ([evaluation_no] = @Original_evaluation_no)) AND ((@IsNull_uname_eva = 1 AND [uname_eva] IS NULL) OR ([uname_eva] = @Original_uname_eva)) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_eva_relation = 1 AND [staff_eva_relation] IS NULL) OR ([staff_eva_relation] = @Original_staff_eva_relation)) AND ((@IsNull_staff_id_totalscore = 1 AND [staff_id_totalscore] IS NULL) OR ([staff_id_totalscore] = @Original_staff_id_totalscore)) AND ((@IsNull_savedate = 1 AND [savedate] IS NULL) OR ([savedate] = @Original_savedate)) AND ((@IsNull_submitdate = 1 AND [submitdate] IS NULL) OR ([submitdate] = @Original_submitdate)) AND ((@IsNull_submit_status = 1 AND [submit_status] IS NULL) OR ([submit_status] = @Original_submit_status)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname_eva", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname_eva", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_eva_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_id_totalscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id_totalscore", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_id_totalscore", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 2, "staff_id_totalscore", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_savedate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_savedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_submitdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_submitdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_submit_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_submit_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049_evaluation] ([evaluation_no], [uname_eva], [uname], [staff_eva_relation], [staff_id_totalscore], [savedate], [submitdate], [submit_status]) VALUES (@evaluation_no, @uname_eva, @uname, @staff_eva_relation, @staff_id_totalscore, @savedate, @submitdate, @submit_status);
SELECT evaluation_id, evaluation_no, uname_eva, uname, staff_eva_relation, staff_id_totalscore, savedate, submitdate, submit_status FROM [36049_evaluation] WHERE (evaluation_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname_eva", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_eva_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_id_totalscore", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 2, "staff_id_totalscore", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@savedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@submitdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@submit_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_evaluation] SET [evaluation_no] = @evaluation_no, [uname_eva] = @uname_eva, [uname] = @uname, [staff_eva_relation] = @staff_eva_relation, [staff_id_totalscore] = @staff_id_totalscore, [savedate] = @savedate, [submitdate] = @submitdate, [submit_status] = @submit_status WHERE (([evaluation_id] = @Original_evaluation_id) AND ((@IsNull_evaluation_no = 1 AND [evaluation_no] IS NULL) OR ([evaluation_no] = @Original_evaluation_no)) AND ((@IsNull_uname_eva = 1 AND [uname_eva] IS NULL) OR ([uname_eva] = @Original_uname_eva)) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_eva_relation = 1 AND [staff_eva_relation] IS NULL) OR ([staff_eva_relation] = @Original_staff_eva_relation)) AND ((@IsNull_staff_id_totalscore = 1 AND [staff_id_totalscore] IS NULL) OR ([staff_id_totalscore] = @Original_staff_id_totalscore)) AND ((@IsNull_savedate = 1 AND [savedate] IS NULL) OR ([savedate] = @Original_savedate)) AND ((@IsNull_submitdate = 1 AND [submitdate] IS NULL) OR ([submitdate] = @Original_submitdate)) AND ((@IsNull_submit_status = 1 AND [submit_status] IS NULL) OR ([submit_status] = @Original_submit_status)));
SELECT evaluation_id, evaluation_no, uname_eva, uname, staff_eva_relation, staff_id_totalscore, savedate, submitdate, submit_status FROM [36049_evaluation] WHERE (evaluation_id = @evaluation_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname_eva", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_eva_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_id_totalscore", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 2, "staff_id_totalscore", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@savedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@submitdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@submit_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname_eva", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname_eva", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_eva_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_id_totalscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id_totalscore", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_id_totalscore", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 2, "staff_id_totalscore", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_savedate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_savedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_submitdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_submitdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_submit_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_submit_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT evaluation_id, evaluation_no, uname_eva, uname, staff_eva_relation, staff_" +
                "id_totalscore, savedate, submitdate, submit_status FROM dbo.[36049_evaluation]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_evaluationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_evaluationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_evaluationDataTable dataTable = new netconceptDataSet._36049_evaluationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_evaluationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_evaluation");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_evaluation_id, System.Nullable<int> Original_evaluation_no, string Original_uname_eva, string Original_uname, string Original_staff_eva_relation, System.Nullable<decimal> Original_staff_id_totalscore, System.Nullable<System.DateTime> Original_savedate, System.Nullable<System.DateTime> Original_submitdate, System.Nullable<bool> Original_submit_status) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_evaluation_id));
            if ((Original_evaluation_no.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_evaluation_no.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_uname_eva == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_uname_eva));
            }
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_uname));
            }
            if ((Original_staff_eva_relation == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_staff_eva_relation));
            }
            if ((Original_staff_id_totalscore.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_staff_id_totalscore.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_savedate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_savedate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_submitdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_submitdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_submit_status.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_submit_status.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> evaluation_no, string uname_eva, string uname, string staff_eva_relation, System.Nullable<decimal> staff_id_totalscore, System.Nullable<System.DateTime> savedate, System.Nullable<System.DateTime> submitdate, System.Nullable<bool> submit_status) {
            if ((evaluation_no.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(evaluation_no.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((uname_eva == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname_eva));
            }
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(uname));
            }
            if ((staff_eva_relation == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(staff_eva_relation));
            }
            if ((staff_id_totalscore.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(staff_id_totalscore.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((savedate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(savedate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((submitdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(submitdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((submit_status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(submit_status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<int> evaluation_no, 
                    string uname_eva, 
                    string uname, 
                    string staff_eva_relation, 
                    System.Nullable<decimal> staff_id_totalscore, 
                    System.Nullable<System.DateTime> savedate, 
                    System.Nullable<System.DateTime> submitdate, 
                    System.Nullable<bool> submit_status, 
                    int Original_evaluation_id, 
                    System.Nullable<int> Original_evaluation_no, 
                    string Original_uname_eva, 
                    string Original_uname, 
                    string Original_staff_eva_relation, 
                    System.Nullable<decimal> Original_staff_id_totalscore, 
                    System.Nullable<System.DateTime> Original_savedate, 
                    System.Nullable<System.DateTime> Original_submitdate, 
                    System.Nullable<bool> Original_submit_status, 
                    int evaluation_id) {
            if ((evaluation_no.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(evaluation_no.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((uname_eva == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname_eva));
            }
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(uname));
            }
            if ((staff_eva_relation == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(staff_eva_relation));
            }
            if ((staff_id_totalscore.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(staff_id_totalscore.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((savedate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(savedate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((submitdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(submitdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((submit_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(submit_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_evaluation_id));
            if ((Original_evaluation_no.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_evaluation_no.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_uname_eva == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_uname_eva));
            }
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_uname));
            }
            if ((Original_staff_eva_relation == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_staff_eva_relation));
            }
            if ((Original_staff_id_totalscore.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_staff_id_totalscore.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_savedate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_savedate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_submitdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_submitdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_submit_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Original_submit_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(evaluation_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_evaluation_detailTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_evaluation_detailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_evaluation_detail";
            tableMapping.ColumnMappings.Add("evaluation_detail_id", "evaluation_detail_id");
            tableMapping.ColumnMappings.Add("evaluation_id", "evaluation_id");
            tableMapping.ColumnMappings.Add("evaluation_subject_id", "evaluation_subject_id");
            tableMapping.ColumnMappings.Add("evaluation_sub_subject_id", "evaluation_sub_subject_id");
            tableMapping.ColumnMappings.Add("evaluation_score", "evaluation_score");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_evaluation_detail] WHERE (([evaluation_detail_id] = @Original_evaluation_detail_id) AND ((@IsNull_evaluation_id = 1 AND [evaluation_id] IS NULL) OR ([evaluation_id] = @Original_evaluation_id)) AND ((@IsNull_evaluation_subject_id = 1 AND [evaluation_subject_id] IS NULL) OR ([evaluation_subject_id] = @Original_evaluation_subject_id)) AND ((@IsNull_evaluation_sub_subject_id = 1 AND [evaluation_sub_subject_id] IS NULL) OR ([evaluation_sub_subject_id] = @Original_evaluation_sub_subject_id)) AND ((@IsNull_evaluation_score = 1 AND [evaluation_score] IS NULL) OR ([evaluation_score] = @Original_evaluation_score)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_detail_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_detail_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_subject_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_sub_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_sub_subject_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_sub_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_sub_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_score", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 2, "evaluation_score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049_evaluation_detail] ([evaluation_id], [evaluation_subject_id], [evaluation_sub_subject_id], [evaluation_score]) VALUES (@evaluation_id, @evaluation_subject_id, @evaluation_sub_subject_id, @evaluation_score);
SELECT evaluation_detail_id, evaluation_id, evaluation_subject_id, evaluation_sub_subject_id, evaluation_score FROM [36049_evaluation_detail] WHERE (evaluation_detail_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_sub_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_sub_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_score", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 2, "evaluation_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_evaluation_detail] SET [evaluation_id] = @evaluation_id, [evaluation_subject_id] = @evaluation_subject_id, [evaluation_sub_subject_id] = @evaluation_sub_subject_id, [evaluation_score] = @evaluation_score WHERE (([evaluation_detail_id] = @Original_evaluation_detail_id) AND ((@IsNull_evaluation_id = 1 AND [evaluation_id] IS NULL) OR ([evaluation_id] = @Original_evaluation_id)) AND ((@IsNull_evaluation_subject_id = 1 AND [evaluation_subject_id] IS NULL) OR ([evaluation_subject_id] = @Original_evaluation_subject_id)) AND ((@IsNull_evaluation_sub_subject_id = 1 AND [evaluation_sub_subject_id] IS NULL) OR ([evaluation_sub_subject_id] = @Original_evaluation_sub_subject_id)) AND ((@IsNull_evaluation_score = 1 AND [evaluation_score] IS NULL) OR ([evaluation_score] = @Original_evaluation_score)));
SELECT evaluation_detail_id, evaluation_id, evaluation_subject_id, evaluation_sub_subject_id, evaluation_score FROM [36049_evaluation_detail] WHERE (evaluation_detail_id = @evaluation_detail_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_sub_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_sub_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_score", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 2, "evaluation_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_detail_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_detail_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_subject_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_sub_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_sub_subject_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_sub_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_sub_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_score", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 2, "evaluation_score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_detail_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "evaluation_detail_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT evaluation_detail_id, evaluation_id, evaluation_subject_id, evaluation_sub" +
                "_subject_id, evaluation_score FROM dbo.[36049_evaluation_detail]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_evaluation_detailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_evaluation_detailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_evaluation_detailDataTable dataTable = new netconceptDataSet._36049_evaluation_detailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_evaluation_detailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_evaluation_detail");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_evaluation_detail_id, System.Nullable<int> Original_evaluation_id, System.Nullable<int> Original_evaluation_subject_id, System.Nullable<int> Original_evaluation_sub_subject_id, System.Nullable<decimal> Original_evaluation_score) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_evaluation_detail_id));
            if ((Original_evaluation_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_evaluation_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_evaluation_subject_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_evaluation_subject_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_evaluation_sub_subject_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_evaluation_sub_subject_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_evaluation_score.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_evaluation_score.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> evaluation_id, System.Nullable<int> evaluation_subject_id, System.Nullable<int> evaluation_sub_subject_id, System.Nullable<decimal> evaluation_score) {
            if ((evaluation_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(evaluation_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((evaluation_subject_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(evaluation_subject_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((evaluation_sub_subject_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(evaluation_sub_subject_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((evaluation_score.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(evaluation_score.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> evaluation_id, System.Nullable<int> evaluation_subject_id, System.Nullable<int> evaluation_sub_subject_id, System.Nullable<decimal> evaluation_score, int Original_evaluation_detail_id, System.Nullable<int> Original_evaluation_id, System.Nullable<int> Original_evaluation_subject_id, System.Nullable<int> Original_evaluation_sub_subject_id, System.Nullable<decimal> Original_evaluation_score, int evaluation_detail_id) {
            if ((evaluation_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(evaluation_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((evaluation_subject_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(evaluation_subject_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((evaluation_sub_subject_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(evaluation_sub_subject_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((evaluation_score.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(evaluation_score.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_evaluation_detail_id));
            if ((Original_evaluation_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_evaluation_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_evaluation_subject_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_evaluation_subject_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_evaluation_sub_subject_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_evaluation_sub_subject_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_evaluation_score.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_evaluation_score.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(evaluation_detail_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_generate_scoreTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_generate_scoreTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_generate_score";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("gen_date", "gen_date");
            tableMapping.ColumnMappings.Add("gen_by", "gen_by");
            tableMapping.ColumnMappings.Add("gen_type", "gen_type");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_generate_score] WHERE (([id] = @Original_id) AND ((@IsNull_gen_date = 1 AND [gen_date] IS NULL) OR ([gen_date] = @Original_gen_date)) AND ((@IsNull_gen_by = 1 AND [gen_by] IS NULL) OR ([gen_by] = @Original_gen_by)) AND ((@IsNull_gen_type = 1 AND [gen_type] IS NULL) OR ([gen_type] = @Original_gen_type)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_gen_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_gen_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_gen_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_by", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_gen_by", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_by", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_gen_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_gen_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[36049_generate_score] ([gen_date], [gen_by], [gen_type]) VALUE" +
                "S (@gen_date, @gen_by, @gen_type);\r\nSELECT id, gen_date, gen_by, gen_type FROM [" +
                "36049_generate_score] WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@gen_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@gen_by", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_by", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@gen_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_generate_score] SET [gen_date] = @gen_date, [gen_by] = @gen_by, [gen_type] = @gen_type WHERE (([id] = @Original_id) AND ((@IsNull_gen_date = 1 AND [gen_date] IS NULL) OR ([gen_date] = @Original_gen_date)) AND ((@IsNull_gen_by = 1 AND [gen_by] IS NULL) OR ([gen_by] = @Original_gen_by)) AND ((@IsNull_gen_type = 1 AND [gen_type] IS NULL) OR ([gen_type] = @Original_gen_type)));
SELECT id, gen_date, gen_by, gen_type FROM [36049_generate_score] WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@gen_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@gen_by", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_by", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@gen_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_gen_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_gen_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_gen_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_by", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_gen_by", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_by", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_gen_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_gen_type", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "gen_type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, gen_date, gen_by, gen_type FROM dbo.[36049_generate_score]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_generate_scoreDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_generate_scoreDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_generate_scoreDataTable dataTable = new netconceptDataSet._36049_generate_scoreDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_generate_scoreDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_generate_score");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, System.Nullable<System.DateTime> Original_gen_date, string Original_gen_by, string Original_gen_type) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_gen_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_gen_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_gen_by == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_gen_by));
            }
            if ((Original_gen_type == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_gen_type));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<System.DateTime> gen_date, string gen_by, string gen_type) {
            if ((gen_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(gen_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((gen_by == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(gen_by));
            }
            if ((gen_type == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(gen_type));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<System.DateTime> gen_date, string gen_by, string gen_type, int Original_id, System.Nullable<System.DateTime> Original_gen_date, string Original_gen_by, string Original_gen_type, int id) {
            if ((gen_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(gen_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((gen_by == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(gen_by));
            }
            if ((gen_type == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(gen_type));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_id));
            if ((Original_gen_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_gen_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_gen_by == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_gen_by));
            }
            if ((Original_gen_type == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_gen_type));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_group_avgTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_group_avgTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_group_avg";
            tableMapping.ColumnMappings.Add("big_issue", "big_issue");
            tableMapping.ColumnMappings.Add("small_issue", "small_issue");
            tableMapping.ColumnMappings.Add("group_avg", "group_avg");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[36049_group_avg] ([big_issue], [small_issue], [group_avg]) VAL" +
                "UES (@big_issue, @small_issue, @group_avg)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@group_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "group_avg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT big_issue, small_issue, group_avg FROM dbo.[36049_group_avg]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_group_avgDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_group_avgDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_group_avgDataTable dataTable = new netconceptDataSet._36049_group_avgDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_group_avgDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_group_avg");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string big_issue, string small_issue, string group_avg) {
            if ((big_issue == null)) {
                throw new System.ArgumentNullException("big_issue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(big_issue));
            }
            if ((small_issue == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(small_issue));
            }
            if ((group_avg == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(group_avg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_menuauthorityTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_menuauthorityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_menuauthority";
            tableMapping.ColumnMappings.Add("menuauthority_id", "menuauthority_id");
            tableMapping.ColumnMappings.Add("menuauthority_root", "menuauthority_root");
            tableMapping.ColumnMappings.Add("menuauthority_name", "menuauthority_name");
            tableMapping.ColumnMappings.Add("menuauthority_desc", "menuauthority_desc");
            tableMapping.ColumnMappings.Add("webpage", "webpage");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_menuauthority] WHERE (([menuauthority_id] = @Original_menuauthority_id) AND ((@IsNull_menuauthority_root = 1 AND [menuauthority_root] IS NULL) OR ([menuauthority_root] = @Original_menuauthority_root)) AND ((@IsNull_menuauthority_name = 1 AND [menuauthority_name] IS NULL) OR ([menuauthority_name] = @Original_menuauthority_name)) AND ((@IsNull_menuauthority_desc = 1 AND [menuauthority_desc] IS NULL) OR ([menuauthority_desc] = @Original_menuauthority_desc)) AND ((@IsNull_webpage = 1 AND [webpage] IS NULL) OR ([webpage] = @Original_webpage)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_root", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_root", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_webpage", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "webpage", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_webpage", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "webpage", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049_menuauthority] ([menuauthority_id], [menuauthority_root], [menuauthority_name], [menuauthority_desc], [webpage]) VALUES (@menuauthority_id, @menuauthority_root, @menuauthority_name, @menuauthority_desc, @webpage);
SELECT menuauthority_id, menuauthority_root, menuauthority_name, menuauthority_desc, webpage FROM [36049_menuauthority] WHERE (menuauthority_id = @menuauthority_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_root", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@webpage", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "webpage", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_menuauthority] SET [menuauthority_id] = @menuauthority_id, [menuauthority_root] = @menuauthority_root, [menuauthority_name] = @menuauthority_name, [menuauthority_desc] = @menuauthority_desc, [webpage] = @webpage WHERE (([menuauthority_id] = @Original_menuauthority_id) AND ((@IsNull_menuauthority_root = 1 AND [menuauthority_root] IS NULL) OR ([menuauthority_root] = @Original_menuauthority_root)) AND ((@IsNull_menuauthority_name = 1 AND [menuauthority_name] IS NULL) OR ([menuauthority_name] = @Original_menuauthority_name)) AND ((@IsNull_menuauthority_desc = 1 AND [menuauthority_desc] IS NULL) OR ([menuauthority_desc] = @Original_menuauthority_desc)) AND ((@IsNull_webpage = 1 AND [webpage] IS NULL) OR ([webpage] = @Original_webpage)));
SELECT menuauthority_id, menuauthority_root, menuauthority_name, menuauthority_desc, webpage FROM [36049_menuauthority] WHERE (menuauthority_id = @menuauthority_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_root", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@webpage", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "webpage", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_root", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_root", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_webpage", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "webpage", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_webpage", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "webpage", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT menuauthority_id, menuauthority_root, menuauthority_name, menuauthority_de" +
                "sc, webpage FROM dbo.[36049_menuauthority]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_menuauthorityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_menuauthorityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_menuauthorityDataTable dataTable = new netconceptDataSet._36049_menuauthorityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_menuauthorityDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_menuauthority");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_menuauthority_id, string Original_menuauthority_root, string Original_menuauthority_name, string Original_menuauthority_desc, string Original_webpage) {
            if ((Original_menuauthority_id == null)) {
                throw new System.ArgumentNullException("Original_menuauthority_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_menuauthority_id));
            }
            if ((Original_menuauthority_root == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_menuauthority_root));
            }
            if ((Original_menuauthority_name == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_menuauthority_name));
            }
            if ((Original_menuauthority_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_menuauthority_desc));
            }
            if ((Original_webpage == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_webpage));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string menuauthority_id, string menuauthority_root, string menuauthority_name, string menuauthority_desc, string webpage) {
            if ((menuauthority_id == null)) {
                throw new System.ArgumentNullException("menuauthority_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(menuauthority_id));
            }
            if ((menuauthority_root == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(menuauthority_root));
            }
            if ((menuauthority_name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(menuauthority_name));
            }
            if ((menuauthority_desc == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(menuauthority_desc));
            }
            if ((webpage == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(webpage));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string menuauthority_id, string menuauthority_root, string menuauthority_name, string menuauthority_desc, string webpage, string Original_menuauthority_id, string Original_menuauthority_root, string Original_menuauthority_name, string Original_menuauthority_desc, string Original_webpage) {
            if ((menuauthority_id == null)) {
                throw new System.ArgumentNullException("menuauthority_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(menuauthority_id));
            }
            if ((menuauthority_root == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(menuauthority_root));
            }
            if ((menuauthority_name == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(menuauthority_name));
            }
            if ((menuauthority_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(menuauthority_desc));
            }
            if ((webpage == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(webpage));
            }
            if ((Original_menuauthority_id == null)) {
                throw new System.ArgumentNullException("Original_menuauthority_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_menuauthority_id));
            }
            if ((Original_menuauthority_root == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_menuauthority_root));
            }
            if ((Original_menuauthority_name == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_menuauthority_name));
            }
            if ((Original_menuauthority_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_menuauthority_desc));
            }
            if ((Original_webpage == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_webpage));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_menuauthority_groupTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_menuauthority_groupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_menuauthority_group";
            tableMapping.ColumnMappings.Add("menuauthority_group_id", "menuauthority_group_id");
            tableMapping.ColumnMappings.Add("menuauthority_group_name", "menuauthority_group_name");
            tableMapping.ColumnMappings.Add("menuauthority_group_desc", "menuauthority_group_desc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_menuauthority_group] WHERE (([menuauthority_group_id] = @Original_menuauthority_group_id) AND ((@IsNull_menuauthority_group_name = 1 AND [menuauthority_group_name] IS NULL) OR ([menuauthority_group_name] = @Original_menuauthority_group_name)) AND ((@IsNull_menuauthority_group_desc = 1 AND [menuauthority_group_desc] IS NULL) OR ([menuauthority_group_desc] = @Original_menuauthority_group_desc)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049_menuauthority_group] ([menuauthority_group_id], [menuauthority_group_name], [menuauthority_group_desc]) VALUES (@menuauthority_group_id, @menuauthority_group_name, @menuauthority_group_desc);
SELECT menuauthority_group_id, menuauthority_group_name, menuauthority_group_desc FROM [36049_menuauthority_group] WHERE (menuauthority_group_id = @menuauthority_group_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_menuauthority_group] SET [menuauthority_group_id] = @menuauthority_group_id, [menuauthority_group_name] = @menuauthority_group_name, [menuauthority_group_desc] = @menuauthority_group_desc WHERE (([menuauthority_group_id] = @Original_menuauthority_group_id) AND ((@IsNull_menuauthority_group_name = 1 AND [menuauthority_group_name] IS NULL) OR ([menuauthority_group_name] = @Original_menuauthority_group_name)) AND ((@IsNull_menuauthority_group_desc = 1 AND [menuauthority_group_desc] IS NULL) OR ([menuauthority_group_desc] = @Original_menuauthority_group_desc)));
SELECT menuauthority_group_id, menuauthority_group_name, menuauthority_group_desc FROM [36049_menuauthority_group] WHERE (menuauthority_group_id = @menuauthority_group_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT menuauthority_group_id, menuauthority_group_name, menuauthority_group_desc" +
                " FROM dbo.[36049_menuauthority_group]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_menuauthority_groupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_menuauthority_groupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_menuauthority_groupDataTable dataTable = new netconceptDataSet._36049_menuauthority_groupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_menuauthority_groupDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_menuauthority_group");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_menuauthority_group_id, string Original_menuauthority_group_name, string Original_menuauthority_group_desc) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_menuauthority_group_id));
            if ((Original_menuauthority_group_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_menuauthority_group_name));
            }
            if ((Original_menuauthority_group_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_menuauthority_group_desc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int menuauthority_group_id, string menuauthority_group_name, string menuauthority_group_desc) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(menuauthority_group_id));
            if ((menuauthority_group_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(menuauthority_group_name));
            }
            if ((menuauthority_group_desc == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(menuauthority_group_desc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int menuauthority_group_id, string menuauthority_group_name, string menuauthority_group_desc, int Original_menuauthority_group_id, string Original_menuauthority_group_name, string Original_menuauthority_group_desc) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(menuauthority_group_id));
            if ((menuauthority_group_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(menuauthority_group_name));
            }
            if ((menuauthority_group_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(menuauthority_group_desc));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_menuauthority_group_id));
            if ((Original_menuauthority_group_name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_menuauthority_group_name));
            }
            if ((Original_menuauthority_group_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_menuauthority_group_desc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_menuauthority_group_detailTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_menuauthority_group_detailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_menuauthority_group_detail";
            tableMapping.ColumnMappings.Add("group_detail_id", "group_detail_id");
            tableMapping.ColumnMappings.Add("menuauthority_group_id", "menuauthority_group_id");
            tableMapping.ColumnMappings.Add("menuauthority_id", "menuauthority_id");
            tableMapping.ColumnMappings.Add("fullcontrol", "fullcontrol");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_menuauthority_group_detail] WHERE (([group_detail_id] = @Original_group_detail_id) AND ((@IsNull_menuauthority_group_id = 1 AND [menuauthority_group_id] IS NULL) OR ([menuauthority_group_id] = @Original_menuauthority_group_id)) AND ((@IsNull_menuauthority_id = 1 AND [menuauthority_id] IS NULL) OR ([menuauthority_id] = @Original_menuauthority_id)) AND ([fullcontrol] = @Original_fullcontrol))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_group_detail_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "group_detail_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_fullcontrol", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "fullcontrol", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049_menuauthority_group_detail] ([menuauthority_group_id], [menuauthority_id], [fullcontrol]) VALUES (@menuauthority_group_id, @menuauthority_id, @fullcontrol);
SELECT group_detail_id, menuauthority_group_id, menuauthority_id, fullcontrol FROM [36049_menuauthority_group_detail] WHERE (group_detail_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@fullcontrol", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "fullcontrol", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_menuauthority_group_detail] SET [menuauthority_group_id] = @menuauthority_group_id, [menuauthority_id] = @menuauthority_id, [fullcontrol] = @fullcontrol WHERE (([group_detail_id] = @Original_group_detail_id) AND ((@IsNull_menuauthority_group_id = 1 AND [menuauthority_group_id] IS NULL) OR ([menuauthority_group_id] = @Original_menuauthority_group_id)) AND ((@IsNull_menuauthority_id = 1 AND [menuauthority_id] IS NULL) OR ([menuauthority_id] = @Original_menuauthority_id)) AND ([fullcontrol] = @Original_fullcontrol));
SELECT group_detail_id, menuauthority_group_id, menuauthority_id, fullcontrol FROM [36049_menuauthority_group_detail] WHERE (group_detail_id = @group_detail_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@fullcontrol", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "fullcontrol", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_group_detail_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "group_detail_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_fullcontrol", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "fullcontrol", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@group_detail_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "group_detail_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT group_detail_id, menuauthority_group_id, menuauthority_id, fullcontrol FRO" +
                "M dbo.[36049_menuauthority_group_detail]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_menuauthority_group_detailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_menuauthority_group_detailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_menuauthority_group_detailDataTable dataTable = new netconceptDataSet._36049_menuauthority_group_detailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_menuauthority_group_detailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_menuauthority_group_detail");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_group_detail_id, string Original_menuauthority_group_id, string Original_menuauthority_id, bool Original_fullcontrol) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_group_detail_id));
            if ((Original_menuauthority_group_id == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_menuauthority_group_id));
            }
            if ((Original_menuauthority_id == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_menuauthority_id));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_fullcontrol));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string menuauthority_group_id, string menuauthority_id, bool fullcontrol) {
            if ((menuauthority_group_id == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(menuauthority_group_id));
            }
            if ((menuauthority_id == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(menuauthority_id));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(fullcontrol));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string menuauthority_group_id, string menuauthority_id, bool fullcontrol, int Original_group_detail_id, string Original_menuauthority_group_id, string Original_menuauthority_id, bool Original_fullcontrol, int group_detail_id) {
            if ((menuauthority_group_id == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(menuauthority_group_id));
            }
            if ((menuauthority_id == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(menuauthority_id));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(fullcontrol));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_group_detail_id));
            if ((Original_menuauthority_group_id == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_menuauthority_group_id));
            }
            if ((Original_menuauthority_id == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_menuauthority_id));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_fullcontrol));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(group_detail_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_scoreTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_scoreTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_score";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("big_issue", "big_issue");
            tableMapping.ColumnMappings.Add("sum_score", "sum_score");
            tableMapping.ColumnMappings.Add("avg_score", "avg_score");
            tableMapping.ColumnMappings.Add("percentage", "percentage");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_score] WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_big_issue = 1 AND [big_issue] IS NULL) OR ([big_issue] = @Original_big_issue)) AND ((@IsNull_sum_score = 1 AND [sum_score] IS NULL) OR ([sum_score] = @Original_sum_score)) AND ((@IsNull_avg_score = 1 AND [avg_score] IS NULL) OR ([avg_score] = @Original_avg_score)) AND ((@IsNull_percentage = 1 AND [percentage] IS NULL) OR ([percentage] = @Original_percentage)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_big_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_sum_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sum_score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_sum_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "sum_score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_avg_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "avg_score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_avg_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "avg_score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_percentage", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "percentage", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_percentage", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "percentage", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049_score] ([uname], [big_issue], [sum_score], [avg_score], [percentage]) VALUES (@uname, @big_issue, @sum_score, @avg_score, @percentage);
SELECT id, uname, big_issue, sum_score, avg_score, percentage FROM [36049_score] WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@sum_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "sum_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@avg_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "avg_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@percentage", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "percentage", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_score] SET [uname] = @uname, [big_issue] = @big_issue, [sum_score] = @sum_score, [avg_score] = @avg_score, [percentage] = @percentage WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_big_issue = 1 AND [big_issue] IS NULL) OR ([big_issue] = @Original_big_issue)) AND ((@IsNull_sum_score = 1 AND [sum_score] IS NULL) OR ([sum_score] = @Original_sum_score)) AND ((@IsNull_avg_score = 1 AND [avg_score] IS NULL) OR ([avg_score] = @Original_avg_score)) AND ((@IsNull_percentage = 1 AND [percentage] IS NULL) OR ([percentage] = @Original_percentage)));
SELECT id, uname, big_issue, sum_score, avg_score, percentage FROM [36049_score] WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@sum_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "sum_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@avg_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "avg_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@percentage", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "percentage", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_big_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_sum_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sum_score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_sum_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "sum_score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_avg_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "avg_score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_avg_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "avg_score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_percentage", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "percentage", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_percentage", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "percentage", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, uname, big_issue, sum_score, avg_score, percentage FROM dbo.[36049_sco" +
                "re]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_scoreDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_scoreDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_scoreDataTable dataTable = new netconceptDataSet._36049_scoreDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_scoreDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_score");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_uname, string Original_big_issue, string Original_sum_score, string Original_avg_score, string Original_percentage) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_big_issue == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_big_issue));
            }
            if ((Original_sum_score == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_sum_score));
            }
            if ((Original_avg_score == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_avg_score));
            }
            if ((Original_percentage == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_percentage));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string big_issue, string sum_score, string avg_score, string percentage) {
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((big_issue == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(big_issue));
            }
            if ((sum_score == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(sum_score));
            }
            if ((avg_score == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(avg_score));
            }
            if ((percentage == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(percentage));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uname, string big_issue, string sum_score, string avg_score, string percentage, int Original_id, string Original_uname, string Original_big_issue, string Original_sum_score, string Original_avg_score, string Original_percentage, int id) {
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((big_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(big_issue));
            }
            if ((sum_score == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(sum_score));
            }
            if ((avg_score == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(avg_score));
            }
            if ((percentage == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(percentage));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_uname));
            }
            if ((Original_big_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_big_issue));
            }
            if ((Original_sum_score == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_sum_score));
            }
            if ((Original_avg_score == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_avg_score));
            }
            if ((Original_percentage == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_percentage));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049_score_detailTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049_score_detailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049_score_detail";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("big_issue", "big_issue");
            tableMapping.ColumnMappings.Add("small_issue", "small_issue");
            tableMapping.ColumnMappings.Add("1", "1");
            tableMapping.ColumnMappings.Add("2", "2");
            tableMapping.ColumnMappings.Add("3", "3");
            tableMapping.ColumnMappings.Add("4", "4");
            tableMapping.ColumnMappings.Add("5", "5");
            tableMapping.ColumnMappings.Add("self", "self");
            tableMapping.ColumnMappings.Add("get_score", "get_score");
            tableMapping.ColumnMappings.Add("get_score_avg", "get_score_avg");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049_score_detail] WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_big_issue = 1 AND [big_issue] IS NULL) OR ([big_issue] = @Original_big_issue)) AND ((@IsNull_small_issue = 1 AND [small_issue] IS NULL) OR ([small_issue] = @Original_small_issue)) AND ((@p3 = 1 AND [1] IS NULL) OR ([1] = @p2)) AND ((@p6 = 1 AND [2] IS NULL) OR ([2] = @p5)) AND ((@p9 = 1 AND [3] IS NULL) OR ([3] = @p8)) AND ((@p12 = 1 AND [4] IS NULL) OR ([4] = @p11)) AND ((@p15 = 1 AND [5] IS NULL) OR ([5] = @p14)) AND ((@IsNull_self = 1 AND [self] IS NULL) OR ([self] = @Original_self)) AND ((@IsNull_get_score = 1 AND [get_score] IS NULL) OR ([get_score] = @Original_get_score)) AND ((@IsNull_get_score_avg = 1 AND [get_score_avg] IS NULL) OR ([get_score_avg] = @Original_get_score_avg)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_big_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_small_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p6", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p5", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p9", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p8", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p12", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "4", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p11", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "4", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p15", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "5", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p14", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "5", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_self", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "self", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_self", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "self", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_get_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_get_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_get_score_avg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score_avg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_get_score_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score_avg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049_score_detail] ([uname], [big_issue], [small_issue], [1], [2], [3], [4], [5], [self], [get_score], [get_score_avg]) VALUES (@uname, @big_issue, @small_issue, @p1, @p4, @p7, @p10, @p13, @self, @get_score, @get_score_avg);
SELECT id, uname, big_issue, small_issue, [1], [2], [3], [4], [5], self, get_score, get_score_avg FROM [36049_score_detail] WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p4", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p7", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p10", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "4", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p13", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "5", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@self", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "self", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@get_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@get_score_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score_avg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049_score_detail] SET [uname] = @uname, [big_issue] = @big_issue, [small_issue] = @small_issue, [1] = @p1, [2] = @p4, [3] = @p7, [4] = @p10, [5] = @p13, [self] = @self, [get_score] = @get_score, [get_score_avg] = @get_score_avg WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_big_issue = 1 AND [big_issue] IS NULL) OR ([big_issue] = @Original_big_issue)) AND ((@IsNull_small_issue = 1 AND [small_issue] IS NULL) OR ([small_issue] = @Original_small_issue)) AND ((@p3 = 1 AND [1] IS NULL) OR ([1] = @p2)) AND ((@p6 = 1 AND [2] IS NULL) OR ([2] = @p5)) AND ((@p9 = 1 AND [3] IS NULL) OR ([3] = @p8)) AND ((@p12 = 1 AND [4] IS NULL) OR ([4] = @p11)) AND ((@p15 = 1 AND [5] IS NULL) OR ([5] = @p14)) AND ((@IsNull_self = 1 AND [self] IS NULL) OR ([self] = @Original_self)) AND ((@IsNull_get_score = 1 AND [get_score] IS NULL) OR ([get_score] = @Original_get_score)) AND ((@IsNull_get_score_avg = 1 AND [get_score_avg] IS NULL) OR ([get_score_avg] = @Original_get_score_avg)));
SELECT id, uname, big_issue, small_issue, [1], [2], [3], [4], [5], self, get_score, get_score_avg FROM [36049_score_detail] WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p4", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p7", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p10", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "4", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p13", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "5", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@self", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "self", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@get_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@get_score_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score_avg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_big_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_big_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "big_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_small_issue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_small_issue", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "small_issue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p6", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p5", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p9", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p8", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p12", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "4", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p11", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "4", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p15", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "5", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@p14", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "5", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_self", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "self", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_self", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "self", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_get_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_get_score", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_get_score_avg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score_avg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_get_score_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "get_score_avg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, uname, big_issue, small_issue, [1], [2], [3], [4], [5], self, get_scor" +
                "e, get_score_avg FROM dbo.[36049_score_detail]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049_score_detailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049_score_detailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049_score_detailDataTable dataTable = new netconceptDataSet._36049_score_detailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049_score_detailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049_score_detail");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_uname, string Original_big_issue, string Original_small_issue, string p2, string p5, string p8, string p11, string p14, string Original_self, string Original_get_score, string Original_get_score_avg) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_big_issue == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_big_issue));
            }
            if ((Original_small_issue == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_small_issue));
            }
            if ((p2 == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(p2));
            }
            if ((p5 == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(p5));
            }
            if ((p8 == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(p8));
            }
            if ((p11 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(p11));
            }
            if ((p14 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(p14));
            }
            if ((Original_self == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_self));
            }
            if ((Original_get_score == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_get_score));
            }
            if ((Original_get_score_avg == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_get_score_avg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string big_issue, string small_issue, string p1, string p4, string p7, string p10, string p13, string self, string get_score, string get_score_avg) {
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((big_issue == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(big_issue));
            }
            if ((small_issue == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(small_issue));
            }
            if ((p1 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p1));
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p4));
            }
            if ((p7 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p7));
            }
            if ((p10 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p10));
            }
            if ((p13 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(p13));
            }
            if ((self == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(self));
            }
            if ((get_score == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(get_score));
            }
            if ((get_score_avg == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(get_score_avg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uname, 
                    string big_issue, 
                    string small_issue, 
                    string p1, 
                    string p4, 
                    string p7, 
                    string p10, 
                    string p13, 
                    string self, 
                    string get_score, 
                    string get_score_avg, 
                    int Original_id, 
                    string Original_uname, 
                    string Original_big_issue, 
                    string Original_small_issue, 
                    string p2, 
                    string p5, 
                    string p8, 
                    string p11, 
                    string p14, 
                    string Original_self, 
                    string Original_get_score, 
                    string Original_get_score_avg, 
                    int id) {
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((big_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(big_issue));
            }
            if ((small_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(small_issue));
            }
            if ((p1 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p1));
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(p4));
            }
            if ((p7 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p7));
            }
            if ((p10 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p10));
            }
            if ((p13 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p13));
            }
            if ((self == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(self));
            }
            if ((get_score == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(get_score));
            }
            if ((get_score_avg == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(get_score_avg));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_uname));
            }
            if ((Original_big_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_big_issue));
            }
            if ((Original_small_issue == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_small_issue));
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(p2));
            }
            if ((p5 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(p5));
            }
            if ((p8 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(p8));
            }
            if ((p11 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(p11));
            }
            if ((p14 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(p14));
            }
            if ((Original_self == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_self));
            }
            if ((Original_get_score == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_get_score));
            }
            if ((Original_get_score_avg == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_get_score_avg));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class _36049userTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public _36049userTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "36049user";
            tableMapping.ColumnMappings.Add("uname360", "uname360");
            tableMapping.ColumnMappings.Add("menuauthority_group_id", "menuauthority_group_id");
            tableMapping.ColumnMappings.Add("pwd360", "pwd360");
            tableMapping.ColumnMappings.Add("company_id", "company_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[36049user] WHERE (([uname360] = @Original_uname360) AND ((@IsNull_menuauthority_group_id = 1 AND [menuauthority_group_id] IS NULL) OR ([menuauthority_group_id] = @Original_menuauthority_group_id)) AND ((@IsNull_pwd360 = 1 AND [pwd360] IS NULL) OR ([pwd360] = @Original_pwd360)) AND ((@IsNull_company_id = 1 AND [company_id] IS NULL) OR ([company_id] = @Original_company_id)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname360", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname360", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_pwd360", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd360", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_pwd360", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd360", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[36049user] ([uname360], [menuauthority_group_id], [pwd360], [company_id]) VALUES (@uname360, @menuauthority_group_id, @pwd360, @company_id);
SELECT uname360, menuauthority_group_id, pwd360, company_id FROM [36049user] WHERE (uname360 = @uname360)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname360", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname360", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@pwd360", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd360", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[36049user] SET [uname360] = @uname360, [menuauthority_group_id] = @menuauthority_group_id, [pwd360] = @pwd360, [company_id] = @company_id WHERE (([uname360] = @Original_uname360) AND ((@IsNull_menuauthority_group_id = 1 AND [menuauthority_group_id] IS NULL) OR ([menuauthority_group_id] = @Original_menuauthority_group_id)) AND ((@IsNull_pwd360 = 1 AND [pwd360] IS NULL) OR ([pwd360] = @Original_pwd360)) AND ((@IsNull_company_id = 1 AND [company_id] IS NULL) OR ([company_id] = @Original_company_id)));
SELECT uname360, menuauthority_group_id, pwd360, company_id FROM [36049user] WHERE (uname360 = @uname360)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname360", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname360", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@pwd360", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd360", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname360", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname360", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_pwd360", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd360", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_pwd360", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd360", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uname360, menuauthority_group_id, pwd360, company_id FROM dbo.[36049user]";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet._36049userDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet._36049userDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet._36049userDataTable dataTable = new netconceptDataSet._36049userDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet._36049userDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "36049user");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uname360, System.Nullable<int> Original_menuauthority_group_id, string Original_pwd360, string Original_company_id) {
            if ((Original_uname360 == null)) {
                throw new System.ArgumentNullException("Original_uname360");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uname360));
            }
            if ((Original_menuauthority_group_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_menuauthority_group_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_pwd360 == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_pwd360));
            }
            if ((Original_company_id == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_company_id));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname360, System.Nullable<int> menuauthority_group_id, string pwd360, string company_id) {
            if ((uname360 == null)) {
                throw new System.ArgumentNullException("uname360");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname360));
            }
            if ((menuauthority_group_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(menuauthority_group_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((pwd360 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(pwd360));
            }
            if ((company_id == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(company_id));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uname360, System.Nullable<int> menuauthority_group_id, string pwd360, string company_id, string Original_uname360, System.Nullable<int> Original_menuauthority_group_id, string Original_pwd360, string Original_company_id) {
            if ((uname360 == null)) {
                throw new System.ArgumentNullException("uname360");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname360));
            }
            if ((menuauthority_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(menuauthority_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((pwd360 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(pwd360));
            }
            if ((company_id == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(company_id));
            }
            if ((Original_uname360 == null)) {
                throw new System.ArgumentNullException("Original_uname360");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_uname360));
            }
            if ((Original_menuauthority_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_menuauthority_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_pwd360 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_pwd360));
            }
            if ((Original_company_id == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_company_id));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class competency_st_requireTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public competency_st_requireTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "competency_st_require";
            tableMapping.ColumnMappings.Add("cst_require_id", "cst_require_id");
            tableMapping.ColumnMappings.Add("cst_group_id", "cst_group_id");
            tableMapping.ColumnMappings.Add("cst_subject_id", "cst_subject_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[competency_st_require] WHERE (([cst_require_id] = @Original_cst_require_id) AND ((@IsNull_cst_group_id = 1 AND [cst_group_id] IS NULL) OR ([cst_group_id] = @Original_cst_group_id)) AND ((@IsNull_cst_subject_id = 1 AND [cst_subject_id] IS NULL) OR ([cst_subject_id] = @Original_cst_subject_id)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_require_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_require_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[competency_st_require] ([cst_group_id], [cst_subject_id]) VALU" +
                "ES (@cst_group_id, @cst_subject_id);\r\nSELECT cst_require_id, cst_group_id, cst_s" +
                "ubject_id FROM competency_st_require WHERE (cst_require_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[competency_st_require] SET [cst_group_id] = @cst_group_id, [cst_subject_id] = @cst_subject_id WHERE (([cst_require_id] = @Original_cst_require_id) AND ((@IsNull_cst_group_id = 1 AND [cst_group_id] IS NULL) OR ([cst_group_id] = @Original_cst_group_id)) AND ((@IsNull_cst_subject_id = 1 AND [cst_subject_id] IS NULL) OR ([cst_subject_id] = @Original_cst_subject_id)));
SELECT cst_require_id, cst_group_id, cst_subject_id FROM competency_st_require WHERE (cst_require_id = @cst_require_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_require_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_require_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_require_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "cst_require_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cst_require_id, cst_group_id, cst_subject_id FROM dbo.competency_st_requir" +
                "e";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.competency_st_requireDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.competency_st_requireDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.competency_st_requireDataTable dataTable = new netconceptDataSet.competency_st_requireDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.competency_st_requireDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "competency_st_require");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_cst_require_id, System.Nullable<int> Original_cst_group_id, System.Nullable<int> Original_cst_subject_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_cst_require_id));
            if ((Original_cst_group_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_cst_group_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_cst_subject_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_cst_subject_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> cst_group_id, System.Nullable<int> cst_subject_id) {
            if ((cst_group_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(cst_group_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((cst_subject_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(cst_subject_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> cst_group_id, System.Nullable<int> cst_subject_id, int Original_cst_require_id, System.Nullable<int> Original_cst_group_id, System.Nullable<int> Original_cst_subject_id, int cst_require_id) {
            if ((cst_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(cst_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((cst_subject_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(cst_subject_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_cst_require_id));
            if ((Original_cst_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_cst_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_cst_subject_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_cst_subject_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(cst_require_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtpropertiesTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtpropertiesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtproperties";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("objectid", "objectid");
            tableMapping.ColumnMappings.Add("property", "property");
            tableMapping.ColumnMappings.Add("value", "value");
            tableMapping.ColumnMappings.Add("uvalue", "uvalue");
            tableMapping.ColumnMappings.Add("lvalue", "lvalue");
            tableMapping.ColumnMappings.Add("version", "version");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[dtproperties] WHERE (([id] = @Original_id) AND ((@IsNull_objectid = 1 AND [objectid] IS NULL) OR ([objectid] = @Original_objectid)) AND ([property] = @Original_property) AND ((@IsNull_value = 1 AND [value] IS NULL) OR ([value] = @Original_value)) AND ((@IsNull_uvalue = 1 AND [uvalue] IS NULL) OR ([uvalue] = @Original_uvalue)) AND ([version] = @Original_version))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_objectid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "objectid", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_objectid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "objectid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_property", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "property", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_value", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "value", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_value", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "value", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uvalue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uvalue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uvalue", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uvalue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_version", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "version", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[dtproperties] ([objectid], [property], [value], [uvalue], [lvalue], [version]) VALUES (@objectid, @property, @value, @uvalue, @lvalue, @version);
SELECT id, objectid, property, value, uvalue, lvalue, version FROM dtproperties WHERE (id = SCOPE_IDENTITY()) AND (property = @property)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@objectid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "objectid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@property", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "property", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@value", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "value", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uvalue", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uvalue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@lvalue", System.Data.SqlDbType.Image, 0, System.Data.ParameterDirection.Input, 0, 0, "lvalue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@version", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "version", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[dtproperties] SET [objectid] = @objectid, [property] = @property, [value] = @value, [uvalue] = @uvalue, [lvalue] = @lvalue, [version] = @version WHERE (([id] = @Original_id) AND ((@IsNull_objectid = 1 AND [objectid] IS NULL) OR ([objectid] = @Original_objectid)) AND ([property] = @Original_property) AND ((@IsNull_value = 1 AND [value] IS NULL) OR ([value] = @Original_value)) AND ((@IsNull_uvalue = 1 AND [uvalue] IS NULL) OR ([uvalue] = @Original_uvalue)) AND ([version] = @Original_version));
SELECT id, objectid, property, value, uvalue, lvalue, version FROM dtproperties WHERE (id = @id) AND (property = @property)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@objectid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "objectid", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@property", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "property", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@value", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "value", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uvalue", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uvalue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@lvalue", System.Data.SqlDbType.Image, 0, System.Data.ParameterDirection.Input, 0, 0, "lvalue", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@version", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "version", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_objectid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "objectid", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_objectid", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "objectid", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_property", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "property", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_value", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "value", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_value", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "value", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uvalue", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uvalue", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uvalue", System.Data.SqlDbType.NVarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uvalue", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_version", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "version", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, objectid, property, value, uvalue, lvalue, version FROM dbo.dtproperti" +
                "es";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.dtpropertiesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.dtpropertiesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.dtpropertiesDataTable dataTable = new netconceptDataSet.dtpropertiesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.dtpropertiesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "dtproperties");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, System.Nullable<int> Original_objectid, string Original_property, string Original_value, string Original_uvalue, int Original_version) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_objectid.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_objectid.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_property == null)) {
                throw new System.ArgumentNullException("Original_property");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_property));
            }
            if ((Original_value == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_value));
            }
            if ((Original_uvalue == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_uvalue));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_version));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> objectid, string property, string value, string uvalue, byte[] lvalue, int version) {
            if ((objectid.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(objectid.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((property == null)) {
                throw new System.ArgumentNullException("property");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(property));
            }
            if ((value == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(value));
            }
            if ((uvalue == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(uvalue));
            }
            if ((lvalue == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((byte[])(lvalue));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(version));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> objectid, string property, string value, string uvalue, byte[] lvalue, int version, int Original_id, System.Nullable<int> Original_objectid, string Original_property, string Original_value, string Original_uvalue, int Original_version, int id) {
            if ((objectid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(objectid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((property == null)) {
                throw new System.ArgumentNullException("property");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(property));
            }
            if ((value == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(value));
            }
            if ((uvalue == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(uvalue));
            }
            if ((lvalue == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((byte[])(lvalue));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(version));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_id));
            if ((Original_objectid.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_objectid.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_property == null)) {
                throw new System.ArgumentNullException("Original_property");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_property));
            }
            if ((Original_value == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_value));
            }
            if ((Original_uvalue == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_uvalue));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_version));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class evaluationTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public evaluationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "evaluation";
            tableMapping.ColumnMappings.Add("evaluation_id", "evaluation_id");
            tableMapping.ColumnMappings.Add("evaluation_no", "evaluation_no");
            tableMapping.ColumnMappings.Add("uname_eva", "uname_eva");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("staff_eva_relation", "staff_eva_relation");
            tableMapping.ColumnMappings.Add("staff_id_totalscore", "staff_id_totalscore");
            tableMapping.ColumnMappings.Add("savedate", "savedate");
            tableMapping.ColumnMappings.Add("submitdate", "submitdate");
            tableMapping.ColumnMappings.Add("submit_status", "submit_status");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[evaluation] WHERE (([evaluation_id] = @Original_evaluation_id) AND ((@IsNull_evaluation_no = 1 AND [evaluation_no] IS NULL) OR ([evaluation_no] = @Original_evaluation_no)) AND ((@IsNull_uname_eva = 1 AND [uname_eva] IS NULL) OR ([uname_eva] = @Original_uname_eva)) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_eva_relation = 1 AND [staff_eva_relation] IS NULL) OR ([staff_eva_relation] = @Original_staff_eva_relation)) AND ((@IsNull_staff_id_totalscore = 1 AND [staff_id_totalscore] IS NULL) OR ([staff_id_totalscore] = @Original_staff_id_totalscore)) AND ((@IsNull_savedate = 1 AND [savedate] IS NULL) OR ([savedate] = @Original_savedate)) AND ((@IsNull_submitdate = 1 AND [submitdate] IS NULL) OR ([submitdate] = @Original_submitdate)) AND ((@IsNull_submit_status = 1 AND [submit_status] IS NULL) OR ([submit_status] = @Original_submit_status)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname_eva", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname_eva", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_id_totalscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id_totalscore", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_id_totalscore", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "staff_id_totalscore", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_savedate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_savedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_submitdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_submitdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_submit_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_submit_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[evaluation] ([evaluation_no], [uname_eva], [uname], [staff_eva_relation], [staff_id_totalscore], [savedate], [submitdate], [submit_status]) VALUES (@evaluation_no, @uname_eva, @uname, @staff_eva_relation, @staff_id_totalscore, @savedate, @submitdate, @submit_status);
SELECT evaluation_id, evaluation_no, uname_eva, uname, staff_eva_relation, staff_id_totalscore, savedate, submitdate, submit_status FROM evaluation WHERE (evaluation_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname_eva", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_id_totalscore", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "staff_id_totalscore", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@savedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@submitdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@submit_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[evaluation] SET [evaluation_no] = @evaluation_no, [uname_eva] = @uname_eva, [uname] = @uname, [staff_eva_relation] = @staff_eva_relation, [staff_id_totalscore] = @staff_id_totalscore, [savedate] = @savedate, [submitdate] = @submitdate, [submit_status] = @submit_status WHERE (([evaluation_id] = @Original_evaluation_id) AND ((@IsNull_evaluation_no = 1 AND [evaluation_no] IS NULL) OR ([evaluation_no] = @Original_evaluation_no)) AND ((@IsNull_uname_eva = 1 AND [uname_eva] IS NULL) OR ([uname_eva] = @Original_uname_eva)) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_eva_relation = 1 AND [staff_eva_relation] IS NULL) OR ([staff_eva_relation] = @Original_staff_eva_relation)) AND ((@IsNull_staff_id_totalscore = 1 AND [staff_id_totalscore] IS NULL) OR ([staff_id_totalscore] = @Original_staff_id_totalscore)) AND ((@IsNull_savedate = 1 AND [savedate] IS NULL) OR ([savedate] = @Original_savedate)) AND ((@IsNull_submitdate = 1 AND [submitdate] IS NULL) OR ([submitdate] = @Original_submitdate)) AND ((@IsNull_submit_status = 1 AND [submit_status] IS NULL) OR ([submit_status] = @Original_submit_status)));
SELECT evaluation_id, evaluation_no, uname_eva, uname, staff_eva_relation, staff_id_totalscore, savedate, submitdate, submit_status FROM evaluation WHERE (evaluation_id = @evaluation_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname_eva", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_id_totalscore", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "staff_id_totalscore", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@savedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@submitdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@submit_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname_eva", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname_eva", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname_eva", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_id_totalscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id_totalscore", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_id_totalscore", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "staff_id_totalscore", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_savedate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_savedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "savedate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_submitdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_submitdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "submitdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_submit_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_submit_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "submit_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT evaluation_id, evaluation_no, uname_eva, uname, staff_eva_relation, staff_" +
                "id_totalscore, savedate, submitdate, submit_status FROM dbo.evaluation";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.evaluationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.evaluationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.evaluationDataTable dataTable = new netconceptDataSet.evaluationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.evaluationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "evaluation");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_evaluation_id, System.Nullable<int> Original_evaluation_no, string Original_uname_eva, string Original_uname, System.Nullable<int> Original_staff_eva_relation, System.Nullable<decimal> Original_staff_id_totalscore, System.Nullable<System.DateTime> Original_savedate, System.Nullable<System.DateTime> Original_submitdate, System.Nullable<bool> Original_submit_status) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_evaluation_id));
            if ((Original_evaluation_no.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_evaluation_no.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_uname_eva == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_uname_eva));
            }
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_uname));
            }
            if ((Original_staff_eva_relation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_staff_eva_relation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_staff_id_totalscore.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_staff_id_totalscore.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_savedate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_savedate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_submitdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_submitdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_submit_status.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_submit_status.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> evaluation_no, string uname_eva, string uname, System.Nullable<int> staff_eva_relation, System.Nullable<decimal> staff_id_totalscore, System.Nullable<System.DateTime> savedate, System.Nullable<System.DateTime> submitdate, System.Nullable<bool> submit_status) {
            if ((evaluation_no.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(evaluation_no.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((uname_eva == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname_eva));
            }
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(uname));
            }
            if ((staff_eva_relation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(staff_eva_relation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((staff_id_totalscore.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(staff_id_totalscore.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((savedate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(savedate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((submitdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(submitdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((submit_status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(submit_status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Nullable<int> evaluation_no, 
                    string uname_eva, 
                    string uname, 
                    System.Nullable<int> staff_eva_relation, 
                    System.Nullable<decimal> staff_id_totalscore, 
                    System.Nullable<System.DateTime> savedate, 
                    System.Nullable<System.DateTime> submitdate, 
                    System.Nullable<bool> submit_status, 
                    int Original_evaluation_id, 
                    System.Nullable<int> Original_evaluation_no, 
                    string Original_uname_eva, 
                    string Original_uname, 
                    System.Nullable<int> Original_staff_eva_relation, 
                    System.Nullable<decimal> Original_staff_id_totalscore, 
                    System.Nullable<System.DateTime> Original_savedate, 
                    System.Nullable<System.DateTime> Original_submitdate, 
                    System.Nullable<bool> Original_submit_status, 
                    int evaluation_id) {
            if ((evaluation_no.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(evaluation_no.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((uname_eva == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname_eva));
            }
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(uname));
            }
            if ((staff_eva_relation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(staff_eva_relation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((staff_id_totalscore.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(staff_id_totalscore.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((savedate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(savedate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((submitdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(submitdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((submit_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(submit_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_evaluation_id));
            if ((Original_evaluation_no.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_evaluation_no.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_uname_eva == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_uname_eva));
            }
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_uname));
            }
            if ((Original_staff_eva_relation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_staff_eva_relation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_staff_id_totalscore.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_staff_id_totalscore.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_savedate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_savedate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_submitdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_submitdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_submit_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Original_submit_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(evaluation_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class evaluation_detailTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public evaluation_detailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "evaluation_detail";
            tableMapping.ColumnMappings.Add("evaluation_detail_id", "evaluation_detail_id");
            tableMapping.ColumnMappings.Add("evaluation_id", "evaluation_id");
            tableMapping.ColumnMappings.Add("evaluation_subject_id", "evaluation_subject_id");
            tableMapping.ColumnMappings.Add("evaluation_sub_subject_id", "evaluation_sub_subject_id");
            tableMapping.ColumnMappings.Add("evaluation_score", "evaluation_score");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[evaluation_detail] ([evaluation_id], [evaluation_subject_id], " +
                "[evaluation_sub_subject_id], [evaluation_score]) VALUES (@evaluation_id, @evalua" +
                "tion_subject_id, @evaluation_sub_subject_id, @evaluation_score)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_sub_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_sub_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_score", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 0, "evaluation_score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT evaluation_detail_id, evaluation_id, evaluation_subject_id, evaluation_sub" +
                "_subject_id, evaluation_score FROM dbo.evaluation_detail";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.evaluation_detailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.evaluation_detailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.evaluation_detailDataTable dataTable = new netconceptDataSet.evaluation_detailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.evaluation_detailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "evaluation_detail");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> evaluation_id, System.Nullable<int> evaluation_subject_id, System.Nullable<int> evaluation_sub_subject_id, System.Nullable<decimal> evaluation_score) {
            if ((evaluation_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(evaluation_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((evaluation_subject_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(evaluation_subject_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((evaluation_sub_subject_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(evaluation_sub_subject_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((evaluation_score.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(evaluation_score.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class evaluation_indexTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public evaluation_indexTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "evaluation_index";
            tableMapping.ColumnMappings.Add("evaluation_no", "evaluation_no");
            tableMapping.ColumnMappings.Add("evaluation_name", "evaluation_name");
            tableMapping.ColumnMappings.Add("startdate", "startdate");
            tableMapping.ColumnMappings.Add("evaluation_active", "evaluation_active");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[evaluation_index] WHERE (([evaluation_no] = @Original_evaluation_no) AND ((@IsNull_evaluation_name = 1 AND [evaluation_name] IS NULL) OR ([evaluation_name] = @Original_evaluation_name)) AND ((@IsNull_startdate = 1 AND [startdate] IS NULL) OR ([startdate] = @Original_startdate)) AND ((@IsNull_evaluation_active = 1 AND [evaluation_active] IS NULL) OR ([evaluation_active] = @Original_evaluation_active)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_active", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_active", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_active", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_active", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[evaluation_index] ([evaluation_name], [startdate], [evaluation_active]) VALUES (@evaluation_name, @startdate, @evaluation_active);
SELECT evaluation_no, evaluation_name, startdate, evaluation_active FROM evaluation_index WHERE (evaluation_no = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_active", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_active", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[evaluation_index] SET [evaluation_name] = @evaluation_name, [startdate] = @startdate, [evaluation_active] = @evaluation_active WHERE (([evaluation_no] = @Original_evaluation_no) AND ((@IsNull_evaluation_name = 1 AND [evaluation_name] IS NULL) OR ([evaluation_name] = @Original_evaluation_name)) AND ((@IsNull_startdate = 1 AND [startdate] IS NULL) OR ([startdate] = @Original_startdate)) AND ((@IsNull_evaluation_active = 1 AND [evaluation_active] IS NULL) OR ([evaluation_active] = @Original_evaluation_active)));
SELECT evaluation_no, evaluation_name, startdate, evaluation_active FROM evaluation_index WHERE (evaluation_no = @evaluation_no)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_active", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_active", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_no", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_evaluation_active", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_active", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_evaluation_active", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "evaluation_active", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@evaluation_no", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "evaluation_no", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT evaluation_no, evaluation_name, startdate, evaluation_active FROM dbo.eval" +
                "uation_index";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.evaluation_indexDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.evaluation_indexDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.evaluation_indexDataTable dataTable = new netconceptDataSet.evaluation_indexDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.evaluation_indexDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "evaluation_index");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_evaluation_no, string Original_evaluation_name, System.Nullable<System.DateTime> Original_startdate, System.Nullable<bool> Original_evaluation_active) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_evaluation_no));
            if ((Original_evaluation_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_evaluation_name));
            }
            if ((Original_startdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_startdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_evaluation_active.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_evaluation_active.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string evaluation_name, System.Nullable<System.DateTime> startdate, System.Nullable<bool> evaluation_active) {
            if ((evaluation_name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(evaluation_name));
            }
            if ((startdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((evaluation_active.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(evaluation_active.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string evaluation_name, System.Nullable<System.DateTime> startdate, System.Nullable<bool> evaluation_active, int Original_evaluation_no, string Original_evaluation_name, System.Nullable<System.DateTime> Original_startdate, System.Nullable<bool> Original_evaluation_active, int evaluation_no) {
            if ((evaluation_name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(evaluation_name));
            }
            if ((startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((evaluation_active.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(evaluation_active.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_evaluation_no));
            if ((Original_evaluation_name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_evaluation_name));
            }
            if ((Original_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_evaluation_active.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_evaluation_active.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(evaluation_no));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class kpiTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public kpiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "kpi";
            tableMapping.ColumnMappings.Add("kpi_id", "kpi_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("kpi_subject", "kpi_subject");
            tableMapping.ColumnMappings.Add("kpi_criteria", "kpi_criteria");
            tableMapping.ColumnMappings.Add("kpi_weight", "kpi_weight");
            tableMapping.ColumnMappings.Add("kpi_q1", "kpi_q1");
            tableMapping.ColumnMappings.Add("kpi_q2", "kpi_q2");
            tableMapping.ColumnMappings.Add("kpi_q3", "kpi_q3");
            tableMapping.ColumnMappings.Add("kpi_q4", "kpi_q4");
            tableMapping.ColumnMappings.Add("kpi_year", "kpi_year");
            tableMapping.ColumnMappings.Add("kpi_result", "kpi_result");
            tableMapping.ColumnMappings.Add("kpi_previous_yr", "kpi_previous_yr");
            tableMapping.ColumnMappings.Add("kpi_target", "kpi_target");
            tableMapping.ColumnMappings.Add("kpi_commit", "kpi_commit");
            tableMapping.ColumnMappings.Add("kpi_avg", "kpi_avg");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[kpi] WHERE (([kpi_id] = @Original_kpi_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_kpi_subject = 1 AND [kpi_subject] IS NULL) OR ([kpi_subject] = @Original_kpi_subject)) AND ((@IsNull_kpi_criteria = 1 AND [kpi_criteria] IS NULL) OR ([kpi_criteria] = @Original_kpi_criteria)) AND ((@IsNull_kpi_weight = 1 AND [kpi_weight] IS NULL) OR ([kpi_weight] = @Original_kpi_weight)) AND ((@IsNull_kpi_q1 = 1 AND [kpi_q1] IS NULL) OR ([kpi_q1] = @Original_kpi_q1)) AND ((@IsNull_kpi_q2 = 1 AND [kpi_q2] IS NULL) OR ([kpi_q2] = @Original_kpi_q2)) AND ((@IsNull_kpi_q3 = 1 AND [kpi_q3] IS NULL) OR ([kpi_q3] = @Original_kpi_q3)) AND ((@IsNull_kpi_q4 = 1 AND [kpi_q4] IS NULL) OR ([kpi_q4] = @Original_kpi_q4)) AND ((@IsNull_kpi_year = 1 AND [kpi_year] IS NULL) OR ([kpi_year] = @Original_kpi_year)) AND ((@IsNull_kpi_result = 1 AND [kpi_result] IS NULL) OR ([kpi_result] = @Original_kpi_result)) AND ((@IsNull_kpi_previous_yr = 1 AND [kpi_previous_yr] IS NULL) OR ([kpi_previous_yr] = @Original_kpi_previous_yr)) AND ((@IsNull_kpi_target = 1 AND [kpi_target] IS NULL) OR ([kpi_target] = @Original_kpi_target)) AND ((@IsNull_kpi_commit = 1 AND [kpi_commit] IS NULL) OR ([kpi_commit] = @Original_kpi_commit)) AND ((@IsNull_kpi_avg = 1 AND [kpi_avg] IS NULL) OR ([kpi_avg] = @Original_kpi_avg)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_criteria", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_criteria", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_criteria", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_criteria", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_weight", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_weight", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_weight", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_q1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_q1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_q2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_q2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_q3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_q3", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_q4", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q4", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_q4", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q4", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_year", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_year", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_year", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_year", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_result", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_result", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_result", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_result", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_previous_yr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_previous_yr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_previous_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_previous_yr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_target", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_target", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_target", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_target", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_commit", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_commit", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_commit", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_commit", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_avg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_avg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_avg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[kpi] ([uname], [kpi_subject], [kpi_criteria], [kpi_weight], [kpi_q1], [kpi_q2], [kpi_q3], [kpi_q4], [kpi_year], [kpi_result], [kpi_previous_yr], [kpi_target], [kpi_commit], [kpi_avg]) VALUES (@uname, @kpi_subject, @kpi_criteria, @kpi_weight, @kpi_q1, @kpi_q2, @kpi_q3, @kpi_q4, @kpi_year, @kpi_result, @kpi_previous_yr, @kpi_target, @kpi_commit, @kpi_avg);
SELECT kpi_id, uname, kpi_subject, kpi_criteria, kpi_weight, kpi_q1, kpi_q2, kpi_q3, kpi_q4, kpi_year, kpi_result, kpi_previous_yr, kpi_target, kpi_commit, kpi_avg FROM kpi WHERE (kpi_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_criteria", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_criteria", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_weight", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_weight", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_q1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_q2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_q3", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_q4", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q4", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_year", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_year", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_result", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_result", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_previous_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_previous_yr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_target", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_target", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_commit", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_commit", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_avg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[kpi] SET [uname] = @uname, [kpi_subject] = @kpi_subject, [kpi_crite" +
                "ria] = @kpi_criteria, [kpi_weight] = @kpi_weight, [kpi_q1] = @kpi_q1, [kpi_q2] =" +
                " @kpi_q2, [kpi_q3] = @kpi_q3, [kpi_q4] = @kpi_q4, [kpi_year] = @kpi_year, [kpi_r" +
                "esult] = @kpi_result, [kpi_previous_yr] = @kpi_previous_yr, [kpi_target] = @kpi_" +
                "target, [kpi_commit] = @kpi_commit, [kpi_avg] = @kpi_avg WHERE (([kpi_id] = @Ori" +
                "ginal_kpi_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Origin" +
                "al_uname)) AND ((@IsNull_kpi_subject = 1 AND [kpi_subject] IS NULL) OR ([kpi_sub" +
                "ject] = @Original_kpi_subject)) AND ((@IsNull_kpi_criteria = 1 AND [kpi_criteria" +
                "] IS NULL) OR ([kpi_criteria] = @Original_kpi_criteria)) AND ((@IsNull_kpi_weigh" +
                "t = 1 AND [kpi_weight] IS NULL) OR ([kpi_weight] = @Original_kpi_weight)) AND ((" +
                "@IsNull_kpi_q1 = 1 AND [kpi_q1] IS NULL) OR ([kpi_q1] = @Original_kpi_q1)) AND (" +
                "(@IsNull_kpi_q2 = 1 AND [kpi_q2] IS NULL) OR ([kpi_q2] = @Original_kpi_q2)) AND " +
                "((@IsNull_kpi_q3 = 1 AND [kpi_q3] IS NULL) OR ([kpi_q3] = @Original_kpi_q3)) AND" +
                " ((@IsNull_kpi_q4 = 1 AND [kpi_q4] IS NULL) OR ([kpi_q4] = @Original_kpi_q4)) AN" +
                "D ((@IsNull_kpi_year = 1 AND [kpi_year] IS NULL) OR ([kpi_year] = @Original_kpi_" +
                "year)) AND ((@IsNull_kpi_result = 1 AND [kpi_result] IS NULL) OR ([kpi_result] =" +
                " @Original_kpi_result)) AND ((@IsNull_kpi_previous_yr = 1 AND [kpi_previous_yr] " +
                "IS NULL) OR ([kpi_previous_yr] = @Original_kpi_previous_yr)) AND ((@IsNull_kpi_t" +
                "arget = 1 AND [kpi_target] IS NULL) OR ([kpi_target] = @Original_kpi_target)) AN" +
                "D ((@IsNull_kpi_commit = 1 AND [kpi_commit] IS NULL) OR ([kpi_commit] = @Origina" +
                "l_kpi_commit)) AND ((@IsNull_kpi_avg = 1 AND [kpi_avg] IS NULL) OR ([kpi_avg] = " +
                "@Original_kpi_avg)));\r\nSELECT kpi_id, uname, kpi_subject, kpi_criteria, kpi_weig" +
                "ht, kpi_q1, kpi_q2, kpi_q3, kpi_q4, kpi_year, kpi_result, kpi_previous_yr, kpi_t" +
                "arget, kpi_commit, kpi_avg FROM kpi WHERE (kpi_id = @kpi_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_criteria", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_criteria", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_weight", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_weight", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_q1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q1", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_q2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q2", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_q3", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q3", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_q4", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q4", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_year", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_year", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_result", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_result", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_previous_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_previous_yr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_target", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_target", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_commit", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_commit", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_avg", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_criteria", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_criteria", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_criteria", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_criteria", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_weight", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_weight", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_weight", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_q1", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q1", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_q1", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q1", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_q2", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q2", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_q2", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q2", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_q3", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q3", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_q3", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q3", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_q4", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q4", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_q4", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_q4", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_year", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_year", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_year", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_year", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_result", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_result", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_result", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_result", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_previous_yr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_previous_yr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_previous_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_previous_yr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_target", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_target", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_target", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_target", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_commit", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_commit", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_commit", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_commit", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_kpi_avg", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_avg", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_kpi_avg", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "kpi_avg", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@kpi_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "kpi_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT kpi_id, uname, kpi_subject, kpi_criteria, kpi_weight, kpi_q1, kpi_q2, kpi_" +
                "q3, kpi_q4, kpi_year, kpi_result, kpi_previous_yr, kpi_target, kpi_commit, kpi_a" +
                "vg FROM dbo.kpi";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.kpiDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.kpiDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.kpiDataTable dataTable = new netconceptDataSet.kpiDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.kpiDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "kpi");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_kpi_id, string Original_uname, string Original_kpi_subject, string Original_kpi_criteria, string Original_kpi_weight, string Original_kpi_q1, string Original_kpi_q2, string Original_kpi_q3, string Original_kpi_q4, string Original_kpi_year, string Original_kpi_result, string Original_kpi_previous_yr, string Original_kpi_target, string Original_kpi_commit, string Original_kpi_avg) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_kpi_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_kpi_subject == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_kpi_subject));
            }
            if ((Original_kpi_criteria == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_kpi_criteria));
            }
            if ((Original_kpi_weight == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_kpi_weight));
            }
            if ((Original_kpi_q1 == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_kpi_q1));
            }
            if ((Original_kpi_q2 == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_kpi_q2));
            }
            if ((Original_kpi_q3 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_kpi_q3));
            }
            if ((Original_kpi_q4 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_kpi_q4));
            }
            if ((Original_kpi_year == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_kpi_year));
            }
            if ((Original_kpi_result == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_kpi_result));
            }
            if ((Original_kpi_previous_yr == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_kpi_previous_yr));
            }
            if ((Original_kpi_target == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_kpi_target));
            }
            if ((Original_kpi_commit == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_kpi_commit));
            }
            if ((Original_kpi_avg == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_kpi_avg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string kpi_subject, string kpi_criteria, string kpi_weight, string kpi_q1, string kpi_q2, string kpi_q3, string kpi_q4, string kpi_year, string kpi_result, string kpi_previous_yr, string kpi_target, string kpi_commit, string kpi_avg) {
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((kpi_subject == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(kpi_subject));
            }
            if ((kpi_criteria == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(kpi_criteria));
            }
            if ((kpi_weight == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(kpi_weight));
            }
            if ((kpi_q1 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(kpi_q1));
            }
            if ((kpi_q2 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(kpi_q2));
            }
            if ((kpi_q3 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(kpi_q3));
            }
            if ((kpi_q4 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(kpi_q4));
            }
            if ((kpi_year == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(kpi_year));
            }
            if ((kpi_result == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(kpi_result));
            }
            if ((kpi_previous_yr == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(kpi_previous_yr));
            }
            if ((kpi_target == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(kpi_target));
            }
            if ((kpi_commit == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(kpi_commit));
            }
            if ((kpi_avg == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(kpi_avg));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uname, 
                    string kpi_subject, 
                    string kpi_criteria, 
                    string kpi_weight, 
                    string kpi_q1, 
                    string kpi_q2, 
                    string kpi_q3, 
                    string kpi_q4, 
                    string kpi_year, 
                    string kpi_result, 
                    string kpi_previous_yr, 
                    string kpi_target, 
                    string kpi_commit, 
                    string kpi_avg, 
                    int Original_kpi_id, 
                    string Original_uname, 
                    string Original_kpi_subject, 
                    string Original_kpi_criteria, 
                    string Original_kpi_weight, 
                    string Original_kpi_q1, 
                    string Original_kpi_q2, 
                    string Original_kpi_q3, 
                    string Original_kpi_q4, 
                    string Original_kpi_year, 
                    string Original_kpi_result, 
                    string Original_kpi_previous_yr, 
                    string Original_kpi_target, 
                    string Original_kpi_commit, 
                    string Original_kpi_avg, 
                    int kpi_id) {
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((kpi_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(kpi_subject));
            }
            if ((kpi_criteria == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(kpi_criteria));
            }
            if ((kpi_weight == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(kpi_weight));
            }
            if ((kpi_q1 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(kpi_q1));
            }
            if ((kpi_q2 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(kpi_q2));
            }
            if ((kpi_q3 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(kpi_q3));
            }
            if ((kpi_q4 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(kpi_q4));
            }
            if ((kpi_year == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(kpi_year));
            }
            if ((kpi_result == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(kpi_result));
            }
            if ((kpi_previous_yr == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(kpi_previous_yr));
            }
            if ((kpi_target == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(kpi_target));
            }
            if ((kpi_commit == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(kpi_commit));
            }
            if ((kpi_avg == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(kpi_avg));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_kpi_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_uname));
            }
            if ((Original_kpi_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_kpi_subject));
            }
            if ((Original_kpi_criteria == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_kpi_criteria));
            }
            if ((Original_kpi_weight == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_kpi_weight));
            }
            if ((Original_kpi_q1 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_kpi_q1));
            }
            if ((Original_kpi_q2 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_kpi_q2));
            }
            if ((Original_kpi_q3 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_kpi_q3));
            }
            if ((Original_kpi_q4 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_kpi_q4));
            }
            if ((Original_kpi_year == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_kpi_year));
            }
            if ((Original_kpi_result == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_kpi_result));
            }
            if ((Original_kpi_previous_yr == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_kpi_previous_yr));
            }
            if ((Original_kpi_target == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_kpi_target));
            }
            if ((Original_kpi_commit == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_kpi_commit));
            }
            if ((Original_kpi_avg == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_kpi_avg));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(kpi_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_authorityTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_authorityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_authority";
            tableMapping.ColumnMappings.Add("authority", "authority");
            tableMapping.ColumnMappings.Add("authority_name", "authority_name");
            tableMapping.ColumnMappings.Add("line_factory", "line_factory");
            tableMapping.ColumnMappings.Add("line_office", "line_office");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[masterdata_authority] WHERE (([authority] = @Original_authority) AND ((@IsNull_authority_name = 1 AND [authority_name] IS NULL) OR ([authority_name] = @Original_authority_name)) AND ((@IsNull_line_factory = 1 AND [line_factory] IS NULL) OR ([line_factory] = @Original_line_factory)) AND ((@IsNull_line_office = 1 AND [line_office] IS NULL) OR ([line_office] = @Original_line_office)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_authority", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_authority_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "authority_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_authority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_line_factory", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "line_factory", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_line_factory", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "line_factory", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_line_office", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "line_office", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_line_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "line_office", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[masterdata_authority] ([authority], [authority_name], [line_factory], [line_office]) VALUES (@authority, @authority_name, @line_factory, @line_office);
SELECT authority, authority_name, line_factory, line_office FROM masterdata_authority WHERE (authority = @authority)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@authority", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@authority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@line_factory", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "line_factory", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@line_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "line_office", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_authority] SET [authority] = @authority, [authority_name] = @authority_name, [line_factory] = @line_factory, [line_office] = @line_office WHERE (([authority] = @Original_authority) AND ((@IsNull_authority_name = 1 AND [authority_name] IS NULL) OR ([authority_name] = @Original_authority_name)) AND ((@IsNull_line_factory = 1 AND [line_factory] IS NULL) OR ([line_factory] = @Original_line_factory)) AND ((@IsNull_line_office = 1 AND [line_office] IS NULL) OR ([line_office] = @Original_line_office)));
SELECT authority, authority_name, line_factory, line_office FROM masterdata_authority WHERE (authority = @authority)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@authority", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@authority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@line_factory", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "line_factory", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@line_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "line_office", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_authority", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_authority_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "authority_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_authority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_line_factory", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "line_factory", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_line_factory", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "line_factory", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_line_office", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "line_office", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_line_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "line_office", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT authority, authority_name, line_factory, line_office FROM dbo.masterdata_a" +
                "uthority";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_authorityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_authorityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_authorityDataTable dataTable = new netconceptDataSet.masterdata_authorityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_authorityDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_authority");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_authority, string Original_authority_name, string Original_line_factory, string Original_line_office) {
            if ((Original_authority == null)) {
                throw new System.ArgumentNullException("Original_authority");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_authority));
            }
            if ((Original_authority_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_authority_name));
            }
            if ((Original_line_factory == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_line_factory));
            }
            if ((Original_line_office == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_line_office));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string authority, string authority_name, string line_factory, string line_office) {
            if ((authority == null)) {
                throw new System.ArgumentNullException("authority");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(authority));
            }
            if ((authority_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(authority_name));
            }
            if ((line_factory == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(line_factory));
            }
            if ((line_office == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(line_office));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string authority, string authority_name, string line_factory, string line_office, string Original_authority, string Original_authority_name, string Original_line_factory, string Original_line_office) {
            if ((authority == null)) {
                throw new System.ArgumentNullException("authority");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(authority));
            }
            if ((authority_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(authority_name));
            }
            if ((line_factory == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(line_factory));
            }
            if ((line_office == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(line_office));
            }
            if ((Original_authority == null)) {
                throw new System.ArgumentNullException("Original_authority");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_authority));
            }
            if ((Original_authority_name == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_authority_name));
            }
            if ((Original_line_factory == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_line_factory));
            }
            if ((Original_line_office == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_line_office));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_competency_coreTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_competency_coreTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_competency_core";
            tableMapping.ColumnMappings.Add("cc_id", "cc_id");
            tableMapping.ColumnMappings.Add("cc_yr", "cc_yr");
            tableMapping.ColumnMappings.Add("cc_subject", "cc_subject");
            tableMapping.ColumnMappings.Add("fullscore", "fullscore");
            tableMapping.ColumnMappings.Add("order_by", "order_by");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[masterdata_competency_core] WHERE (([cc_id] = @Original_cc_id) AND ((@IsNull_cc_yr = 1 AND [cc_yr] IS NULL) OR ([cc_yr] = @Original_cc_yr)) AND ((@IsNull_cc_subject = 1 AND [cc_subject] IS NULL) OR ([cc_subject] = @Original_cc_subject)) AND ((@IsNull_fullscore = 1 AND [fullscore] IS NULL) OR ([fullscore] = @Original_fullscore)) AND ((@IsNull_order_by = 1 AND [order_by] IS NULL) OR ([order_by] = @Original_order_by)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cc_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cc_yr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_yr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cc_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_yr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cc_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cc_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_fullscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "fullscore", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_fullscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "fullscore", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_order_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "order_by", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_order_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "order_by", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[masterdata_competency_core] ([cc_yr], [cc_subject], [fullscore], [order_by]) VALUES (@cc_yr, @cc_subject, @fullscore, @order_by);
SELECT cc_id, cc_yr, cc_subject, fullscore, order_by FROM masterdata_competency_core WHERE (cc_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cc_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_yr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cc_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@fullscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "fullscore", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@order_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "order_by", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_competency_core] SET [cc_yr] = @cc_yr, [cc_subject] = @cc_subject, [fullscore] = @fullscore, [order_by] = @order_by WHERE (([cc_id] = @Original_cc_id) AND ((@IsNull_cc_yr = 1 AND [cc_yr] IS NULL) OR ([cc_yr] = @Original_cc_yr)) AND ((@IsNull_cc_subject = 1 AND [cc_subject] IS NULL) OR ([cc_subject] = @Original_cc_subject)) AND ((@IsNull_fullscore = 1 AND [fullscore] IS NULL) OR ([fullscore] = @Original_fullscore)) AND ((@IsNull_order_by = 1 AND [order_by] IS NULL) OR ([order_by] = @Original_order_by)));
SELECT cc_id, cc_yr, cc_subject, fullscore, order_by FROM masterdata_competency_core WHERE (cc_id = @cc_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cc_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_yr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cc_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@fullscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "fullscore", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@order_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "order_by", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cc_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cc_yr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_yr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cc_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_yr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cc_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cc_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_fullscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "fullscore", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_fullscore", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "fullscore", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_order_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "order_by", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_order_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "order_by", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cc_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cc_id, cc_yr, cc_subject, fullscore, order_by FROM dbo.masterdata_competen" +
                "cy_core";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_competency_coreDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_competency_coreDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_competency_coreDataTable dataTable = new netconceptDataSet.masterdata_competency_coreDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_competency_coreDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_competency_core");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_cc_id, string Original_cc_yr, string Original_cc_subject, System.Nullable<int> Original_fullscore, System.Nullable<int> Original_order_by) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_cc_id));
            if ((Original_cc_yr == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_cc_yr));
            }
            if ((Original_cc_subject == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_cc_subject));
            }
            if ((Original_fullscore.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_fullscore.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_order_by.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_order_by.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cc_yr, string cc_subject, System.Nullable<int> fullscore, System.Nullable<int> order_by) {
            if ((cc_yr == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cc_yr));
            }
            if ((cc_subject == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(cc_subject));
            }
            if ((fullscore.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(fullscore.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((order_by.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(order_by.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string cc_yr, string cc_subject, System.Nullable<int> fullscore, System.Nullable<int> order_by, int Original_cc_id, string Original_cc_yr, string Original_cc_subject, System.Nullable<int> Original_fullscore, System.Nullable<int> Original_order_by, int cc_id) {
            if ((cc_yr == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cc_yr));
            }
            if ((cc_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(cc_subject));
            }
            if ((fullscore.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(fullscore.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((order_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(order_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_cc_id));
            if ((Original_cc_yr == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_cc_yr));
            }
            if ((Original_cc_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_cc_subject));
            }
            if ((Original_fullscore.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_fullscore.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_order_by.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_order_by.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(cc_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_competency_stTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_competency_stTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_competency_st";
            tableMapping.ColumnMappings.Add("cst_subject_id", "cst_subject_id");
            tableMapping.ColumnMappings.Add("cst_subject", "cst_subject");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[masterdata_competency_st] WHERE (([cst_subject_id] = @Original" +
                "_cst_subject_id) AND ((@IsNull_cst_subject = 1 AND [cst_subject] IS NULL) OR ([c" +
                "st_subject] = @Original_cst_subject)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[masterdata_competency_st] ([cst_subject]) VALUES (@cst_subject" +
                ");\r\nSELECT cst_subject_id, cst_subject FROM masterdata_competency_st WHERE (cst_" +
                "subject_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_competency_st] SET [cst_subject] = @cst_subject WHERE (([cst_subject_id] = @Original_cst_subject_id) AND ((@IsNull_cst_subject = 1 AND [cst_subject] IS NULL) OR ([cst_subject] = @Original_cst_subject)));
SELECT cst_subject_id, cst_subject FROM masterdata_competency_st WHERE (cst_subject_id = @cst_subject_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_subject_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cst_subject_id, cst_subject FROM dbo.masterdata_competency_st";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_competency_stDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_competency_stDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_competency_stDataTable dataTable = new netconceptDataSet.masterdata_competency_stDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_competency_stDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_competency_st");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_cst_subject_id, string Original_cst_subject) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_cst_subject_id));
            if ((Original_cst_subject == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_cst_subject));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cst_subject) {
            if ((cst_subject == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cst_subject));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string cst_subject, int Original_cst_subject_id, string Original_cst_subject, int cst_subject_id) {
            if ((cst_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cst_subject));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_cst_subject_id));
            if ((Original_cst_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_cst_subject));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(cst_subject_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_competency_st_groupTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_competency_st_groupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_competency_st_group";
            tableMapping.ColumnMappings.Add("cst_group_id", "cst_group_id");
            tableMapping.ColumnMappings.Add("cst_groupname", "cst_groupname");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[masterdata_competency_st_group] WHERE (([cst_group_id] = @Orig" +
                "inal_cst_group_id) AND ((@IsNull_cst_groupname = 1 AND [cst_groupname] IS NULL) " +
                "OR ([cst_groupname] = @Original_cst_groupname)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_groupname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_groupname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_groupname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_groupname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[masterdata_competency_st_group] ([cst_groupname]) VALUES (@cst" +
                "_groupname);\r\nSELECT cst_group_id, cst_groupname FROM masterdata_competency_st_g" +
                "roup WHERE (cst_group_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_groupname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_groupname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_competency_st_group] SET [cst_groupname] = @cst_groupname WHERE (([cst_group_id] = @Original_cst_group_id) AND ((@IsNull_cst_groupname = 1 AND [cst_groupname] IS NULL) OR ([cst_groupname] = @Original_cst_groupname)));
SELECT cst_group_id, cst_groupname FROM masterdata_competency_st_group WHERE (cst_group_id = @cst_group_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_groupname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_groupname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_groupname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_groupname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_groupname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_groupname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_group_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cst_group_id, cst_groupname FROM dbo.masterdata_competency_st_group";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_competency_st_groupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_competency_st_groupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_competency_st_groupDataTable dataTable = new netconceptDataSet.masterdata_competency_st_groupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_competency_st_groupDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_competency_st_group");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_cst_group_id, string Original_cst_groupname) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_cst_group_id));
            if ((Original_cst_groupname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_cst_groupname));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string cst_groupname) {
            if ((cst_groupname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(cst_groupname));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string cst_groupname, int Original_cst_group_id, string Original_cst_groupname, int cst_group_id) {
            if ((cst_groupname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(cst_groupname));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_cst_group_id));
            if ((Original_cst_groupname == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_cst_groupname));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(cst_group_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_competency_st_group_detailTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_competency_st_group_detailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_competency_st_group_detail";
            tableMapping.ColumnMappings.Add("cst_group_detail_id", "cst_group_detail_id");
            tableMapping.ColumnMappings.Add("cst_group_id", "cst_group_id");
            tableMapping.ColumnMappings.Add("cst_subject_id", "cst_subject_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[masterdata_competency_st_group_detail] ([cst_group_detail_id]," +
                " [cst_group_id], [cst_subject_id]) VALUES (@cst_group_detail_id, @cst_group_id, " +
                "@cst_subject_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_group_detail_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_detail_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT cst_group_detail_id, cst_group_id, cst_subject_id FROM dbo.masterdata_comp" +
                "etency_st_group_detail";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_competency_st_group_detailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_competency_st_group_detailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_competency_st_group_detailDataTable dataTable = new netconceptDataSet.masterdata_competency_st_group_detailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_competency_st_group_detailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_competency_st_group_detail");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int cst_group_detail_id, System.Nullable<int> cst_group_id, System.Nullable<int> cst_subject_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(cst_group_detail_id));
            if ((cst_group_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(cst_group_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((cst_subject_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(cst_subject_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_eva_relationTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_eva_relationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_eva_relation";
            tableMapping.ColumnMappings.Add("relation_id", "relation_id");
            tableMapping.ColumnMappings.Add("staff_eva_relation", "staff_eva_relation");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[masterdata_eva_relation] WHERE (([relation_id] = @Original_rel" +
                "ation_id) AND ((@IsNull_staff_eva_relation = 1 AND [staff_eva_relation] IS NULL)" +
                " OR ([staff_eva_relation] = @Original_staff_eva_relation)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_relation_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "relation_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_eva_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[masterdata_eva_relation] ([relation_id], [staff_eva_relation])" +
                " VALUES (@relation_id, @staff_eva_relation);\r\nSELECT relation_id, staff_eva_rela" +
                "tion FROM masterdata_eva_relation WHERE (relation_id = @relation_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@relation_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "relation_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_eva_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_eva_relation] SET [relation_id] = @relation_id, [staff_eva_relation] = @staff_eva_relation WHERE (([relation_id] = @Original_relation_id) AND ((@IsNull_staff_eva_relation = 1 AND [staff_eva_relation] IS NULL) OR ([staff_eva_relation] = @Original_staff_eva_relation)));
SELECT relation_id, staff_eva_relation FROM masterdata_eva_relation WHERE (relation_id = @relation_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@relation_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "relation_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_eva_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_relation_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "relation_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_eva_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_eva_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_eva_relation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT relation_id, staff_eva_relation FROM dbo.masterdata_eva_relation";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_eva_relationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_eva_relationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_eva_relationDataTable dataTable = new netconceptDataSet.masterdata_eva_relationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_eva_relationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_eva_relation");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_relation_id, string Original_staff_eva_relation) {
            if ((Original_relation_id == null)) {
                throw new System.ArgumentNullException("Original_relation_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_relation_id));
            }
            if ((Original_staff_eva_relation == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_staff_eva_relation));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string relation_id, string staff_eva_relation) {
            if ((relation_id == null)) {
                throw new System.ArgumentNullException("relation_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(relation_id));
            }
            if ((staff_eva_relation == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(staff_eva_relation));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string relation_id, string staff_eva_relation, string Original_relation_id, string Original_staff_eva_relation) {
            if ((relation_id == null)) {
                throw new System.ArgumentNullException("relation_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(relation_id));
            }
            if ((staff_eva_relation == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(staff_eva_relation));
            }
            if ((Original_relation_id == null)) {
                throw new System.ArgumentNullException("Original_relation_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_relation_id));
            }
            if ((Original_staff_eva_relation == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_staff_eva_relation));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_menuauthorityTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_menuauthorityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_menuauthority";
            tableMapping.ColumnMappings.Add("menuauthority_id", "menuauthority_id");
            tableMapping.ColumnMappings.Add("menuauthority_root", "menuauthority_root");
            tableMapping.ColumnMappings.Add("menuauthority_name", "menuauthority_name");
            tableMapping.ColumnMappings.Add("menuauthority_desc", "menuauthority_desc");
            tableMapping.ColumnMappings.Add("orderby", "orderby");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[masterdata_menuauthority] WHERE (([menuauthority_id] = @Original_menuauthority_id) AND ((@IsNull_menuauthority_root = 1 AND [menuauthority_root] IS NULL) OR ([menuauthority_root] = @Original_menuauthority_root)) AND ((@IsNull_menuauthority_name = 1 AND [menuauthority_name] IS NULL) OR ([menuauthority_name] = @Original_menuauthority_name)) AND ((@IsNull_menuauthority_desc = 1 AND [menuauthority_desc] IS NULL) OR ([menuauthority_desc] = @Original_menuauthority_desc)) AND ((@IsNull_orderby = 1 AND [orderby] IS NULL) OR ([orderby] = @Original_orderby)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_root", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_root", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_orderby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "orderby", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_orderby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "orderby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[masterdata_menuauthority] ([menuauthority_id], [menuauthority_root], [menuauthority_name], [menuauthority_desc], [orderby]) VALUES (@menuauthority_id, @menuauthority_root, @menuauthority_name, @menuauthority_desc, @orderby);
SELECT menuauthority_id, menuauthority_root, menuauthority_name, menuauthority_desc, orderby FROM masterdata_menuauthority WHERE (menuauthority_id = @menuauthority_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_root", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@orderby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "orderby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_menuauthority] SET [menuauthority_id] = @menuauthority_id, [menuauthority_root] = @menuauthority_root, [menuauthority_name] = @menuauthority_name, [menuauthority_desc] = @menuauthority_desc, [orderby] = @orderby WHERE (([menuauthority_id] = @Original_menuauthority_id) AND ((@IsNull_menuauthority_root = 1 AND [menuauthority_root] IS NULL) OR ([menuauthority_root] = @Original_menuauthority_root)) AND ((@IsNull_menuauthority_name = 1 AND [menuauthority_name] IS NULL) OR ([menuauthority_name] = @Original_menuauthority_name)) AND ((@IsNull_menuauthority_desc = 1 AND [menuauthority_desc] IS NULL) OR ([menuauthority_desc] = @Original_menuauthority_desc)) AND ((@IsNull_orderby = 1 AND [orderby] IS NULL) OR ([orderby] = @Original_orderby)));
SELECT menuauthority_id, menuauthority_root, menuauthority_name, menuauthority_desc, orderby FROM masterdata_menuauthority WHERE (menuauthority_id = @menuauthority_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_root", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@orderby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "orderby", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_root", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_root", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_root", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_orderby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "orderby", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_orderby", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "orderby", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT menuauthority_id, menuauthority_root, menuauthority_name, menuauthority_de" +
                "sc, orderby FROM dbo.masterdata_menuauthority";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_menuauthorityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_menuauthorityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_menuauthorityDataTable dataTable = new netconceptDataSet.masterdata_menuauthorityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_menuauthorityDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_menuauthority");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_menuauthority_id, string Original_menuauthority_root, string Original_menuauthority_name, string Original_menuauthority_desc, System.Nullable<int> Original_orderby) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_menuauthority_id));
            if ((Original_menuauthority_root == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_menuauthority_root));
            }
            if ((Original_menuauthority_name == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_menuauthority_name));
            }
            if ((Original_menuauthority_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_menuauthority_desc));
            }
            if ((Original_orderby.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_orderby.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int menuauthority_id, string menuauthority_root, string menuauthority_name, string menuauthority_desc, System.Nullable<int> orderby) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(menuauthority_id));
            if ((menuauthority_root == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(menuauthority_root));
            }
            if ((menuauthority_name == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(menuauthority_name));
            }
            if ((menuauthority_desc == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(menuauthority_desc));
            }
            if ((orderby.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(orderby.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int menuauthority_id, string menuauthority_root, string menuauthority_name, string menuauthority_desc, System.Nullable<int> orderby, int Original_menuauthority_id, string Original_menuauthority_root, string Original_menuauthority_name, string Original_menuauthority_desc, System.Nullable<int> Original_orderby) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(menuauthority_id));
            if ((menuauthority_root == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(menuauthority_root));
            }
            if ((menuauthority_name == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(menuauthority_name));
            }
            if ((menuauthority_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(menuauthority_desc));
            }
            if ((orderby.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(orderby.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_menuauthority_id));
            if ((Original_menuauthority_root == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_menuauthority_root));
            }
            if ((Original_menuauthority_name == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_menuauthority_name));
            }
            if ((Original_menuauthority_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_menuauthority_desc));
            }
            if ((Original_orderby.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_orderby.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_menuauthority_groupTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_menuauthority_groupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_menuauthority_group";
            tableMapping.ColumnMappings.Add("menuauthority_group_id", "menuauthority_group_id");
            tableMapping.ColumnMappings.Add("menuauthority_group_name", "menuauthority_group_name");
            tableMapping.ColumnMappings.Add("menuauthority_group_desc", "menuauthority_group_desc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[masterdata_menuauthority_group] WHERE (([menuauthority_group_id] = @Original_menuauthority_group_id) AND ((@IsNull_menuauthority_group_name = 1 AND [menuauthority_group_name] IS NULL) OR ([menuauthority_group_name] = @Original_menuauthority_group_name)) AND ((@IsNull_menuauthority_group_desc = 1 AND [menuauthority_group_desc] IS NULL) OR ([menuauthority_group_desc] = @Original_menuauthority_group_desc)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[masterdata_menuauthority_group] ([menuauthority_group_id], [menuauthority_group_name], [menuauthority_group_desc]) VALUES (@menuauthority_group_id, @menuauthority_group_name, @menuauthority_group_desc);
SELECT menuauthority_group_id, menuauthority_group_name, menuauthority_group_desc FROM masterdata_menuauthority_group WHERE (menuauthority_group_id = @menuauthority_group_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_menuauthority_group] SET [menuauthority_group_id] = @menuauthority_group_id, [menuauthority_group_name] = @menuauthority_group_name, [menuauthority_group_desc] = @menuauthority_group_desc WHERE (([menuauthority_group_id] = @Original_menuauthority_group_id) AND ((@IsNull_menuauthority_group_name = 1 AND [menuauthority_group_name] IS NULL) OR ([menuauthority_group_name] = @Original_menuauthority_group_name)) AND ((@IsNull_menuauthority_group_desc = 1 AND [menuauthority_group_desc] IS NULL) OR ([menuauthority_group_desc] = @Original_menuauthority_group_desc)));
SELECT menuauthority_group_id, menuauthority_group_name, menuauthority_group_desc FROM masterdata_menuauthority_group WHERE (menuauthority_group_id = @menuauthority_group_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_desc", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_desc", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_desc", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT menuauthority_group_id, menuauthority_group_name, menuauthority_group_desc" +
                " FROM dbo.masterdata_menuauthority_group";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_menuauthority_groupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_menuauthority_groupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_menuauthority_groupDataTable dataTable = new netconceptDataSet.masterdata_menuauthority_groupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_menuauthority_groupDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_menuauthority_group");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_menuauthority_group_id, string Original_menuauthority_group_name, string Original_menuauthority_group_desc) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_menuauthority_group_id));
            if ((Original_menuauthority_group_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_menuauthority_group_name));
            }
            if ((Original_menuauthority_group_desc == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_menuauthority_group_desc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int menuauthority_group_id, string menuauthority_group_name, string menuauthority_group_desc) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(menuauthority_group_id));
            if ((menuauthority_group_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(menuauthority_group_name));
            }
            if ((menuauthority_group_desc == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(menuauthority_group_desc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int menuauthority_group_id, string menuauthority_group_name, string menuauthority_group_desc, int Original_menuauthority_group_id, string Original_menuauthority_group_name, string Original_menuauthority_group_desc) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(menuauthority_group_id));
            if ((menuauthority_group_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(menuauthority_group_name));
            }
            if ((menuauthority_group_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(menuauthority_group_desc));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_menuauthority_group_id));
            if ((Original_menuauthority_group_name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_menuauthority_group_name));
            }
            if ((Original_menuauthority_group_desc == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_menuauthority_group_desc));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_menuauthority_group_detailTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_menuauthority_group_detailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_menuauthority_group_detail";
            tableMapping.ColumnMappings.Add("group_detail_id", "group_detail_id");
            tableMapping.ColumnMappings.Add("menuauthority_group_id", "menuauthority_group_id");
            tableMapping.ColumnMappings.Add("menuauthority_id", "menuauthority_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[masterdata_menuauthority_group_detail] WHERE (([group_detail_id] = @Original_group_detail_id) AND ((@IsNull_menuauthority_group_id = 1 AND [menuauthority_group_id] IS NULL) OR ([menuauthority_group_id] = @Original_menuauthority_group_id)) AND ((@IsNull_menuauthority_id = 1 AND [menuauthority_id] IS NULL) OR ([menuauthority_id] = @Original_menuauthority_id)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_group_detail_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "group_detail_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[masterdata_menuauthority_group_detail] ([menuauthority_group_id], [menuauthority_id]) VALUES (@menuauthority_group_id, @menuauthority_id);
SELECT group_detail_id, menuauthority_group_id, menuauthority_id FROM masterdata_menuauthority_group_detail WHERE (group_detail_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_menuauthority_group_detail] SET [menuauthority_group_id] = @menuauthority_group_id, [menuauthority_id] = @menuauthority_id WHERE (([group_detail_id] = @Original_group_detail_id) AND ((@IsNull_menuauthority_group_id = 1 AND [menuauthority_group_id] IS NULL) OR ([menuauthority_group_id] = @Original_menuauthority_group_id)) AND ((@IsNull_menuauthority_id = 1 AND [menuauthority_id] IS NULL) OR ([menuauthority_id] = @Original_menuauthority_id)));
SELECT group_detail_id, menuauthority_group_id, menuauthority_id FROM masterdata_menuauthority_group_detail WHERE (group_detail_id = @group_detail_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_group_detail_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "group_detail_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@group_detail_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "group_detail_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT group_detail_id, menuauthority_group_id, menuauthority_id FROM dbo.masterd" +
                "ata_menuauthority_group_detail";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_menuauthority_group_detailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_menuauthority_group_detailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_menuauthority_group_detailDataTable dataTable = new netconceptDataSet.masterdata_menuauthority_group_detailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_menuauthority_group_detailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_menuauthority_group_detail");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_group_detail_id, System.Nullable<int> Original_menuauthority_group_id, System.Nullable<int> Original_menuauthority_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_group_detail_id));
            if ((Original_menuauthority_group_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_menuauthority_group_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_menuauthority_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_menuauthority_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> menuauthority_group_id, System.Nullable<int> menuauthority_id) {
            if ((menuauthority_group_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(menuauthority_group_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((menuauthority_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(menuauthority_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> menuauthority_group_id, System.Nullable<int> menuauthority_id, int Original_group_detail_id, System.Nullable<int> Original_menuauthority_group_id, System.Nullable<int> Original_menuauthority_id, int group_detail_id) {
            if ((menuauthority_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(menuauthority_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((menuauthority_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(menuauthority_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_group_detail_id));
            if ((Original_menuauthority_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_menuauthority_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_menuauthority_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_menuauthority_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(group_detail_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class masterdata_refTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public masterdata_refTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "masterdata_ref";
            tableMapping.ColumnMappings.Add("ref_autono", "ref_autono");
            tableMapping.ColumnMappings.Add("ref_category", "ref_category");
            tableMapping.ColumnMappings.Add("ref_id", "ref_id");
            tableMapping.ColumnMappings.Add("ref_name", "ref_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[masterdata_ref] WHERE (([ref_autono] = @Original_ref_autono) A" +
                "ND ([ref_category] = @Original_ref_category) AND ([ref_id] = @Original_ref_id) A" +
                "ND ([ref_name] = @Original_ref_name))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ref_autono", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_autono", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ref_category", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_category", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ref_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ref_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[masterdata_ref] ([ref_category], [ref_id], [ref_name]) VALUES " +
                "(@ref_category, @ref_id, @ref_name);\r\nSELECT ref_autono, ref_category, ref_id, r" +
                "ef_name FROM masterdata_ref WHERE (ref_autono = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ref_category", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_category", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ref_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ref_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[masterdata_ref] SET [ref_category] = @ref_category, [ref_id] = @ref_id, [ref_name] = @ref_name WHERE (([ref_autono] = @Original_ref_autono) AND ([ref_category] = @Original_ref_category) AND ([ref_id] = @Original_ref_id) AND ([ref_name] = @Original_ref_name));
SELECT ref_autono, ref_category, ref_id, ref_name FROM masterdata_ref WHERE (ref_autono = @ref_autono)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ref_category", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_category", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ref_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ref_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ref_autono", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_autono", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ref_category", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_category", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ref_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ref_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ref_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ref_autono", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "ref_autono", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ref_autono, ref_category, ref_id, ref_name FROM dbo.masterdata_ref";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.masterdata_refDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.masterdata_refDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.masterdata_refDataTable dataTable = new netconceptDataSet.masterdata_refDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.masterdata_refDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "masterdata_ref");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ref_autono, string Original_ref_category, string Original_ref_id, string Original_ref_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ref_autono));
            if ((Original_ref_category == null)) {
                throw new System.ArgumentNullException("Original_ref_category");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ref_category));
            }
            if ((Original_ref_id == null)) {
                throw new System.ArgumentNullException("Original_ref_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ref_id));
            }
            if ((Original_ref_name == null)) {
                throw new System.ArgumentNullException("Original_ref_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ref_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ref_category, string ref_id, string ref_name) {
            if ((ref_category == null)) {
                throw new System.ArgumentNullException("ref_category");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ref_category));
            }
            if ((ref_id == null)) {
                throw new System.ArgumentNullException("ref_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ref_id));
            }
            if ((ref_name == null)) {
                throw new System.ArgumentNullException("ref_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ref_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ref_category, string ref_id, string ref_name, int Original_ref_autono, string Original_ref_category, string Original_ref_id, string Original_ref_name, int ref_autono) {
            if ((ref_category == null)) {
                throw new System.ArgumentNullException("ref_category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ref_category));
            }
            if ((ref_id == null)) {
                throw new System.ArgumentNullException("ref_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ref_id));
            }
            if ((ref_name == null)) {
                throw new System.ArgumentNullException("ref_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ref_name));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ref_autono));
            if ((Original_ref_category == null)) {
                throw new System.ArgumentNullException("Original_ref_category");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_ref_category));
            }
            if ((Original_ref_id == null)) {
                throw new System.ArgumentNullException("Original_ref_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ref_id));
            }
            if ((Original_ref_name == null)) {
                throw new System.ArgumentNullException("Original_ref_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_ref_name));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ref_autono));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_activityTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_activityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_activity";
            tableMapping.ColumnMappings.Add("staff_activity_id", "staff_activity_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("staff_activity_date", "staff_activity_date");
            tableMapping.ColumnMappings.Add("activity_subject", "activity_subject");
            tableMapping.ColumnMappings.Add("activity_detail", "activity_detail");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_activity] WHERE (([staff_activity_id] = @Original_staff_activity_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_activity_date = 1 AND [staff_activity_date] IS NULL) OR ([staff_activity_date] = @Original_staff_activity_date)) AND ((@IsNull_activity_subject = 1 AND [activity_subject] IS NULL) OR ([activity_subject] = @Original_activity_subject)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_activity_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_activity] ([staff_activity_id], [uname], [staff_activity_date], [activity_subject], [activity_detail]) VALUES (@staff_activity_id, @uname, @staff_activity_date, @activity_subject, @activity_detail);
SELECT staff_activity_id, uname, staff_activity_date, activity_subject, activity_detail FROM staff_activity WHERE (staff_activity_id = @staff_activity_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_detail", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_detail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_activity] SET [staff_activity_id] = @staff_activity_id, [uname] = @uname, [staff_activity_date] = @staff_activity_date, [activity_subject] = @activity_subject, [activity_detail] = @activity_detail WHERE (([staff_activity_id] = @Original_staff_activity_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_activity_date = 1 AND [staff_activity_date] IS NULL) OR ([staff_activity_date] = @Original_staff_activity_date)) AND ((@IsNull_activity_subject = 1 AND [activity_subject] IS NULL) OR ([activity_subject] = @Original_activity_subject)));
SELECT staff_activity_id, uname, staff_activity_date, activity_subject, activity_detail FROM staff_activity WHERE (staff_activity_id = @staff_activity_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_detail", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_detail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_activity_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_activity_id, uname, staff_activity_date, activity_subject, activity_" +
                "detail FROM dbo.staff_activity";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_activityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_activityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_activityDataTable dataTable = new netconceptDataSet.staff_activityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_activityDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_activity");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_activity_id, string Original_uname, string Original_staff_activity_date, string Original_activity_subject) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_activity_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_staff_activity_date == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_staff_activity_date));
            }
            if ((Original_activity_subject == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_activity_subject));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int staff_activity_id, string uname, string staff_activity_date, string activity_subject, string activity_detail) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_activity_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((staff_activity_date == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(staff_activity_date));
            }
            if ((activity_subject == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(activity_subject));
            }
            if ((activity_detail == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(activity_detail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int staff_activity_id, string uname, string staff_activity_date, string activity_subject, string activity_detail, int Original_staff_activity_id, string Original_uname, string Original_staff_activity_date, string Original_activity_subject) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_activity_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((staff_activity_date == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(staff_activity_date));
            }
            if ((activity_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(activity_subject));
            }
            if ((activity_detail == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(activity_detail));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_staff_activity_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_uname));
            }
            if ((Original_staff_activity_date == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_staff_activity_date));
            }
            if ((Original_activity_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_activity_subject));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_activity_imageTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_activity_imageTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_activity_image";
            tableMapping.ColumnMappings.Add("staff_activity_image_id", "staff_activity_image_id");
            tableMapping.ColumnMappings.Add("staff_activity_id", "staff_activity_id");
            tableMapping.ColumnMappings.Add("activity_image", "activity_image");
            tableMapping.ColumnMappings.Add("activity_image_thumb", "activity_image_thumb");
            tableMapping.ColumnMappings.Add("activity_image_descript", "activity_image_descript");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_activity_image] WHERE (([staff_activity_image_id] = @Original_staff_activity_image_id) AND ((@IsNull_staff_activity_id = 1 AND [staff_activity_id] IS NULL) OR ([staff_activity_id] = @Original_staff_activity_id)) AND ((@IsNull_activity_image = 1 AND [activity_image] IS NULL) OR ([activity_image] = @Original_activity_image)) AND ((@IsNull_activity_image_thumb = 1 AND [activity_image_thumb] IS NULL) OR ([activity_image_thumb] = @Original_activity_image_thumb)) AND ((@IsNull_activity_image_descript = 1 AND [activity_image_descript] IS NULL) OR ([activity_image_descript] = @Original_activity_image_descript)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_image_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_image_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_image", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_image", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_image_thumb", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_thumb", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_image_thumb", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_thumb", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_image_descript", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_descript", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_image_descript", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_descript", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_activity_image] ([staff_activity_id], [activity_image], [activity_image_thumb], [activity_image_descript]) VALUES (@staff_activity_id, @activity_image, @activity_image_thumb, @activity_image_descript);
SELECT staff_activity_image_id, staff_activity_id, activity_image, activity_image_thumb, activity_image_descript FROM staff_activity_image WHERE (staff_activity_image_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_image", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_image_thumb", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_thumb", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_image_descript", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_descript", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_activity_image] SET [staff_activity_id] = @staff_activity_id, [activity_image] = @activity_image, [activity_image_thumb] = @activity_image_thumb, [activity_image_descript] = @activity_image_descript WHERE (([staff_activity_image_id] = @Original_staff_activity_image_id) AND ((@IsNull_staff_activity_id = 1 AND [staff_activity_id] IS NULL) OR ([staff_activity_id] = @Original_staff_activity_id)) AND ((@IsNull_activity_image = 1 AND [activity_image] IS NULL) OR ([activity_image] = @Original_activity_image)) AND ((@IsNull_activity_image_thumb = 1 AND [activity_image_thumb] IS NULL) OR ([activity_image_thumb] = @Original_activity_image_thumb)) AND ((@IsNull_activity_image_descript = 1 AND [activity_image_descript] IS NULL) OR ([activity_image_descript] = @Original_activity_image_descript)));
SELECT staff_activity_image_id, staff_activity_id, activity_image, activity_image_thumb, activity_image_descript FROM staff_activity_image WHERE (staff_activity_image_id = @staff_activity_image_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_image", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_image_thumb", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_thumb", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_image_descript", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_descript", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_image_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_image_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_image", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_image", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_image_thumb", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_thumb", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_image_thumb", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_thumb", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_image_descript", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_descript", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_image_descript", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_image_descript", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_image_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_image_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_activity_image_id, staff_activity_id, activity_image, activity_image" +
                "_thumb, activity_image_descript FROM dbo.staff_activity_image";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_activity_imageDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_activity_imageDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_activity_imageDataTable dataTable = new netconceptDataSet.staff_activity_imageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_activity_imageDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_activity_image");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_activity_image_id, System.Nullable<int> Original_staff_activity_id, string Original_activity_image, string Original_activity_image_thumb, string Original_activity_image_descript) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_activity_image_id));
            if ((Original_staff_activity_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_staff_activity_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_activity_image == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_activity_image));
            }
            if ((Original_activity_image_thumb == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_activity_image_thumb));
            }
            if ((Original_activity_image_descript == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_activity_image_descript));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> staff_activity_id, string activity_image, string activity_image_thumb, string activity_image_descript) {
            if ((staff_activity_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_activity_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((activity_image == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(activity_image));
            }
            if ((activity_image_thumb == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(activity_image_thumb));
            }
            if ((activity_image_descript == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(activity_image_descript));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> staff_activity_id, string activity_image, string activity_image_thumb, string activity_image_descript, int Original_staff_activity_image_id, System.Nullable<int> Original_staff_activity_id, string Original_activity_image, string Original_activity_image_thumb, string Original_activity_image_descript, int staff_activity_image_id) {
            if ((staff_activity_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_activity_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((activity_image == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(activity_image));
            }
            if ((activity_image_thumb == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(activity_image_thumb));
            }
            if ((activity_image_descript == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(activity_image_descript));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_staff_activity_image_id));
            if ((Original_staff_activity_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_staff_activity_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_activity_image == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_activity_image));
            }
            if ((Original_activity_image_thumb == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_activity_image_thumb));
            }
            if ((Original_activity_image_descript == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_activity_image_descript));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(staff_activity_image_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_activity_tempTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_activity_tempTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_activity_temp";
            tableMapping.ColumnMappings.Add("staff_activity_id", "staff_activity_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("staff_activity_date", "staff_activity_date");
            tableMapping.ColumnMappings.Add("activity_subject", "activity_subject");
            tableMapping.ColumnMappings.Add("activity_detail", "activity_detail");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_activity_temp] WHERE (([staff_activity_id] = @Original_staff_activity_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_activity_date = 1 AND [staff_activity_date] IS NULL) OR ([staff_activity_date] = @Original_staff_activity_date)) AND ((@IsNull_activity_subject = 1 AND [activity_subject] IS NULL) OR ([activity_subject] = @Original_activity_subject)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_activity_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_activity_temp] ([staff_activity_id], [uname], [staff_activity_date], [activity_subject], [activity_detail]) VALUES (@staff_activity_id, @uname, @staff_activity_date, @activity_subject, @activity_detail);
SELECT staff_activity_id, uname, staff_activity_date, activity_subject, activity_detail FROM staff_activity_temp WHERE (staff_activity_id = @staff_activity_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_detail", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_detail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_activity_temp] SET [staff_activity_id] = @staff_activity_id, [uname] = @uname, [staff_activity_date] = @staff_activity_date, [activity_subject] = @activity_subject, [activity_detail] = @activity_detail WHERE (([staff_activity_id] = @Original_staff_activity_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_activity_date = 1 AND [staff_activity_date] IS NULL) OR ([staff_activity_date] = @Original_staff_activity_date)) AND ((@IsNull_activity_subject = 1 AND [activity_subject] IS NULL) OR ([activity_subject] = @Original_activity_subject)));
SELECT staff_activity_id, uname, staff_activity_date, activity_subject, activity_detail FROM staff_activity_temp WHERE (staff_activity_id = @staff_activity_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_detail", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_detail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_activity_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_subject", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_subject", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_subject", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_activity_id, uname, staff_activity_date, activity_subject, activity_" +
                "detail FROM dbo.staff_activity_temp";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_activity_tempDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_activity_tempDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_activity_tempDataTable dataTable = new netconceptDataSet.staff_activity_tempDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_activity_tempDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_activity_temp");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_activity_id, string Original_uname, string Original_staff_activity_date, string Original_activity_subject) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_activity_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_staff_activity_date == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_staff_activity_date));
            }
            if ((Original_activity_subject == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_activity_subject));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int staff_activity_id, string uname, string staff_activity_date, string activity_subject, string activity_detail) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_activity_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((staff_activity_date == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(staff_activity_date));
            }
            if ((activity_subject == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(activity_subject));
            }
            if ((activity_detail == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(activity_detail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int staff_activity_id, string uname, string staff_activity_date, string activity_subject, string activity_detail, int Original_staff_activity_id, string Original_uname, string Original_staff_activity_date, string Original_activity_subject) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_activity_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((staff_activity_date == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(staff_activity_date));
            }
            if ((activity_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(activity_subject));
            }
            if ((activity_detail == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(activity_detail));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_staff_activity_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_uname));
            }
            if ((Original_staff_activity_date == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_staff_activity_date));
            }
            if ((Original_activity_subject == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_activity_subject));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_activity_videoTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_activity_videoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_activity_video";
            tableMapping.ColumnMappings.Add("staff_activity_video_id", "staff_activity_video_id");
            tableMapping.ColumnMappings.Add("staff_activity_id", "staff_activity_id");
            tableMapping.ColumnMappings.Add("activity_video", "activity_video");
            tableMapping.ColumnMappings.Add("activity_video_descript", "activity_video_descript");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_activity_video] WHERE (([staff_activity_video_id] = @Original_staff_activity_video_id) AND ((@IsNull_staff_activity_id = 1 AND [staff_activity_id] IS NULL) OR ([staff_activity_id] = @Original_staff_activity_id)) AND ((@IsNull_activity_video = 1 AND [activity_video] IS NULL) OR ([activity_video] = @Original_activity_video)) AND ((@IsNull_activity_video_descript = 1 AND [activity_video_descript] IS NULL) OR ([activity_video_descript] = @Original_activity_video_descript)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_video_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_video_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_video", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_video", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_video_descript", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video_descript", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_video_descript", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video_descript", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_activity_video] ([staff_activity_id], [activity_video], [activity_video_descript]) VALUES (@staff_activity_id, @activity_video, @activity_video_descript);
SELECT staff_activity_video_id, staff_activity_id, activity_video, activity_video_descript FROM staff_activity_video WHERE (staff_activity_video_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_video", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_video_descript", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video_descript", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_activity_video] SET [staff_activity_id] = @staff_activity_id, [activity_video] = @activity_video, [activity_video_descript] = @activity_video_descript WHERE (([staff_activity_video_id] = @Original_staff_activity_video_id) AND ((@IsNull_staff_activity_id = 1 AND [staff_activity_id] IS NULL) OR ([staff_activity_id] = @Original_staff_activity_id)) AND ((@IsNull_activity_video = 1 AND [activity_video] IS NULL) OR ([activity_video] = @Original_activity_video)) AND ((@IsNull_activity_video_descript = 1 AND [activity_video_descript] IS NULL) OR ([activity_video_descript] = @Original_activity_video_descript)));
SELECT staff_activity_video_id, staff_activity_id, activity_video, activity_video_descript FROM staff_activity_video WHERE (staff_activity_video_id = @staff_activity_video_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_video", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_video_descript", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video_descript", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_video_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_video_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_activity_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_video", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_video", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_video_descript", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video_descript", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_video_descript", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_video_descript", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_activity_video_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "staff_activity_video_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_activity_video_id, staff_activity_id, activity_video, activity_video" +
                "_descript FROM dbo.staff_activity_video";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_activity_videoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_activity_videoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_activity_videoDataTable dataTable = new netconceptDataSet.staff_activity_videoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_activity_videoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_activity_video");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_activity_video_id, System.Nullable<int> Original_staff_activity_id, string Original_activity_video, string Original_activity_video_descript) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_activity_video_id));
            if ((Original_staff_activity_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_staff_activity_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_activity_video == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_activity_video));
            }
            if ((Original_activity_video_descript == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_activity_video_descript));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> staff_activity_id, string activity_video, string activity_video_descript) {
            if ((staff_activity_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_activity_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((activity_video == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(activity_video));
            }
            if ((activity_video_descript == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(activity_video_descript));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> staff_activity_id, string activity_video, string activity_video_descript, int Original_staff_activity_video_id, System.Nullable<int> Original_staff_activity_id, string Original_activity_video, string Original_activity_video_descript, int staff_activity_video_id) {
            if ((staff_activity_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_activity_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((activity_video == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(activity_video));
            }
            if ((activity_video_descript == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(activity_video_descript));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_staff_activity_video_id));
            if ((Original_staff_activity_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_staff_activity_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_activity_video == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_activity_video));
            }
            if ((Original_activity_video_descript == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_activity_video_descript));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(staff_activity_video_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_addressTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_addressTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_address";
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("staff_address", "staff_address");
            tableMapping.ColumnMappings.Add("staff_locality", "staff_locality");
            tableMapping.ColumnMappings.Add("staff_amphur", "staff_amphur");
            tableMapping.ColumnMappings.Add("staff_province", "staff_province");
            tableMapping.ColumnMappings.Add("staff_postalcode", "staff_postalcode");
            tableMapping.ColumnMappings.Add("staff_map", "staff_map");
            tableMapping.ColumnMappings.Add("staff_tel", "staff_tel");
            tableMapping.ColumnMappings.Add("staff_mobile", "staff_mobile");
            tableMapping.ColumnMappings.Add("staff_tel_office", "staff_tel_office");
            tableMapping.ColumnMappings.Add("staff_tel_office_ext", "staff_tel_office_ext");
            tableMapping.ColumnMappings.Add("staff_email", "staff_email");
            tableMapping.ColumnMappings.Add("staff_emergency_name", "staff_emergency_name");
            tableMapping.ColumnMappings.Add("staff_emergency_tel", "staff_emergency_tel");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[staff_address] WHERE (([uname] = @Original_uname) AND ((@IsNul" +
                "l_staff_address = 1 AND [staff_address] IS NULL) OR ([staff_address] = @Original" +
                "_staff_address)) AND ((@IsNull_staff_locality = 1 AND [staff_locality] IS NULL) " +
                "OR ([staff_locality] = @Original_staff_locality)) AND ((@IsNull_staff_amphur = 1" +
                " AND [staff_amphur] IS NULL) OR ([staff_amphur] = @Original_staff_amphur)) AND (" +
                "(@IsNull_staff_province = 1 AND [staff_province] IS NULL) OR ([staff_province] =" +
                " @Original_staff_province)) AND ((@IsNull_staff_postalcode = 1 AND [staff_postal" +
                "code] IS NULL) OR ([staff_postalcode] = @Original_staff_postalcode)) AND ((@IsNu" +
                "ll_staff_map = 1 AND [staff_map] IS NULL) OR ([staff_map] = @Original_staff_map)" +
                ") AND ((@IsNull_staff_tel = 1 AND [staff_tel] IS NULL) OR ([staff_tel] = @Origin" +
                "al_staff_tel)) AND ((@IsNull_staff_mobile = 1 AND [staff_mobile] IS NULL) OR ([s" +
                "taff_mobile] = @Original_staff_mobile)) AND ((@IsNull_staff_tel_office = 1 AND [" +
                "staff_tel_office] IS NULL) OR ([staff_tel_office] = @Original_staff_tel_office))" +
                " AND ((@IsNull_staff_tel_office_ext = 1 AND [staff_tel_office_ext] IS NULL) OR (" +
                "[staff_tel_office_ext] = @Original_staff_tel_office_ext)) AND ((@IsNull_staff_em" +
                "ail = 1 AND [staff_email] IS NULL) OR ([staff_email] = @Original_staff_email)) A" +
                "ND ((@IsNull_staff_emergency_name = 1 AND [staff_emergency_name] IS NULL) OR ([s" +
                "taff_emergency_name] = @Original_staff_emergency_name)) AND ((@IsNull_staff_emer" +
                "gency_tel = 1 AND [staff_emergency_tel] IS NULL) OR ([staff_emergency_tel] = @Or" +
                "iginal_staff_emergency_tel)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_address", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_address", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_address", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_locality", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_locality", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_locality", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_locality", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_amphur", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_amphur", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_amphur", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_amphur", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_province", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_province", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_province", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_province", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_postalcode", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_postalcode", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_postalcode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_postalcode", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_map", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_map", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_map", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_map", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_tel", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_tel", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_mobile", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_mobile", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_mobile", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_mobile", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_tel_office", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_tel_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_tel_office_ext", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office_ext", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_tel_office_ext", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office_ext", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_email", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_email", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_email", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_emergency_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_emergency_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_emergency_tel", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_tel", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_emergency_tel", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_tel", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_address] ([uname], [staff_address], [staff_locality], [staff_amphur], [staff_province], [staff_postalcode], [staff_map], [staff_tel], [staff_mobile], [staff_tel_office], [staff_tel_office_ext], [staff_email], [staff_emergency_name], [staff_emergency_tel]) VALUES (@uname, @staff_address, @staff_locality, @staff_amphur, @staff_province, @staff_postalcode, @staff_map, @staff_tel, @staff_mobile, @staff_tel_office, @staff_tel_office_ext, @staff_email, @staff_emergency_name, @staff_emergency_tel);
SELECT uname, staff_address, staff_locality, staff_amphur, staff_province, staff_postalcode, staff_map, staff_tel, staff_mobile, staff_tel_office, staff_tel_office_ext, staff_email, staff_emergency_name, staff_emergency_tel FROM staff_address WHERE (uname = @uname)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_address", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_locality", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_locality", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_amphur", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_amphur", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_province", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_province", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_postalcode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_postalcode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_map", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_map", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_tel", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_mobile", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_mobile", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_tel_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_tel_office_ext", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office_ext", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_email", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_emergency_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_emergency_tel", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_tel", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[staff_address] SET [uname] = @uname, [staff_address] = @staff_addre" +
                "ss, [staff_locality] = @staff_locality, [staff_amphur] = @staff_amphur, [staff_p" +
                "rovince] = @staff_province, [staff_postalcode] = @staff_postalcode, [staff_map] " +
                "= @staff_map, [staff_tel] = @staff_tel, [staff_mobile] = @staff_mobile, [staff_t" +
                "el_office] = @staff_tel_office, [staff_tel_office_ext] = @staff_tel_office_ext, " +
                "[staff_email] = @staff_email, [staff_emergency_name] = @staff_emergency_name, [s" +
                "taff_emergency_tel] = @staff_emergency_tel WHERE (([uname] = @Original_uname) AN" +
                "D ((@IsNull_staff_address = 1 AND [staff_address] IS NULL) OR ([staff_address] =" +
                " @Original_staff_address)) AND ((@IsNull_staff_locality = 1 AND [staff_locality]" +
                " IS NULL) OR ([staff_locality] = @Original_staff_locality)) AND ((@IsNull_staff_" +
                "amphur = 1 AND [staff_amphur] IS NULL) OR ([staff_amphur] = @Original_staff_amph" +
                "ur)) AND ((@IsNull_staff_province = 1 AND [staff_province] IS NULL) OR ([staff_p" +
                "rovince] = @Original_staff_province)) AND ((@IsNull_staff_postalcode = 1 AND [st" +
                "aff_postalcode] IS NULL) OR ([staff_postalcode] = @Original_staff_postalcode)) A" +
                "ND ((@IsNull_staff_map = 1 AND [staff_map] IS NULL) OR ([staff_map] = @Original_" +
                "staff_map)) AND ((@IsNull_staff_tel = 1 AND [staff_tel] IS NULL) OR ([staff_tel]" +
                " = @Original_staff_tel)) AND ((@IsNull_staff_mobile = 1 AND [staff_mobile] IS NU" +
                "LL) OR ([staff_mobile] = @Original_staff_mobile)) AND ((@IsNull_staff_tel_office" +
                " = 1 AND [staff_tel_office] IS NULL) OR ([staff_tel_office] = @Original_staff_te" +
                "l_office)) AND ((@IsNull_staff_tel_office_ext = 1 AND [staff_tel_office_ext] IS " +
                "NULL) OR ([staff_tel_office_ext] = @Original_staff_tel_office_ext)) AND ((@IsNul" +
                "l_staff_email = 1 AND [staff_email] IS NULL) OR ([staff_email] = @Original_staff" +
                "_email)) AND ((@IsNull_staff_emergency_name = 1 AND [staff_emergency_name] IS NU" +
                "LL) OR ([staff_emergency_name] = @Original_staff_emergency_name)) AND ((@IsNull_" +
                "staff_emergency_tel = 1 AND [staff_emergency_tel] IS NULL) OR ([staff_emergency_" +
                "tel] = @Original_staff_emergency_tel)));\r\nSELECT uname, staff_address, staff_loc" +
                "ality, staff_amphur, staff_province, staff_postalcode, staff_map, staff_tel, sta" +
                "ff_mobile, staff_tel_office, staff_tel_office_ext, staff_email, staff_emergency_" +
                "name, staff_emergency_tel FROM staff_address WHERE (uname = @uname)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_address", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_locality", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_locality", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_amphur", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_amphur", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_province", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_province", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_postalcode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_postalcode", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_map", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_map", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_tel", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_mobile", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_mobile", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_tel_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_tel_office_ext", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office_ext", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_email", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_emergency_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_emergency_tel", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_tel", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_address", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_address", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_address", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_address", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_locality", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_locality", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_locality", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_locality", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_amphur", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_amphur", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_amphur", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_amphur", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_province", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_province", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_province", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_province", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_postalcode", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_postalcode", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_postalcode", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_postalcode", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_map", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_map", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_map", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_map", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_tel", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_tel", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_mobile", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_mobile", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_mobile", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_mobile", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_tel_office", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_tel_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_tel_office_ext", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office_ext", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_tel_office_ext", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_tel_office_ext", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_email", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_email", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_email", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_email", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_emergency_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_emergency_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_emergency_tel", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_tel", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_emergency_tel", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_emergency_tel", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uname, staff_address, staff_locality, staff_amphur, staff_province, staff_" +
                "postalcode, staff_map, staff_tel, staff_mobile, staff_tel_office, staff_tel_offi" +
                "ce_ext, staff_email, staff_emergency_name, staff_emergency_tel FROM dbo.staff_ad" +
                "dress";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_addressDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_addressDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_addressDataTable dataTable = new netconceptDataSet.staff_addressDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_addressDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_address");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uname, string Original_staff_address, string Original_staff_locality, string Original_staff_amphur, string Original_staff_province, string Original_staff_postalcode, string Original_staff_map, string Original_staff_tel, string Original_staff_mobile, string Original_staff_tel_office, string Original_staff_tel_office_ext, string Original_staff_email, string Original_staff_emergency_name, string Original_staff_emergency_tel) {
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uname));
            }
            if ((Original_staff_address == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_staff_address));
            }
            if ((Original_staff_locality == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_staff_locality));
            }
            if ((Original_staff_amphur == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_staff_amphur));
            }
            if ((Original_staff_province == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_staff_province));
            }
            if ((Original_staff_postalcode == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_staff_postalcode));
            }
            if ((Original_staff_map == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_staff_map));
            }
            if ((Original_staff_tel == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_staff_tel));
            }
            if ((Original_staff_mobile == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_staff_mobile));
            }
            if ((Original_staff_tel_office == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_staff_tel_office));
            }
            if ((Original_staff_tel_office_ext == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_staff_tel_office_ext));
            }
            if ((Original_staff_email == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_staff_email));
            }
            if ((Original_staff_emergency_name == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_staff_emergency_name));
            }
            if ((Original_staff_emergency_tel == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_staff_emergency_tel));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string staff_address, string staff_locality, string staff_amphur, string staff_province, string staff_postalcode, string staff_map, string staff_tel, string staff_mobile, string staff_tel_office, string staff_tel_office_ext, string staff_email, string staff_emergency_name, string staff_emergency_tel) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((staff_address == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(staff_address));
            }
            if ((staff_locality == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(staff_locality));
            }
            if ((staff_amphur == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(staff_amphur));
            }
            if ((staff_province == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(staff_province));
            }
            if ((staff_postalcode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(staff_postalcode));
            }
            if ((staff_map == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(staff_map));
            }
            if ((staff_tel == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(staff_tel));
            }
            if ((staff_mobile == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(staff_mobile));
            }
            if ((staff_tel_office == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(staff_tel_office));
            }
            if ((staff_tel_office_ext == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(staff_tel_office_ext));
            }
            if ((staff_email == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(staff_email));
            }
            if ((staff_emergency_name == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(staff_emergency_name));
            }
            if ((staff_emergency_tel == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(staff_emergency_tel));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uname, 
                    string staff_address, 
                    string staff_locality, 
                    string staff_amphur, 
                    string staff_province, 
                    string staff_postalcode, 
                    string staff_map, 
                    string staff_tel, 
                    string staff_mobile, 
                    string staff_tel_office, 
                    string staff_tel_office_ext, 
                    string staff_email, 
                    string staff_emergency_name, 
                    string staff_emergency_tel, 
                    string Original_uname, 
                    string Original_staff_address, 
                    string Original_staff_locality, 
                    string Original_staff_amphur, 
                    string Original_staff_province, 
                    string Original_staff_postalcode, 
                    string Original_staff_map, 
                    string Original_staff_tel, 
                    string Original_staff_mobile, 
                    string Original_staff_tel_office, 
                    string Original_staff_tel_office_ext, 
                    string Original_staff_email, 
                    string Original_staff_emergency_name, 
                    string Original_staff_emergency_tel) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((staff_address == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(staff_address));
            }
            if ((staff_locality == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(staff_locality));
            }
            if ((staff_amphur == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(staff_amphur));
            }
            if ((staff_province == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(staff_province));
            }
            if ((staff_postalcode == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(staff_postalcode));
            }
            if ((staff_map == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(staff_map));
            }
            if ((staff_tel == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(staff_tel));
            }
            if ((staff_mobile == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(staff_mobile));
            }
            if ((staff_tel_office == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(staff_tel_office));
            }
            if ((staff_tel_office_ext == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(staff_tel_office_ext));
            }
            if ((staff_email == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(staff_email));
            }
            if ((staff_emergency_name == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(staff_emergency_name));
            }
            if ((staff_emergency_tel == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(staff_emergency_tel));
            }
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_uname));
            }
            if ((Original_staff_address == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_staff_address));
            }
            if ((Original_staff_locality == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_staff_locality));
            }
            if ((Original_staff_amphur == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_staff_amphur));
            }
            if ((Original_staff_province == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_staff_province));
            }
            if ((Original_staff_postalcode == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_staff_postalcode));
            }
            if ((Original_staff_map == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_staff_map));
            }
            if ((Original_staff_tel == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_staff_tel));
            }
            if ((Original_staff_mobile == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_staff_mobile));
            }
            if ((Original_staff_tel_office == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_staff_tel_office));
            }
            if ((Original_staff_tel_office_ext == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_staff_tel_office_ext));
            }
            if ((Original_staff_email == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_staff_email));
            }
            if ((Original_staff_emergency_name == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_staff_emergency_name));
            }
            if ((Original_staff_emergency_tel == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_staff_emergency_tel));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_ailmentTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_ailmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_ailment";
            tableMapping.ColumnMappings.Add("staff_ailment_id", "staff_ailment_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("ailment_name_th", "ailment_name_th");
            tableMapping.ColumnMappings.Add("ailment_name_en", "ailment_name_en");
            tableMapping.ColumnMappings.Add("ailment_comment", "ailment_comment");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_ailment] WHERE (([staff_ailment_id] = @Original_staff_ailment_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_ailment_name_th = 1 AND [ailment_name_th] IS NULL) OR ([ailment_name_th] = @Original_ailment_name_th)) AND ((@IsNull_ailment_name_en = 1 AND [ailment_name_en] IS NULL) OR ([ailment_name_en] = @Original_ailment_name_en)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_ailment_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_ailment_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ailment_name_th", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_th", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ailment_name_th", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_th", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ailment_name_en", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_en", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ailment_name_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_en", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_ailment] ([staff_ailment_id], [uname], [ailment_name_th], [ailment_name_en], [ailment_comment]) VALUES (@staff_ailment_id, @uname, @ailment_name_th, @ailment_name_en, @ailment_comment);
SELECT staff_ailment_id, uname, ailment_name_th, ailment_name_en, ailment_comment FROM staff_ailment WHERE (staff_ailment_id = @staff_ailment_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_ailment_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_ailment_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ailment_name_th", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_th", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ailment_name_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_en", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ailment_comment", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_ailment] SET [staff_ailment_id] = @staff_ailment_id, [uname] = @uname, [ailment_name_th] = @ailment_name_th, [ailment_name_en] = @ailment_name_en, [ailment_comment] = @ailment_comment WHERE (([staff_ailment_id] = @Original_staff_ailment_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_ailment_name_th = 1 AND [ailment_name_th] IS NULL) OR ([ailment_name_th] = @Original_ailment_name_th)) AND ((@IsNull_ailment_name_en = 1 AND [ailment_name_en] IS NULL) OR ([ailment_name_en] = @Original_ailment_name_en)));
SELECT staff_ailment_id, uname, ailment_name_th, ailment_name_en, ailment_comment FROM staff_ailment WHERE (staff_ailment_id = @staff_ailment_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_ailment_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_ailment_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ailment_name_th", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_th", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ailment_name_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_en", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ailment_comment", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_comment", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_ailment_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_ailment_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ailment_name_th", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_th", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ailment_name_th", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_th", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ailment_name_en", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_en", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ailment_name_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_name_en", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_ailment_id, uname, ailment_name_th, ailment_name_en, ailment_comment" +
                " FROM dbo.staff_ailment";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_ailmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_ailmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_ailmentDataTable dataTable = new netconceptDataSet.staff_ailmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_ailmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_ailment");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_ailment_id, string Original_uname, string Original_ailment_name_th, string Original_ailment_name_en) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_ailment_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_ailment_name_th == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ailment_name_th));
            }
            if ((Original_ailment_name_en == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ailment_name_en));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int staff_ailment_id, string uname, string ailment_name_th, string ailment_name_en, string ailment_comment) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_ailment_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((ailment_name_th == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ailment_name_th));
            }
            if ((ailment_name_en == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ailment_name_en));
            }
            if ((ailment_comment == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ailment_comment));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int staff_ailment_id, string uname, string ailment_name_th, string ailment_name_en, string ailment_comment, int Original_staff_ailment_id, string Original_uname, string Original_ailment_name_th, string Original_ailment_name_en) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_ailment_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((ailment_name_th == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ailment_name_th));
            }
            if ((ailment_name_en == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ailment_name_en));
            }
            if ((ailment_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ailment_comment));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_staff_ailment_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_uname));
            }
            if ((Original_ailment_name_th == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ailment_name_th));
            }
            if ((Original_ailment_name_en == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ailment_name_en));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_assessmentTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_assessmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_assessment";
            tableMapping.ColumnMappings.Add("assessment_id", "assessment_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("approve_by", "approve_by");
            tableMapping.ColumnMappings.Add("approve_date", "approve_date");
            tableMapping.ColumnMappings.Add("achievement", "achievement");
            tableMapping.ColumnMappings.Add("miss_goal", "miss_goal");
            tableMapping.ColumnMappings.Add("area_improvement", "area_improvement");
            tableMapping.ColumnMappings.Add("strength", "strength");
            tableMapping.ColumnMappings.Add("assessment_yr", "assessment_yr");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_assessment] WHERE (([assessment_id] = @Original_assessment_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_approve_by = 1 AND [approve_by] IS NULL) OR ([approve_by] = @Original_approve_by)) AND ((@IsNull_approve_date = 1 AND [approve_date] IS NULL) OR ([approve_date] = @Original_approve_date)) AND ((@IsNull_assessment_yr = 1 AND [assessment_yr] IS NULL) OR ([assessment_yr] = @Original_assessment_yr)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_assessment_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "assessment_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_approve_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_by", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_approve_by", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_by", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_approve_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_approve_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_assessment_yr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "assessment_yr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_assessment_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "assessment_yr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_assessment] ([uname], [approve_by], [approve_date], [achievement], [miss_goal], [area_improvement], [strength], [assessment_yr]) VALUES (@uname, @approve_by, @approve_date, @achievement, @miss_goal, @area_improvement, @strength, @assessment_yr);
SELECT assessment_id, uname, approve_by, approve_date, achievement, miss_goal, area_improvement, strength, assessment_yr FROM staff_assessment WHERE (assessment_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@approve_by", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_by", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@approve_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@achievement", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "achievement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@miss_goal", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "miss_goal", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@area_improvement", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "area_improvement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@strength", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "strength", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@assessment_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "assessment_yr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_assessment] SET [uname] = @uname, [approve_by] = @approve_by, [approve_date] = @approve_date, [achievement] = @achievement, [miss_goal] = @miss_goal, [area_improvement] = @area_improvement, [strength] = @strength, [assessment_yr] = @assessment_yr WHERE (([assessment_id] = @Original_assessment_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_approve_by = 1 AND [approve_by] IS NULL) OR ([approve_by] = @Original_approve_by)) AND ((@IsNull_approve_date = 1 AND [approve_date] IS NULL) OR ([approve_date] = @Original_approve_date)) AND ((@IsNull_assessment_yr = 1 AND [assessment_yr] IS NULL) OR ([assessment_yr] = @Original_assessment_yr)));
SELECT assessment_id, uname, approve_by, approve_date, achievement, miss_goal, area_improvement, strength, assessment_yr FROM staff_assessment WHERE (assessment_id = @assessment_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@approve_by", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_by", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@approve_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@achievement", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "achievement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@miss_goal", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "miss_goal", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@area_improvement", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "area_improvement", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@strength", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "strength", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@assessment_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "assessment_yr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_assessment_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "assessment_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_approve_by", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_by", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_approve_by", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_by", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_approve_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_approve_date", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "approve_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_assessment_yr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "assessment_yr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_assessment_yr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "assessment_yr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@assessment_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "assessment_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT assessment_id, uname, approve_by, approve_date, achievement, miss_goal, ar" +
                "ea_improvement, strength, assessment_yr FROM dbo.staff_assessment";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_assessmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_assessmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_assessmentDataTable dataTable = new netconceptDataSet.staff_assessmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_assessmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_assessment");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_assessment_id, string Original_uname, string Original_approve_by, System.Nullable<System.DateTime> Original_approve_date, string Original_assessment_yr) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_assessment_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_approve_by == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_approve_by));
            }
            if ((Original_approve_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_approve_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_assessment_yr == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_assessment_yr));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string approve_by, System.Nullable<System.DateTime> approve_date, string achievement, string miss_goal, string area_improvement, string strength, string assessment_yr) {
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((approve_by == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(approve_by));
            }
            if ((approve_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(approve_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((achievement == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(achievement));
            }
            if ((miss_goal == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(miss_goal));
            }
            if ((area_improvement == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(area_improvement));
            }
            if ((strength == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(strength));
            }
            if ((assessment_yr == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(assessment_yr));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uname, string approve_by, System.Nullable<System.DateTime> approve_date, string achievement, string miss_goal, string area_improvement, string strength, string assessment_yr, int Original_assessment_id, string Original_uname, string Original_approve_by, System.Nullable<System.DateTime> Original_approve_date, string Original_assessment_yr, int assessment_id) {
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((approve_by == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(approve_by));
            }
            if ((approve_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(approve_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((achievement == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(achievement));
            }
            if ((miss_goal == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(miss_goal));
            }
            if ((area_improvement == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(area_improvement));
            }
            if ((strength == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(strength));
            }
            if ((assessment_yr == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(assessment_yr));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_assessment_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_uname));
            }
            if ((Original_approve_by == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_approve_by));
            }
            if ((Original_approve_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_approve_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_assessment_yr == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_assessment_yr));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(assessment_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_competency_coreTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_competency_coreTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_competency_core";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("cc_id", "cc_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("score", "score");
            tableMapping.ColumnMappings.Add("createdate", "createdate");
            tableMapping.ColumnMappings.Add("updatedate", "updatedate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_competency_core] WHERE (([id] = @Original_id) AND ((@IsNull_cc_id = 1 AND [cc_id] IS NULL) OR ([cc_id] = @Original_cc_id)) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_score = 1 AND [score] IS NULL) OR ([score] = @Original_score)) AND ((@IsNull_createdate = 1 AND [createdate] IS NULL) OR ([createdate] = @Original_createdate)) AND ((@IsNull_updatedate = 1 AND [updatedate] IS NULL) OR ([updatedate] = @Original_updatedate)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cc_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cc_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_createdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_createdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_updatedate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_updatedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_competency_core] ([cc_id], [uname], [score], [createdate], [updatedate]) VALUES (@cc_id, @uname, @score, @createdate, @updatedate);
SELECT id, cc_id, uname, score, createdate, updatedate FROM staff_competency_core WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cc_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@createdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@updatedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_competency_core] SET [cc_id] = @cc_id, [uname] = @uname, [score] = @score, [createdate] = @createdate, [updatedate] = @updatedate WHERE (([id] = @Original_id) AND ((@IsNull_cc_id = 1 AND [cc_id] IS NULL) OR ([cc_id] = @Original_cc_id)) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_score = 1 AND [score] IS NULL) OR ([score] = @Original_score)) AND ((@IsNull_createdate = 1 AND [createdate] IS NULL) OR ([createdate] = @Original_createdate)) AND ((@IsNull_updatedate = 1 AND [updatedate] IS NULL) OR ([updatedate] = @Original_updatedate)));
SELECT id, cc_id, uname, score, createdate, updatedate FROM staff_competency_core WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cc_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@createdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@updatedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cc_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cc_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cc_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_createdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_createdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_updatedate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_updatedate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, cc_id, uname, score, createdate, updatedate FROM dbo.staff_competency_" +
                "core";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_competency_coreDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_competency_coreDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_competency_coreDataTable dataTable = new netconceptDataSet.staff_competency_coreDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_competency_coreDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_competency_core");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, System.Nullable<int> Original_cc_id, string Original_uname, System.Nullable<int> Original_score, System.Nullable<System.DateTime> Original_createdate, System.Nullable<System.DateTime> Original_updatedate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_cc_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_cc_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_uname));
            }
            if ((Original_score.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_score.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_createdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_createdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_updatedate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_updatedate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> cc_id, string uname, System.Nullable<int> score, System.Nullable<System.DateTime> createdate, System.Nullable<System.DateTime> updatedate) {
            if ((cc_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(cc_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((score.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(score.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((createdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(createdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((updatedate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(updatedate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> cc_id, string uname, System.Nullable<int> score, System.Nullable<System.DateTime> createdate, System.Nullable<System.DateTime> updatedate, int Original_id, System.Nullable<int> Original_cc_id, string Original_uname, System.Nullable<int> Original_score, System.Nullable<System.DateTime> Original_createdate, System.Nullable<System.DateTime> Original_updatedate, int id) {
            if ((cc_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(cc_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((score.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(score.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((createdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(createdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((updatedate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(updatedate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));
            if ((Original_cc_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_cc_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_uname));
            }
            if ((Original_score.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_score.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_createdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_createdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_updatedate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_updatedate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_competency_structuralTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_competency_structuralTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_competency_structural";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("cst_subject_id", "cst_subject_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("score", "score");
            tableMapping.ColumnMappings.Add("createdate", "createdate");
            tableMapping.ColumnMappings.Add("updatedate", "updatedate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_competency_structural] WHERE (([id] = @Original_id) AND ((@IsNull_cst_subject_id = 1 AND [cst_subject_id] IS NULL) OR ([cst_subject_id] = @Original_cst_subject_id)) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_score = 1 AND [score] IS NULL) OR ([score] = @Original_score)) AND ((@IsNull_createdate = 1 AND [createdate] IS NULL) OR ([createdate] = @Original_createdate)) AND ((@IsNull_updatedate = 1 AND [updatedate] IS NULL) OR ([updatedate] = @Original_updatedate)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_createdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_createdate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_updatedate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_updatedate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_competency_structural] ([cst_subject_id], [uname], [score], [createdate], [updatedate]) VALUES (@cst_subject_id, @uname, @score, @createdate, @updatedate);
SELECT id, cst_subject_id, uname, score, createdate, updatedate FROM staff_competency_structural WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@createdate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@updatedate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_competency_structural] SET [cst_subject_id] = @cst_subject_id, [uname] = @uname, [score] = @score, [createdate] = @createdate, [updatedate] = @updatedate WHERE (([id] = @Original_id) AND ((@IsNull_cst_subject_id = 1 AND [cst_subject_id] IS NULL) OR ([cst_subject_id] = @Original_cst_subject_id)) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_score = 1 AND [score] IS NULL) OR ([score] = @Original_score)) AND ((@IsNull_createdate = 1 AND [createdate] IS NULL) OR ([createdate] = @Original_createdate)) AND ((@IsNull_updatedate = 1 AND [updatedate] IS NULL) OR ([updatedate] = @Original_updatedate)));
SELECT id, cst_subject_id, uname, score, createdate, updatedate FROM staff_competency_structural WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@createdate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@updatedate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_subject_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_subject_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_score", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "score", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_createdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_createdate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "createdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_updatedate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_updatedate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "updatedate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, cst_subject_id, uname, score, createdate, updatedate FROM dbo.staff_co" +
                "mpetency_structural";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_competency_structuralDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_competency_structuralDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_competency_structuralDataTable dataTable = new netconceptDataSet.staff_competency_structuralDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_competency_structuralDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_competency_structural");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, System.Nullable<int> Original_cst_subject_id, string Original_uname, System.Nullable<int> Original_score, string Original_createdate, string Original_updatedate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_cst_subject_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_cst_subject_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_uname));
            }
            if ((Original_score.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_score.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_createdate == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_createdate));
            }
            if ((Original_updatedate == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_updatedate));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Nullable<int> cst_subject_id, string uname, System.Nullable<int> score, string createdate, string updatedate) {
            if ((cst_subject_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(cst_subject_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((score.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(score.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((createdate == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(createdate));
            }
            if ((updatedate == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(updatedate));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Nullable<int> cst_subject_id, string uname, System.Nullable<int> score, string createdate, string updatedate, int Original_id, System.Nullable<int> Original_cst_subject_id, string Original_uname, System.Nullable<int> Original_score, string Original_createdate, string Original_updatedate, int id) {
            if ((cst_subject_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(cst_subject_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((score.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(score.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((createdate == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(createdate));
            }
            if ((updatedate == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(updatedate));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));
            if ((Original_cst_subject_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_cst_subject_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_uname));
            }
            if ((Original_score.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_score.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_createdate == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_createdate));
            }
            if ((Original_updatedate == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_updatedate));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_educationTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_educationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_education";
            tableMapping.ColumnMappings.Add("staff_education_id", "staff_education_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("education_level", "education_level");
            tableMapping.ColumnMappings.Add("education_startdate", "education_startdate");
            tableMapping.ColumnMappings.Add("education_enddate", "education_enddate");
            tableMapping.ColumnMappings.Add("education_major", "education_major");
            tableMapping.ColumnMappings.Add("education_gpa", "education_gpa");
            tableMapping.ColumnMappings.Add("education_institute", "education_institute");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_education] WHERE (([staff_education_id] = @Original_staff_education_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_education_level = 1 AND [education_level] IS NULL) OR ([education_level] = @Original_education_level)) AND ((@IsNull_education_startdate = 1 AND [education_startdate] IS NULL) OR ([education_startdate] = @Original_education_startdate)) AND ((@IsNull_education_enddate = 1 AND [education_enddate] IS NULL) OR ([education_enddate] = @Original_education_enddate)) AND ((@IsNull_education_major = 1 AND [education_major] IS NULL) OR ([education_major] = @Original_education_major)) AND ((@IsNull_education_gpa = 1 AND [education_gpa] IS NULL) OR ([education_gpa] = @Original_education_gpa)) AND ((@IsNull_education_institute = 1 AND [education_institute] IS NULL) OR ([education_institute] = @Original_education_institute)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_education_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_education_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_level", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_level", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_level", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_level", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "education_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "education_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_major", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_major", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_major", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_major", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_gpa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_gpa", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_gpa", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 3, "education_gpa", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_institute", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_institute", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_institute", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_institute", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_education] ([staff_education_id], [uname], [education_level], [education_startdate], [education_enddate], [education_major], [education_gpa], [education_institute]) VALUES (@staff_education_id, @uname, @education_level, @education_startdate, @education_enddate, @education_major, @education_gpa, @education_institute);
SELECT staff_education_id, uname, education_level, education_startdate, education_enddate, education_major, education_gpa, education_institute FROM staff_education WHERE (staff_education_id = @staff_education_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_education_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_education_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_level", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_level", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "education_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "education_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_major", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_major", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_gpa", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 3, "education_gpa", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_institute", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_institute", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_education] SET [staff_education_id] = @staff_education_id, [uname] = @uname, [education_level] = @education_level, [education_startdate] = @education_startdate, [education_enddate] = @education_enddate, [education_major] = @education_major, [education_gpa] = @education_gpa, [education_institute] = @education_institute WHERE (([staff_education_id] = @Original_staff_education_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_education_level = 1 AND [education_level] IS NULL) OR ([education_level] = @Original_education_level)) AND ((@IsNull_education_startdate = 1 AND [education_startdate] IS NULL) OR ([education_startdate] = @Original_education_startdate)) AND ((@IsNull_education_enddate = 1 AND [education_enddate] IS NULL) OR ([education_enddate] = @Original_education_enddate)) AND ((@IsNull_education_major = 1 AND [education_major] IS NULL) OR ([education_major] = @Original_education_major)) AND ((@IsNull_education_gpa = 1 AND [education_gpa] IS NULL) OR ([education_gpa] = @Original_education_gpa)) AND ((@IsNull_education_institute = 1 AND [education_institute] IS NULL) OR ([education_institute] = @Original_education_institute)));
SELECT staff_education_id, uname, education_level, education_startdate, education_enddate, education_major, education_gpa, education_institute FROM staff_education WHERE (staff_education_id = @staff_education_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_education_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_education_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_level", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_level", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "education_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "education_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_major", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_major", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_gpa", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 3, "education_gpa", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_institute", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_institute", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_education_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_education_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_level", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_level", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_level", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_level", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "education_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "education_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_major", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_major", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_major", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_major", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_gpa", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_gpa", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_gpa", System.Data.SqlDbType.Decimal, 0, System.Data.ParameterDirection.Input, 10, 3, "education_gpa", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_institute", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_institute", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_institute", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "education_institute", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_education_id, uname, education_level, education_startdate, education" +
                "_enddate, education_major, education_gpa, education_institute FROM dbo.staff_edu" +
                "cation";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_educationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_educationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_educationDataTable dataTable = new netconceptDataSet.staff_educationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_educationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_education");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_education_id, string Original_uname, string Original_education_level, System.Nullable<System.DateTime> Original_education_startdate, System.Nullable<System.DateTime> Original_education_enddate, string Original_education_major, System.Nullable<decimal> Original_education_gpa, string Original_education_institute) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_education_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_education_level == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_education_level));
            }
            if ((Original_education_startdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_education_startdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_education_enddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_education_enddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_education_major == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_education_major));
            }
            if ((Original_education_gpa.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_education_gpa.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_education_institute == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_education_institute));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int staff_education_id, string uname, string education_level, System.Nullable<System.DateTime> education_startdate, System.Nullable<System.DateTime> education_enddate, string education_major, System.Nullable<decimal> education_gpa, string education_institute) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_education_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((education_level == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(education_level));
            }
            if ((education_startdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(education_startdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((education_enddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(education_enddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((education_major == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(education_major));
            }
            if ((education_gpa.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(education_gpa.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((education_institute == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(education_institute));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int staff_education_id, 
                    string uname, 
                    string education_level, 
                    System.Nullable<System.DateTime> education_startdate, 
                    System.Nullable<System.DateTime> education_enddate, 
                    string education_major, 
                    System.Nullable<decimal> education_gpa, 
                    string education_institute, 
                    int Original_staff_education_id, 
                    string Original_uname, 
                    string Original_education_level, 
                    System.Nullable<System.DateTime> Original_education_startdate, 
                    System.Nullable<System.DateTime> Original_education_enddate, 
                    string Original_education_major, 
                    System.Nullable<decimal> Original_education_gpa, 
                    string Original_education_institute) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_education_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((education_level == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(education_level));
            }
            if ((education_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(education_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((education_enddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(education_enddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((education_major == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(education_major));
            }
            if ((education_gpa.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(education_gpa.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((education_institute == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(education_institute));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_staff_education_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_uname));
            }
            if ((Original_education_level == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_education_level));
            }
            if ((Original_education_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_education_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_education_enddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_education_enddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_education_major == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_education_major));
            }
            if ((Original_education_gpa.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_education_gpa.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_education_institute == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_education_institute));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_familyTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_familyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_family";
            tableMapping.ColumnMappings.Add("family_id", "family_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("family_salutation", "family_salutation");
            tableMapping.ColumnMappings.Add("family_name", "family_name");
            tableMapping.ColumnMappings.Add("family_surname", "family_surname");
            tableMapping.ColumnMappings.Add("family_relation", "family_relation");
            tableMapping.ColumnMappings.Add("family_occupation", "family_occupation");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_family] WHERE (([family_id] = @Original_family_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_family_salutation = 1 AND [family_salutation] IS NULL) OR ([family_salutation] = @Original_family_salutation)) AND ((@IsNull_family_name = 1 AND [family_name] IS NULL) OR ([family_name] = @Original_family_name)) AND ((@IsNull_family_surname = 1 AND [family_surname] IS NULL) OR ([family_surname] = @Original_family_surname)) AND ((@IsNull_family_relation = 1 AND [family_relation] IS NULL) OR ([family_relation] = @Original_family_relation)) AND ((@IsNull_family_occupation = 1 AND [family_occupation] IS NULL) OR ([family_occupation] = @Original_family_occupation)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_salutation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_salutation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_salutation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_salutation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_surname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_surname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_surname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_surname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_relation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_relation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_occupation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_occupation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_occupation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_occupation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_family] ([family_id], [uname], [family_salutation], [family_name], [family_surname], [family_relation], [family_occupation]) VALUES (@family_id, @uname, @family_salutation, @family_name, @family_surname, @family_relation, @family_occupation);
SELECT family_id, uname, family_salutation, family_name, family_surname, family_relation, family_occupation FROM staff_family WHERE (family_id = @family_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_salutation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_salutation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_surname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_surname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_relation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_occupation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_occupation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_family] SET [family_id] = @family_id, [uname] = @uname, [family_salutation] = @family_salutation, [family_name] = @family_name, [family_surname] = @family_surname, [family_relation] = @family_relation, [family_occupation] = @family_occupation WHERE (([family_id] = @Original_family_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_family_salutation = 1 AND [family_salutation] IS NULL) OR ([family_salutation] = @Original_family_salutation)) AND ((@IsNull_family_name = 1 AND [family_name] IS NULL) OR ([family_name] = @Original_family_name)) AND ((@IsNull_family_surname = 1 AND [family_surname] IS NULL) OR ([family_surname] = @Original_family_surname)) AND ((@IsNull_family_relation = 1 AND [family_relation] IS NULL) OR ([family_relation] = @Original_family_relation)) AND ((@IsNull_family_occupation = 1 AND [family_occupation] IS NULL) OR ([family_occupation] = @Original_family_occupation)));
SELECT family_id, uname, family_salutation, family_name, family_surname, family_relation, family_occupation FROM staff_family WHERE (family_id = @family_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_salutation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_salutation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_surname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_surname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_relation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_occupation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_occupation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_salutation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_salutation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_salutation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_salutation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_surname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_surname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_surname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_surname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_relation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_relation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_relation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_relation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_occupation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_occupation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_occupation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "family_occupation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT family_id, uname, family_salutation, family_name, family_surname, family_r" +
                "elation, family_occupation FROM dbo.staff_family";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_familyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_familyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_familyDataTable dataTable = new netconceptDataSet.staff_familyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_familyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_family");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_family_id, string Original_uname, string Original_family_salutation, string Original_family_name, string Original_family_surname, string Original_family_relation, string Original_family_occupation) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_family_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_family_salutation == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_family_salutation));
            }
            if ((Original_family_name == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_family_name));
            }
            if ((Original_family_surname == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_family_surname));
            }
            if ((Original_family_relation == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_family_relation));
            }
            if ((Original_family_occupation == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_family_occupation));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int family_id, string uname, string family_salutation, string family_name, string family_surname, string family_relation, string family_occupation) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(family_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((family_salutation == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(family_salutation));
            }
            if ((family_name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(family_name));
            }
            if ((family_surname == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(family_surname));
            }
            if ((family_relation == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(family_relation));
            }
            if ((family_occupation == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(family_occupation));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int family_id, string uname, string family_salutation, string family_name, string family_surname, string family_relation, string family_occupation, int Original_family_id, string Original_uname, string Original_family_salutation, string Original_family_name, string Original_family_surname, string Original_family_relation, string Original_family_occupation) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(family_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((family_salutation == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(family_salutation));
            }
            if ((family_name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(family_name));
            }
            if ((family_surname == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(family_surname));
            }
            if ((family_relation == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(family_relation));
            }
            if ((family_occupation == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(family_occupation));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_family_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_uname));
            }
            if ((Original_family_salutation == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_family_salutation));
            }
            if ((Original_family_name == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_family_name));
            }
            if ((Original_family_surname == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_family_surname));
            }
            if ((Original_family_relation == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_family_relation));
            }
            if ((Original_family_occupation == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_family_occupation));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_healhistoryTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_healhistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_healhistory";
            tableMapping.ColumnMappings.Add("staff_healhistory_id", "staff_healhistory_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("healhistory_hospital", "healhistory_hospital");
            tableMapping.ColumnMappings.Add("healhistory_startdate", "healhistory_startdate");
            tableMapping.ColumnMappings.Add("healhistory_enddate", "healhistory_enddate");
            tableMapping.ColumnMappings.Add("healhistory_detail", "healhistory_detail");
            tableMapping.ColumnMappings.Add("healhistory_expense", "healhistory_expense");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_healhistory] WHERE (([staff_healhistory_id] = @Original_staff_healhistory_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_healhistory_hospital = 1 AND [healhistory_hospital] IS NULL) OR ([healhistory_hospital] = @Original_healhistory_hospital)) AND ((@IsNull_healhistory_startdate = 1 AND [healhistory_startdate] IS NULL) OR ([healhistory_startdate] = @Original_healhistory_startdate)) AND ((@IsNull_healhistory_enddate = 1 AND [healhistory_enddate] IS NULL) OR ([healhistory_enddate] = @Original_healhistory_enddate)) AND ((@IsNull_healhistory_detail = 1 AND [healhistory_detail] IS NULL) OR ([healhistory_detail] = @Original_healhistory_detail)) AND ((@IsNull_healhistory_expense = 1 AND [healhistory_expense] IS NULL) OR ([healhistory_expense] = @Original_healhistory_expense)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_healhistory_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_healhistory_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_hospital", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_hospital", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_hospital", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_hospital", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_detail", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_detail", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_detail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_detail", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_expense", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_expense", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_expense", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_expense", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_healhistory] ([staff_healhistory_id], [uname], [healhistory_hospital], [healhistory_startdate], [healhistory_enddate], [healhistory_detail], [healhistory_expense]) VALUES (@staff_healhistory_id, @uname, @healhistory_hospital, @healhistory_startdate, @healhistory_enddate, @healhistory_detail, @healhistory_expense);
SELECT staff_healhistory_id, uname, healhistory_hospital, healhistory_startdate, healhistory_enddate, healhistory_detail, healhistory_expense FROM staff_healhistory WHERE (staff_healhistory_id = @staff_healhistory_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_healhistory_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_healhistory_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_hospital", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_hospital", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_detail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_detail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_expense", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_expense", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_healhistory] SET [staff_healhistory_id] = @staff_healhistory_id, [uname] = @uname, [healhistory_hospital] = @healhistory_hospital, [healhistory_startdate] = @healhistory_startdate, [healhistory_enddate] = @healhistory_enddate, [healhistory_detail] = @healhistory_detail, [healhistory_expense] = @healhistory_expense WHERE (([staff_healhistory_id] = @Original_staff_healhistory_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_healhistory_hospital = 1 AND [healhistory_hospital] IS NULL) OR ([healhistory_hospital] = @Original_healhistory_hospital)) AND ((@IsNull_healhistory_startdate = 1 AND [healhistory_startdate] IS NULL) OR ([healhistory_startdate] = @Original_healhistory_startdate)) AND ((@IsNull_healhistory_enddate = 1 AND [healhistory_enddate] IS NULL) OR ([healhistory_enddate] = @Original_healhistory_enddate)) AND ((@IsNull_healhistory_detail = 1 AND [healhistory_detail] IS NULL) OR ([healhistory_detail] = @Original_healhistory_detail)) AND ((@IsNull_healhistory_expense = 1 AND [healhistory_expense] IS NULL) OR ([healhistory_expense] = @Original_healhistory_expense)));
SELECT staff_healhistory_id, uname, healhistory_hospital, healhistory_startdate, healhistory_enddate, healhistory_detail, healhistory_expense FROM staff_healhistory WHERE (staff_healhistory_id = @staff_healhistory_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_healhistory_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_healhistory_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_hospital", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_hospital", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_detail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_detail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_expense", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_expense", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_healhistory_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_healhistory_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_hospital", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_hospital", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_hospital", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_hospital", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_detail", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_detail", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_detail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_detail", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_expense", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_expense", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_expense", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_expense", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_healhistory_id, uname, healhistory_hospital, healhistory_startdate, " +
                "healhistory_enddate, healhistory_detail, healhistory_expense FROM dbo.staff_heal" +
                "history";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_healhistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_healhistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_healhistoryDataTable dataTable = new netconceptDataSet.staff_healhistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_healhistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_healhistory");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_healhistory_id, string Original_uname, string Original_healhistory_hospital, System.Nullable<System.DateTime> Original_healhistory_startdate, System.Nullable<System.DateTime> Original_healhistory_enddate, string Original_healhistory_detail, string Original_healhistory_expense) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_healhistory_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_healhistory_hospital == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_healhistory_hospital));
            }
            if ((Original_healhistory_startdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_healhistory_startdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_healhistory_enddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_healhistory_enddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_healhistory_detail == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_healhistory_detail));
            }
            if ((Original_healhistory_expense == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_healhistory_expense));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int staff_healhistory_id, string uname, string healhistory_hospital, System.Nullable<System.DateTime> healhistory_startdate, System.Nullable<System.DateTime> healhistory_enddate, string healhistory_detail, string healhistory_expense) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_healhistory_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((healhistory_hospital == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(healhistory_hospital));
            }
            if ((healhistory_startdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(healhistory_startdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((healhistory_enddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(healhistory_enddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((healhistory_detail == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(healhistory_detail));
            }
            if ((healhistory_expense == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(healhistory_expense));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int staff_healhistory_id, string uname, string healhistory_hospital, System.Nullable<System.DateTime> healhistory_startdate, System.Nullable<System.DateTime> healhistory_enddate, string healhistory_detail, string healhistory_expense, int Original_staff_healhistory_id, string Original_uname, string Original_healhistory_hospital, System.Nullable<System.DateTime> Original_healhistory_startdate, System.Nullable<System.DateTime> Original_healhistory_enddate, string Original_healhistory_detail, string Original_healhistory_expense) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_healhistory_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((healhistory_hospital == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(healhistory_hospital));
            }
            if ((healhistory_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(healhistory_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((healhistory_enddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(healhistory_enddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((healhistory_detail == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(healhistory_detail));
            }
            if ((healhistory_expense == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(healhistory_expense));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_staff_healhistory_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_uname));
            }
            if ((Original_healhistory_hospital == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_healhistory_hospital));
            }
            if ((Original_healhistory_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_healhistory_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_healhistory_enddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_healhistory_enddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            if ((Original_healhistory_detail == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_healhistory_detail));
            }
            if ((Original_healhistory_expense == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_healhistory_expense));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_hipotTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_hipotTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_hipot";
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("status_hipot", "status_hipot");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[staff_hipot] WHERE (([uname] = @Original_uname) AND ((@IsNull_" +
                "status_hipot = 1 AND [status_hipot] IS NULL) OR ([status_hipot] = @Original_stat" +
                "us_hipot)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_status_hipot", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "status_hipot", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_status_hipot", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "status_hipot", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[staff_hipot] ([uname], [status_hipot]) VALUES (@uname, @status" +
                "_hipot);\r\nSELECT uname, status_hipot FROM staff_hipot WHERE (uname = @uname)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status_hipot", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "status_hipot", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_hipot] SET [uname] = @uname, [status_hipot] = @status_hipot WHERE (([uname] = @Original_uname) AND ((@IsNull_status_hipot = 1 AND [status_hipot] IS NULL) OR ([status_hipot] = @Original_status_hipot)));
SELECT uname, status_hipot FROM staff_hipot WHERE (uname = @uname)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status_hipot", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "status_hipot", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_status_hipot", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "status_hipot", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_status_hipot", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "status_hipot", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uname, status_hipot FROM dbo.staff_hipot";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_hipotDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_hipotDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_hipotDataTable dataTable = new netconceptDataSet.staff_hipotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_hipotDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_hipot");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uname, System.Nullable<bool> Original_status_hipot) {
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uname));
            }
            if ((Original_status_hipot.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_status_hipot.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, System.Nullable<bool> status_hipot) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((status_hipot.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(status_hipot.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uname, System.Nullable<bool> status_hipot, string Original_uname, System.Nullable<bool> Original_status_hipot) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((status_hipot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(status_hipot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_status_hipot.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(Original_status_hipot.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_indexTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_indexTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_index";
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("pwd", "pwd");
            tableMapping.ColumnMappings.Add("company_id", "company_id");
            tableMapping.ColumnMappings.Add("department_id", "department_id");
            tableMapping.ColumnMappings.Add("staff_position", "staff_position");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_index] WHERE (([uname] = @Original_uname) AND ((@IsNull_pwd = 1 AND [pwd] IS NULL) OR ([pwd] = @Original_pwd)) AND ((@IsNull_company_id = 1 AND [company_id] IS NULL) OR ([company_id] = @Original_company_id)) AND ((@IsNull_department_id = 1 AND [department_id] IS NULL) OR ([department_id] = @Original_department_id)) AND ((@IsNull_staff_position = 1 AND [staff_position] IS NULL) OR ([staff_position] = @Original_staff_position)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_pwd", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_pwd", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_index] ([uname], [pwd], [company_id], [department_id], [staff_position]) VALUES (@uname, @pwd, @company_id, @department_id, @staff_position);
SELECT uname, pwd, company_id, department_id, staff_position FROM staff_index WHERE (uname = @uname)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@pwd", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_index] SET [uname] = @uname, [pwd] = @pwd, [company_id] = @company_id, [department_id] = @department_id, [staff_position] = @staff_position WHERE (([uname] = @Original_uname) AND ((@IsNull_pwd = 1 AND [pwd] IS NULL) OR ([pwd] = @Original_pwd)) AND ((@IsNull_company_id = 1 AND [company_id] IS NULL) OR ([company_id] = @Original_company_id)) AND ((@IsNull_department_id = 1 AND [department_id] IS NULL) OR ([department_id] = @Original_department_id)) AND ((@IsNull_staff_position = 1 AND [staff_position] IS NULL) OR ([staff_position] = @Original_staff_position)));
SELECT uname, pwd, company_id, department_id, staff_position FROM staff_index WHERE (uname = @uname)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@pwd", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_pwd", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_pwd", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "pwd", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uname, pwd, company_id, department_id, staff_position FROM dbo.staff_index" +
                "";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_indexDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_indexDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_indexDataTable dataTable = new netconceptDataSet.staff_indexDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_indexDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_index");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uname, string Original_pwd, string Original_company_id, System.Nullable<int> Original_department_id, System.Nullable<int> Original_staff_position) {
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uname));
            }
            if ((Original_pwd == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_pwd));
            }
            if ((Original_company_id == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_company_id));
            }
            if ((Original_department_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_department_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_staff_position.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_staff_position.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string pwd, string company_id, System.Nullable<int> department_id, System.Nullable<int> staff_position) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((pwd == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(pwd));
            }
            if ((company_id == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(company_id));
            }
            if ((department_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(department_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((staff_position.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(staff_position.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uname, string pwd, string company_id, System.Nullable<int> department_id, System.Nullable<int> staff_position, string Original_uname, string Original_pwd, string Original_company_id, System.Nullable<int> Original_department_id, System.Nullable<int> Original_staff_position) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((pwd == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(pwd));
            }
            if ((company_id == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(company_id));
            }
            if ((department_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(department_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((staff_position.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(staff_position.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_uname));
            }
            if ((Original_pwd == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_pwd));
            }
            if ((Original_company_id == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_company_id));
            }
            if ((Original_department_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_department_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_staff_position.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_staff_position.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_infoTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_infoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_info";
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("staff_id", "staff_id");
            tableMapping.ColumnMappings.Add("staff_salutation", "staff_salutation");
            tableMapping.ColumnMappings.Add("staff_name", "staff_name");
            tableMapping.ColumnMappings.Add("staff_surname", "staff_surname");
            tableMapping.ColumnMappings.Add("staff_salutation_en", "staff_salutation_en");
            tableMapping.ColumnMappings.Add("staff_name_en", "staff_name_en");
            tableMapping.ColumnMappings.Add("staff_surname_en", "staff_surname_en");
            tableMapping.ColumnMappings.Add("staff_gender", "staff_gender");
            tableMapping.ColumnMappings.Add("staff_height", "staff_height");
            tableMapping.ColumnMappings.Add("staff_weight", "staff_weight");
            tableMapping.ColumnMappings.Add("staff_bloodtype", "staff_bloodtype");
            tableMapping.ColumnMappings.Add("staff_origin", "staff_origin");
            tableMapping.ColumnMappings.Add("staff_nationality", "staff_nationality");
            tableMapping.ColumnMappings.Add("staff_religion", "staff_religion");
            tableMapping.ColumnMappings.Add("staff_birthcountry", "staff_birthcountry");
            tableMapping.ColumnMappings.Add("staff_birthprovince", "staff_birthprovince");
            tableMapping.ColumnMappings.Add("staff_birthdate", "staff_birthdate");
            tableMapping.ColumnMappings.Add("staff_marital_status", "staff_marital_status");
            tableMapping.ColumnMappings.Add("staff_marital_registdate", "staff_marital_registdate");
            tableMapping.ColumnMappings.Add("staff_photo", "staff_photo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[staff_info] WHERE (([uname] = @Original_uname) AND ((@IsNull_s" +
                "taff_id = 1 AND [staff_id] IS NULL) OR ([staff_id] = @Original_staff_id)) AND ((" +
                "@IsNull_staff_salutation = 1 AND [staff_salutation] IS NULL) OR ([staff_salutati" +
                "on] = @Original_staff_salutation)) AND ((@IsNull_staff_name = 1 AND [staff_name]" +
                " IS NULL) OR ([staff_name] = @Original_staff_name)) AND ((@IsNull_staff_surname " +
                "= 1 AND [staff_surname] IS NULL) OR ([staff_surname] = @Original_staff_surname))" +
                " AND ((@IsNull_staff_salutation_en = 1 AND [staff_salutation_en] IS NULL) OR ([s" +
                "taff_salutation_en] = @Original_staff_salutation_en)) AND ((@IsNull_staff_name_e" +
                "n = 1 AND [staff_name_en] IS NULL) OR ([staff_name_en] = @Original_staff_name_en" +
                ")) AND ((@IsNull_staff_surname_en = 1 AND [staff_surname_en] IS NULL) OR ([staff" +
                "_surname_en] = @Original_staff_surname_en)) AND ((@IsNull_staff_gender = 1 AND [" +
                "staff_gender] IS NULL) OR ([staff_gender] = @Original_staff_gender)) AND ((@IsNu" +
                "ll_staff_height = 1 AND [staff_height] IS NULL) OR ([staff_height] = @Original_s" +
                "taff_height)) AND ((@IsNull_staff_weight = 1 AND [staff_weight] IS NULL) OR ([st" +
                "aff_weight] = @Original_staff_weight)) AND ((@IsNull_staff_bloodtype = 1 AND [st" +
                "aff_bloodtype] IS NULL) OR ([staff_bloodtype] = @Original_staff_bloodtype)) AND " +
                "((@IsNull_staff_origin = 1 AND [staff_origin] IS NULL) OR ([staff_origin] = @Ori" +
                "ginal_staff_origin)) AND ((@IsNull_staff_nationality = 1 AND [staff_nationality]" +
                " IS NULL) OR ([staff_nationality] = @Original_staff_nationality)) AND ((@IsNull_" +
                "staff_religion = 1 AND [staff_religion] IS NULL) OR ([staff_religion] = @Origina" +
                "l_staff_religion)) AND ((@IsNull_staff_birthcountry = 1 AND [staff_birthcountry]" +
                " IS NULL) OR ([staff_birthcountry] = @Original_staff_birthcountry)) AND ((@IsNul" +
                "l_staff_birthprovince = 1 AND [staff_birthprovince] IS NULL) OR ([staff_birthpro" +
                "vince] = @Original_staff_birthprovince)) AND ((@IsNull_staff_birthdate = 1 AND [" +
                "staff_birthdate] IS NULL) OR ([staff_birthdate] = @Original_staff_birthdate)) AN" +
                "D ((@IsNull_staff_marital_status = 1 AND [staff_marital_status] IS NULL) OR ([st" +
                "aff_marital_status] = @Original_staff_marital_status)) AND ((@IsNull_staff_marit" +
                "al_registdate = 1 AND [staff_marital_registdate] IS NULL) OR ([staff_marital_reg" +
                "istdate] = @Original_staff_marital_registdate)) AND ((@IsNull_staff_photo = 1 AN" +
                "D [staff_photo] IS NULL) OR ([staff_photo] = @Original_staff_photo)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_salutation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_salutation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_surname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_surname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_salutation_en", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation_en", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_salutation_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation_en", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_name_en", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name_en", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_name_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name_en", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_surname_en", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname_en", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_surname_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname_en", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_gender", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_gender", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_gender", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_gender", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_height", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_height", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_height", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_height", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_weight", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_weight", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_bloodtype", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_bloodtype", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_bloodtype", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_bloodtype", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_origin", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_origin", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_origin", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_origin", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_nationality", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nationality", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_nationality", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nationality", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_religion", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_religion", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_religion", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_religion", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_birthcountry", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthcountry", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_birthcountry", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthcountry", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_birthprovince", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthprovince", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_birthprovince", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthprovince", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_birthdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_birthdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_marital_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_marital_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_marital_registdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_registdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_marital_registdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_registdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_photo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_photo", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_photo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_photo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_info] ([uname], [staff_id], [staff_salutation], [staff_name], [staff_surname], [staff_salutation_en], [staff_name_en], [staff_surname_en], [staff_gender], [staff_height], [staff_weight], [staff_bloodtype], [staff_origin], [staff_nationality], [staff_religion], [staff_birthcountry], [staff_birthprovince], [staff_birthdate], [staff_marital_status], [staff_marital_registdate], [staff_photo]) VALUES (@uname, @staff_id, @staff_salutation, @staff_name, @staff_surname, @staff_salutation_en, @staff_name_en, @staff_surname_en, @staff_gender, @staff_height, @staff_weight, @staff_bloodtype, @staff_origin, @staff_nationality, @staff_religion, @staff_birthcountry, @staff_birthprovince, @staff_birthdate, @staff_marital_status, @staff_marital_registdate, @staff_photo);
SELECT uname, staff_id, staff_salutation, staff_name, staff_surname, staff_salutation_en, staff_name_en, staff_surname_en, staff_gender, staff_height, staff_weight, staff_bloodtype, staff_origin, staff_nationality, staff_religion, staff_birthcountry, staff_birthprovince, staff_birthdate, staff_marital_status, staff_marital_registdate, staff_photo FROM staff_info WHERE (uname = @uname)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_salutation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_surname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_salutation_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation_en", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_name_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name_en", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_surname_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname_en", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_gender", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_gender", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_height", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_height", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_weight", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_bloodtype", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_bloodtype", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_origin", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_origin", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_nationality", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nationality", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_religion", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_religion", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_birthcountry", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthcountry", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_birthprovince", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthprovince", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_birthdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_marital_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_marital_registdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_registdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_photo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_photo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[staff_info] SET [uname] = @uname, [staff_id] = @staff_id, [staff_sa" +
                "lutation] = @staff_salutation, [staff_name] = @staff_name, [staff_surname] = @st" +
                "aff_surname, [staff_salutation_en] = @staff_salutation_en, [staff_name_en] = @st" +
                "aff_name_en, [staff_surname_en] = @staff_surname_en, [staff_gender] = @staff_gen" +
                "der, [staff_height] = @staff_height, [staff_weight] = @staff_weight, [staff_bloo" +
                "dtype] = @staff_bloodtype, [staff_origin] = @staff_origin, [staff_nationality] =" +
                " @staff_nationality, [staff_religion] = @staff_religion, [staff_birthcountry] = " +
                "@staff_birthcountry, [staff_birthprovince] = @staff_birthprovince, [staff_birthd" +
                "ate] = @staff_birthdate, [staff_marital_status] = @staff_marital_status, [staff_" +
                "marital_registdate] = @staff_marital_registdate, [staff_photo] = @staff_photo WH" +
                "ERE (([uname] = @Original_uname) AND ((@IsNull_staff_id = 1 AND [staff_id] IS NU" +
                "LL) OR ([staff_id] = @Original_staff_id)) AND ((@IsNull_staff_salutation = 1 AND" +
                " [staff_salutation] IS NULL) OR ([staff_salutation] = @Original_staff_salutation" +
                ")) AND ((@IsNull_staff_name = 1 AND [staff_name] IS NULL) OR ([staff_name] = @Or" +
                "iginal_staff_name)) AND ((@IsNull_staff_surname = 1 AND [staff_surname] IS NULL)" +
                " OR ([staff_surname] = @Original_staff_surname)) AND ((@IsNull_staff_salutation_" +
                "en = 1 AND [staff_salutation_en] IS NULL) OR ([staff_salutation_en] = @Original_" +
                "staff_salutation_en)) AND ((@IsNull_staff_name_en = 1 AND [staff_name_en] IS NUL" +
                "L) OR ([staff_name_en] = @Original_staff_name_en)) AND ((@IsNull_staff_surname_e" +
                "n = 1 AND [staff_surname_en] IS NULL) OR ([staff_surname_en] = @Original_staff_s" +
                "urname_en)) AND ((@IsNull_staff_gender = 1 AND [staff_gender] IS NULL) OR ([staf" +
                "f_gender] = @Original_staff_gender)) AND ((@IsNull_staff_height = 1 AND [staff_h" +
                "eight] IS NULL) OR ([staff_height] = @Original_staff_height)) AND ((@IsNull_staf" +
                "f_weight = 1 AND [staff_weight] IS NULL) OR ([staff_weight] = @Original_staff_we" +
                "ight)) AND ((@IsNull_staff_bloodtype = 1 AND [staff_bloodtype] IS NULL) OR ([sta" +
                "ff_bloodtype] = @Original_staff_bloodtype)) AND ((@IsNull_staff_origin = 1 AND [" +
                "staff_origin] IS NULL) OR ([staff_origin] = @Original_staff_origin)) AND ((@IsNu" +
                "ll_staff_nationality = 1 AND [staff_nationality] IS NULL) OR ([staff_nationality" +
                "] = @Original_staff_nationality)) AND ((@IsNull_staff_religion = 1 AND [staff_re" +
                "ligion] IS NULL) OR ([staff_religion] = @Original_staff_religion)) AND ((@IsNull" +
                "_staff_birthcountry = 1 AND [staff_birthcountry] IS NULL) OR ([staff_birthcountr" +
                "y] = @Original_staff_birthcountry)) AND ((@IsNull_staff_birthprovince = 1 AND [s" +
                "taff_birthprovince] IS NULL) OR ([staff_birthprovince] = @Original_staff_birthpr" +
                "ovince)) AND ((@IsNull_staff_birthdate = 1 AND [staff_birthdate] IS NULL) OR ([s" +
                "taff_birthdate] = @Original_staff_birthdate)) AND ((@IsNull_staff_marital_status" +
                " = 1 AND [staff_marital_status] IS NULL) OR ([staff_marital_status] = @Original_" +
                "staff_marital_status)) AND ((@IsNull_staff_marital_registdate = 1 AND [staff_mar" +
                "ital_registdate] IS NULL) OR ([staff_marital_registdate] = @Original_staff_marit" +
                "al_registdate)) AND ((@IsNull_staff_photo = 1 AND [staff_photo] IS NULL) OR ([st" +
                "aff_photo] = @Original_staff_photo)));\r\nSELECT uname, staff_id, staff_salutation" +
                ", staff_name, staff_surname, staff_salutation_en, staff_name_en, staff_surname_e" +
                "n, staff_gender, staff_height, staff_weight, staff_bloodtype, staff_origin, staf" +
                "f_nationality, staff_religion, staff_birthcountry, staff_birthprovince, staff_bi" +
                "rthdate, staff_marital_status, staff_marital_registdate, staff_photo FROM staff_" +
                "info WHERE (uname = @uname)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_salutation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_surname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_salutation_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation_en", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_name_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name_en", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_surname_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname_en", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_gender", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_gender", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_height", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_height", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_weight", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_bloodtype", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_bloodtype", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_origin", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_origin", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_nationality", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nationality", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_religion", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_religion", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_birthcountry", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthcountry", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_birthprovince", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthprovince", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_birthdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_marital_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_marital_registdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_registdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_photo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_photo", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_salutation", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_salutation", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_surname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_surname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_salutation_en", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation_en", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_salutation_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_salutation_en", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_name_en", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name_en", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_name_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_name_en", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_surname_en", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname_en", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_surname_en", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_surname_en", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_gender", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_gender", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_gender", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_gender", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_height", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_height", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_height", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_height", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_weight", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_weight", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_weight", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_bloodtype", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_bloodtype", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_bloodtype", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_bloodtype", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_origin", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_origin", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_origin", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_origin", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_nationality", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nationality", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_nationality", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nationality", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_religion", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_religion", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_religion", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_religion", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_birthcountry", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthcountry", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_birthcountry", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthcountry", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_birthprovince", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthprovince", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_birthprovince", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthprovince", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_birthdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_birthdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_birthdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_marital_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_marital_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_marital_registdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_registdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_marital_registdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_marital_registdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_photo", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_photo", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_photo", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_photo", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT uname, staff_id, staff_salutation, staff_name, staff_surname, staff_salutation_en, staff_name_en, staff_surname_en, staff_gender, staff_height, staff_weight, staff_bloodtype, staff_origin, staff_nationality, staff_religion, staff_birthcountry, staff_birthprovince, staff_birthdate, staff_marital_status, staff_marital_registdate, staff_photo FROM dbo.staff_info";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_infoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_infoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_infoDataTable dataTable = new netconceptDataSet.staff_infoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_infoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_info");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_uname, 
                    string Original_staff_id, 
                    string Original_staff_salutation, 
                    string Original_staff_name, 
                    string Original_staff_surname, 
                    string Original_staff_salutation_en, 
                    string Original_staff_name_en, 
                    string Original_staff_surname_en, 
                    System.Nullable<int> Original_staff_gender, 
                    System.Nullable<int> Original_staff_height, 
                    System.Nullable<int> Original_staff_weight, 
                    string Original_staff_bloodtype, 
                    string Original_staff_origin, 
                    string Original_staff_nationality, 
                    string Original_staff_religion, 
                    string Original_staff_birthcountry, 
                    string Original_staff_birthprovince, 
                    System.Nullable<System.DateTime> Original_staff_birthdate, 
                    System.Nullable<int> Original_staff_marital_status, 
                    System.Nullable<System.DateTime> Original_staff_marital_registdate, 
                    string Original_staff_photo) {
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uname));
            }
            if ((Original_staff_id == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_staff_id));
            }
            if ((Original_staff_salutation == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_staff_salutation));
            }
            if ((Original_staff_name == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_staff_name));
            }
            if ((Original_staff_surname == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_staff_surname));
            }
            if ((Original_staff_salutation_en == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_staff_salutation_en));
            }
            if ((Original_staff_name_en == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_staff_name_en));
            }
            if ((Original_staff_surname_en == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_staff_surname_en));
            }
            if ((Original_staff_gender.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_staff_gender.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_staff_height.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_staff_height.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_staff_weight.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_staff_weight.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_staff_bloodtype == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_staff_bloodtype));
            }
            if ((Original_staff_origin == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_staff_origin));
            }
            if ((Original_staff_nationality == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_staff_nationality));
            }
            if ((Original_staff_religion == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_staff_religion));
            }
            if ((Original_staff_birthcountry == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_staff_birthcountry));
            }
            if ((Original_staff_birthprovince == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_staff_birthprovince));
            }
            if ((Original_staff_birthdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_staff_birthdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_staff_marital_status.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_staff_marital_status.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_staff_marital_registdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_staff_marital_registdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = System.DBNull.Value;
            }
            if ((Original_staff_photo == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_staff_photo));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string uname, 
                    string staff_id, 
                    string staff_salutation, 
                    string staff_name, 
                    string staff_surname, 
                    string staff_salutation_en, 
                    string staff_name_en, 
                    string staff_surname_en, 
                    System.Nullable<int> staff_gender, 
                    System.Nullable<int> staff_height, 
                    System.Nullable<int> staff_weight, 
                    string staff_bloodtype, 
                    string staff_origin, 
                    string staff_nationality, 
                    string staff_religion, 
                    string staff_birthcountry, 
                    string staff_birthprovince, 
                    System.Nullable<System.DateTime> staff_birthdate, 
                    System.Nullable<int> staff_marital_status, 
                    System.Nullable<System.DateTime> staff_marital_registdate, 
                    string staff_photo) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((staff_id == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(staff_id));
            }
            if ((staff_salutation == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(staff_salutation));
            }
            if ((staff_name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(staff_name));
            }
            if ((staff_surname == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(staff_surname));
            }
            if ((staff_salutation_en == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(staff_salutation_en));
            }
            if ((staff_name_en == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(staff_name_en));
            }
            if ((staff_surname_en == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(staff_surname_en));
            }
            if ((staff_gender.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(staff_gender.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((staff_height.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(staff_height.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((staff_weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(staff_weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((staff_bloodtype == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(staff_bloodtype));
            }
            if ((staff_origin == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(staff_origin));
            }
            if ((staff_nationality == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(staff_nationality));
            }
            if ((staff_religion == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(staff_religion));
            }
            if ((staff_birthcountry == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(staff_birthcountry));
            }
            if ((staff_birthprovince == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(staff_birthprovince));
            }
            if ((staff_birthdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(staff_birthdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((staff_marital_status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(staff_marital_status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((staff_marital_registdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(staff_marital_registdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((staff_photo == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(staff_photo));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uname, 
                    string staff_id, 
                    string staff_salutation, 
                    string staff_name, 
                    string staff_surname, 
                    string staff_salutation_en, 
                    string staff_name_en, 
                    string staff_surname_en, 
                    System.Nullable<int> staff_gender, 
                    System.Nullable<int> staff_height, 
                    System.Nullable<int> staff_weight, 
                    string staff_bloodtype, 
                    string staff_origin, 
                    string staff_nationality, 
                    string staff_religion, 
                    string staff_birthcountry, 
                    string staff_birthprovince, 
                    System.Nullable<System.DateTime> staff_birthdate, 
                    System.Nullable<int> staff_marital_status, 
                    System.Nullable<System.DateTime> staff_marital_registdate, 
                    string staff_photo, 
                    string Original_uname, 
                    string Original_staff_id, 
                    string Original_staff_salutation, 
                    string Original_staff_name, 
                    string Original_staff_surname, 
                    string Original_staff_salutation_en, 
                    string Original_staff_name_en, 
                    string Original_staff_surname_en, 
                    System.Nullable<int> Original_staff_gender, 
                    System.Nullable<int> Original_staff_height, 
                    System.Nullable<int> Original_staff_weight, 
                    string Original_staff_bloodtype, 
                    string Original_staff_origin, 
                    string Original_staff_nationality, 
                    string Original_staff_religion, 
                    string Original_staff_birthcountry, 
                    string Original_staff_birthprovince, 
                    System.Nullable<System.DateTime> Original_staff_birthdate, 
                    System.Nullable<int> Original_staff_marital_status, 
                    System.Nullable<System.DateTime> Original_staff_marital_registdate, 
                    string Original_staff_photo) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((staff_id == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(staff_id));
            }
            if ((staff_salutation == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(staff_salutation));
            }
            if ((staff_name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(staff_name));
            }
            if ((staff_surname == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(staff_surname));
            }
            if ((staff_salutation_en == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(staff_salutation_en));
            }
            if ((staff_name_en == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(staff_name_en));
            }
            if ((staff_surname_en == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(staff_surname_en));
            }
            if ((staff_gender.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(staff_gender.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((staff_height.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(staff_height.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((staff_weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(staff_weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((staff_bloodtype == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(staff_bloodtype));
            }
            if ((staff_origin == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(staff_origin));
            }
            if ((staff_nationality == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(staff_nationality));
            }
            if ((staff_religion == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(staff_religion));
            }
            if ((staff_birthcountry == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(staff_birthcountry));
            }
            if ((staff_birthprovince == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(staff_birthprovince));
            }
            if ((staff_birthdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(staff_birthdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((staff_marital_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(staff_marital_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((staff_marital_registdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(staff_marital_registdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            if ((staff_photo == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(staff_photo));
            }
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_uname));
            }
            if ((Original_staff_id == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_staff_id));
            }
            if ((Original_staff_salutation == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_staff_salutation));
            }
            if ((Original_staff_name == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_staff_name));
            }
            if ((Original_staff_surname == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_staff_surname));
            }
            if ((Original_staff_salutation_en == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_staff_salutation_en));
            }
            if ((Original_staff_name_en == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_staff_name_en));
            }
            if ((Original_staff_surname_en == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_staff_surname_en));
            }
            if ((Original_staff_gender.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_staff_gender.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = System.DBNull.Value;
            }
            if ((Original_staff_height.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_staff_height.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = System.DBNull.Value;
            }
            if ((Original_staff_weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_staff_weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = System.DBNull.Value;
            }
            if ((Original_staff_bloodtype == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_staff_bloodtype));
            }
            if ((Original_staff_origin == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_staff_origin));
            }
            if ((Original_staff_nationality == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_staff_nationality));
            }
            if ((Original_staff_religion == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_staff_religion));
            }
            if ((Original_staff_birthcountry == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_staff_birthcountry));
            }
            if ((Original_staff_birthprovince == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_staff_birthprovince));
            }
            if ((Original_staff_birthdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(Original_staff_birthdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = System.DBNull.Value;
            }
            if ((Original_staff_marital_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_staff_marital_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = System.DBNull.Value;
            }
            if ((Original_staff_marital_registdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(Original_staff_marital_registdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = System.DBNull.Value;
            }
            if ((Original_staff_photo == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_staff_photo));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_nonworkingTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_nonworkingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_nonworking";
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("nonworking_business_day", "nonworking_business_day");
            tableMapping.ColumnMappings.Add("nonworking_business_hr", "nonworking_business_hr");
            tableMapping.ColumnMappings.Add("nonworking_sick_day", "nonworking_sick_day");
            tableMapping.ColumnMappings.Add("nonworking_sick_hr", "nonworking_sick_hr");
            tableMapping.ColumnMappings.Add("nonworking_work_day", "nonworking_work_day");
            tableMapping.ColumnMappings.Add("nonworking_work_hr", "nonworking_work_hr");
            tableMapping.ColumnMappings.Add("nonworking_vacation_day", "nonworking_vacation_day");
            tableMapping.ColumnMappings.Add("nonworking_vacation_hr", "nonworking_vacation_hr");
            tableMapping.ColumnMappings.Add("nonworking_late_day", "nonworking_late_day");
            tableMapping.ColumnMappings.Add("nonworking_late_hr", "nonworking_late_hr");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_nonworking] WHERE (([uname] = @Original_uname) AND ((@IsNull_nonworking_business_day = 1 AND [nonworking_business_day] IS NULL) OR ([nonworking_business_day] = @Original_nonworking_business_day)) AND ((@IsNull_nonworking_business_hr = 1 AND [nonworking_business_hr] IS NULL) OR ([nonworking_business_hr] = @Original_nonworking_business_hr)) AND ((@IsNull_nonworking_sick_day = 1 AND [nonworking_sick_day] IS NULL) OR ([nonworking_sick_day] = @Original_nonworking_sick_day)) AND ((@IsNull_nonworking_sick_hr = 1 AND [nonworking_sick_hr] IS NULL) OR ([nonworking_sick_hr] = @Original_nonworking_sick_hr)) AND ((@IsNull_nonworking_work_day = 1 AND [nonworking_work_day] IS NULL) OR ([nonworking_work_day] = @Original_nonworking_work_day)) AND ((@IsNull_nonworking_work_hr = 1 AND [nonworking_work_hr] IS NULL) OR ([nonworking_work_hr] = @Original_nonworking_work_hr)) AND ((@IsNull_nonworking_vacation_day = 1 AND [nonworking_vacation_day] IS NULL) OR ([nonworking_vacation_day] = @Original_nonworking_vacation_day)) AND ((@IsNull_nonworking_vacation_hr = 1 AND [nonworking_vacation_hr] IS NULL) OR ([nonworking_vacation_hr] = @Original_nonworking_vacation_hr)) AND ((@IsNull_nonworking_late_day = 1 AND [nonworking_late_day] IS NULL) OR ([nonworking_late_day] = @Original_nonworking_late_day)) AND ((@IsNull_nonworking_late_hr = 1 AND [nonworking_late_hr] IS NULL) OR ([nonworking_late_hr] = @Original_nonworking_late_hr)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_business_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_business_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_business_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_business_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_sick_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_sick_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_sick_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_sick_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_work_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_work_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_work_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_work_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_vacation_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_vacation_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_vacation_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_vacation_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_late_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_late_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_late_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_late_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_nonworking] ([uname], [nonworking_business_day], [nonworking_business_hr], [nonworking_sick_day], [nonworking_sick_hr], [nonworking_work_day], [nonworking_work_hr], [nonworking_vacation_day], [nonworking_vacation_hr], [nonworking_late_day], [nonworking_late_hr]) VALUES (@uname, @nonworking_business_day, @nonworking_business_hr, @nonworking_sick_day, @nonworking_sick_hr, @nonworking_work_day, @nonworking_work_hr, @nonworking_vacation_day, @nonworking_vacation_hr, @nonworking_late_day, @nonworking_late_hr);
SELECT uname, nonworking_business_day, nonworking_business_hr, nonworking_sick_day, nonworking_sick_hr, nonworking_work_day, nonworking_work_hr, nonworking_vacation_day, nonworking_vacation_hr, nonworking_late_day, nonworking_late_hr FROM staff_nonworking WHERE (uname = @uname)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_business_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_business_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_sick_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_sick_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_work_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_work_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_vacation_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_vacation_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_late_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_late_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[staff_nonworking] SET [uname] = @uname, [nonworking_business_day] =" +
                " @nonworking_business_day, [nonworking_business_hr] = @nonworking_business_hr, [" +
                "nonworking_sick_day] = @nonworking_sick_day, [nonworking_sick_hr] = @nonworking_" +
                "sick_hr, [nonworking_work_day] = @nonworking_work_day, [nonworking_work_hr] = @n" +
                "onworking_work_hr, [nonworking_vacation_day] = @nonworking_vacation_day, [nonwor" +
                "king_vacation_hr] = @nonworking_vacation_hr, [nonworking_late_day] = @nonworking" +
                "_late_day, [nonworking_late_hr] = @nonworking_late_hr WHERE (([uname] = @Origina" +
                "l_uname) AND ((@IsNull_nonworking_business_day = 1 AND [nonworking_business_day]" +
                " IS NULL) OR ([nonworking_business_day] = @Original_nonworking_business_day)) AN" +
                "D ((@IsNull_nonworking_business_hr = 1 AND [nonworking_business_hr] IS NULL) OR " +
                "([nonworking_business_hr] = @Original_nonworking_business_hr)) AND ((@IsNull_non" +
                "working_sick_day = 1 AND [nonworking_sick_day] IS NULL) OR ([nonworking_sick_day" +
                "] = @Original_nonworking_sick_day)) AND ((@IsNull_nonworking_sick_hr = 1 AND [no" +
                "nworking_sick_hr] IS NULL) OR ([nonworking_sick_hr] = @Original_nonworking_sick_" +
                "hr)) AND ((@IsNull_nonworking_work_day = 1 AND [nonworking_work_day] IS NULL) OR" +
                " ([nonworking_work_day] = @Original_nonworking_work_day)) AND ((@IsNull_nonworki" +
                "ng_work_hr = 1 AND [nonworking_work_hr] IS NULL) OR ([nonworking_work_hr] = @Ori" +
                "ginal_nonworking_work_hr)) AND ((@IsNull_nonworking_vacation_day = 1 AND [nonwor" +
                "king_vacation_day] IS NULL) OR ([nonworking_vacation_day] = @Original_nonworking" +
                "_vacation_day)) AND ((@IsNull_nonworking_vacation_hr = 1 AND [nonworking_vacatio" +
                "n_hr] IS NULL) OR ([nonworking_vacation_hr] = @Original_nonworking_vacation_hr))" +
                " AND ((@IsNull_nonworking_late_day = 1 AND [nonworking_late_day] IS NULL) OR ([n" +
                "onworking_late_day] = @Original_nonworking_late_day)) AND ((@IsNull_nonworking_l" +
                "ate_hr = 1 AND [nonworking_late_hr] IS NULL) OR ([nonworking_late_hr] = @Origina" +
                "l_nonworking_late_hr)));\r\nSELECT uname, nonworking_business_day, nonworking_busi" +
                "ness_hr, nonworking_sick_day, nonworking_sick_hr, nonworking_work_day, nonworkin" +
                "g_work_hr, nonworking_vacation_day, nonworking_vacation_hr, nonworking_late_day," +
                " nonworking_late_hr FROM staff_nonworking WHERE (uname = @uname)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_business_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_business_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_sick_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_sick_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_work_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_work_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_vacation_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_vacation_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_late_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_day", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_late_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_hr", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_business_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_business_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_business_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_business_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_business_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_sick_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_sick_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_sick_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_sick_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_sick_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_work_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_work_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_work_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_work_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_work_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_vacation_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_vacation_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_vacation_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_vacation_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_vacation_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_late_day", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_day", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_late_day", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_day", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_late_hr", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_hr", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_late_hr", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_late_hr", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT uname, nonworking_business_day, nonworking_business_hr, nonworking_sick_day, nonworking_sick_hr, nonworking_work_day, nonworking_work_hr, nonworking_vacation_day, nonworking_vacation_hr, nonworking_late_day, nonworking_late_hr FROM dbo.staff_nonworking";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_nonworkingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_nonworkingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_nonworkingDataTable dataTable = new netconceptDataSet.staff_nonworkingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_nonworkingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_nonworking");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uname, string Original_nonworking_business_day, string Original_nonworking_business_hr, string Original_nonworking_sick_day, string Original_nonworking_sick_hr, string Original_nonworking_work_day, string Original_nonworking_work_hr, string Original_nonworking_vacation_day, string Original_nonworking_vacation_hr, string Original_nonworking_late_day, string Original_nonworking_late_hr) {
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uname));
            }
            if ((Original_nonworking_business_day == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_nonworking_business_day));
            }
            if ((Original_nonworking_business_hr == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_nonworking_business_hr));
            }
            if ((Original_nonworking_sick_day == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_nonworking_sick_day));
            }
            if ((Original_nonworking_sick_hr == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_nonworking_sick_hr));
            }
            if ((Original_nonworking_work_day == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_nonworking_work_day));
            }
            if ((Original_nonworking_work_hr == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_nonworking_work_hr));
            }
            if ((Original_nonworking_vacation_day == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_nonworking_vacation_day));
            }
            if ((Original_nonworking_vacation_hr == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_nonworking_vacation_hr));
            }
            if ((Original_nonworking_late_day == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_nonworking_late_day));
            }
            if ((Original_nonworking_late_hr == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_nonworking_late_hr));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string nonworking_business_day, string nonworking_business_hr, string nonworking_sick_day, string nonworking_sick_hr, string nonworking_work_day, string nonworking_work_hr, string nonworking_vacation_day, string nonworking_vacation_hr, string nonworking_late_day, string nonworking_late_hr) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((nonworking_business_day == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nonworking_business_day));
            }
            if ((nonworking_business_hr == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(nonworking_business_hr));
            }
            if ((nonworking_sick_day == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(nonworking_sick_day));
            }
            if ((nonworking_sick_hr == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(nonworking_sick_hr));
            }
            if ((nonworking_work_day == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(nonworking_work_day));
            }
            if ((nonworking_work_hr == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(nonworking_work_hr));
            }
            if ((nonworking_vacation_day == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(nonworking_vacation_day));
            }
            if ((nonworking_vacation_hr == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(nonworking_vacation_hr));
            }
            if ((nonworking_late_day == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(nonworking_late_day));
            }
            if ((nonworking_late_hr == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(nonworking_late_hr));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uname, 
                    string nonworking_business_day, 
                    string nonworking_business_hr, 
                    string nonworking_sick_day, 
                    string nonworking_sick_hr, 
                    string nonworking_work_day, 
                    string nonworking_work_hr, 
                    string nonworking_vacation_day, 
                    string nonworking_vacation_hr, 
                    string nonworking_late_day, 
                    string nonworking_late_hr, 
                    string Original_uname, 
                    string Original_nonworking_business_day, 
                    string Original_nonworking_business_hr, 
                    string Original_nonworking_sick_day, 
                    string Original_nonworking_sick_hr, 
                    string Original_nonworking_work_day, 
                    string Original_nonworking_work_hr, 
                    string Original_nonworking_vacation_day, 
                    string Original_nonworking_vacation_hr, 
                    string Original_nonworking_late_day, 
                    string Original_nonworking_late_hr) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((nonworking_business_day == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nonworking_business_day));
            }
            if ((nonworking_business_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(nonworking_business_hr));
            }
            if ((nonworking_sick_day == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(nonworking_sick_day));
            }
            if ((nonworking_sick_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(nonworking_sick_hr));
            }
            if ((nonworking_work_day == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(nonworking_work_day));
            }
            if ((nonworking_work_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(nonworking_work_hr));
            }
            if ((nonworking_vacation_day == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(nonworking_vacation_day));
            }
            if ((nonworking_vacation_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(nonworking_vacation_hr));
            }
            if ((nonworking_late_day == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(nonworking_late_day));
            }
            if ((nonworking_late_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(nonworking_late_hr));
            }
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_uname));
            }
            if ((Original_nonworking_business_day == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_nonworking_business_day));
            }
            if ((Original_nonworking_business_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_nonworking_business_hr));
            }
            if ((Original_nonworking_sick_day == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_nonworking_sick_day));
            }
            if ((Original_nonworking_sick_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_nonworking_sick_hr));
            }
            if ((Original_nonworking_work_day == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_nonworking_work_day));
            }
            if ((Original_nonworking_work_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_nonworking_work_hr));
            }
            if ((Original_nonworking_vacation_day == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_nonworking_vacation_day));
            }
            if ((Original_nonworking_vacation_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_nonworking_vacation_hr));
            }
            if ((Original_nonworking_late_day == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_nonworking_late_day));
            }
            if ((Original_nonworking_late_hr == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_nonworking_late_hr));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_ocTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_ocTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_oc";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("parent", "parent");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[staff_oc] WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1" +
                " AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_parent = 1 A" +
                "ND [parent] IS NULL) OR ([parent] = @Original_parent)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_parent", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_parent", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[staff_oc] ([uname], [parent]) VALUES (@uname, @parent);\r\nSELEC" +
                "T id, uname, parent FROM staff_oc WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@parent", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_oc] SET [uname] = @uname, [parent] = @parent WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_parent = 1 AND [parent] IS NULL) OR ([parent] = @Original_parent)));
SELECT id, uname, parent FROM staff_oc WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@parent", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_parent", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_parent", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, uname, parent FROM dbo.staff_oc";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_ocDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_ocDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_ocDataTable dataTable = new netconceptDataSet.staff_ocDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_ocDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_oc");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_uname, string Original_parent) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_parent == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_parent));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string parent) {
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((parent == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(parent));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uname, string parent, int Original_id, string Original_uname, string Original_parent, int id) {
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((parent == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(parent));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_uname));
            }
            if ((Original_parent == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_parent));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_occupationTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_occupationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_occupation";
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("occupation_position", "occupation_position");
            tableMapping.ColumnMappings.Add("occupation_office", "occupation_office");
            tableMapping.ColumnMappings.Add("occupation_sector", "occupation_sector");
            tableMapping.ColumnMappings.Add("occupation_division", "occupation_division");
            tableMapping.ColumnMappings.Add("occupation_department", "occupation_department");
            tableMapping.ColumnMappings.Add("occupation_company", "occupation_company");
            tableMapping.ColumnMappings.Add("occupation_status", "occupation_status");
            tableMapping.ColumnMappings.Add("occupation_startdate", "occupation_startdate");
            tableMapping.ColumnMappings.Add("occupation_enddate", "occupation_enddate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_occupation] WHERE (([uname] = @Original_uname) AND ((@IsNull_occupation_position = 1 AND [occupation_position] IS NULL) OR ([occupation_position] = @Original_occupation_position)) AND ((@IsNull_occupation_office = 1 AND [occupation_office] IS NULL) OR ([occupation_office] = @Original_occupation_office)) AND ((@IsNull_occupation_sector = 1 AND [occupation_sector] IS NULL) OR ([occupation_sector] = @Original_occupation_sector)) AND ((@IsNull_occupation_division = 1 AND [occupation_division] IS NULL) OR ([occupation_division] = @Original_occupation_division)) AND ((@IsNull_occupation_department = 1 AND [occupation_department] IS NULL) OR ([occupation_department] = @Original_occupation_department)) AND ((@IsNull_occupation_company = 1 AND [occupation_company] IS NULL) OR ([occupation_company] = @Original_occupation_company)) AND ((@IsNull_occupation_status = 1 AND [occupation_status] IS NULL) OR ([occupation_status] = @Original_occupation_status)) AND ((@IsNull_occupation_startdate = 1 AND [occupation_startdate] IS NULL) OR ([occupation_startdate] = @Original_occupation_startdate)) AND ((@IsNull_occupation_enddate = 1 AND [occupation_enddate] IS NULL) OR ([occupation_enddate] = @Original_occupation_enddate)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_position", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_position", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_position", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_office", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_office", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_office", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_sector", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_sector", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_sector", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_sector", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_division", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_division", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_division", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_division", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_department", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_department", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_department", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_company", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_company", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_company", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_company", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_occupation] ([uname], [occupation_position], [occupation_office], [occupation_sector], [occupation_division], [occupation_department], [occupation_company], [occupation_status], [occupation_startdate], [occupation_enddate]) VALUES (@uname, @occupation_position, @occupation_office, @occupation_sector, @occupation_division, @occupation_department, @occupation_company, @occupation_status, @occupation_startdate, @occupation_enddate);
SELECT uname, occupation_position, occupation_office, occupation_sector, occupation_division, occupation_department, occupation_company, occupation_status, occupation_startdate, occupation_enddate FROM staff_occupation WHERE (uname = @uname)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_position", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_position", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_office", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_sector", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_sector", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_division", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_division", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_company", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_company", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[staff_occupation] SET [uname] = @uname, [occupation_position] = @oc" +
                "cupation_position, [occupation_office] = @occupation_office, [occupation_sector]" +
                " = @occupation_sector, [occupation_division] = @occupation_division, [occupation" +
                "_department] = @occupation_department, [occupation_company] = @occupation_compan" +
                "y, [occupation_status] = @occupation_status, [occupation_startdate] = @occupatio" +
                "n_startdate, [occupation_enddate] = @occupation_enddate WHERE (([uname] = @Origi" +
                "nal_uname) AND ((@IsNull_occupation_position = 1 AND [occupation_position] IS NU" +
                "LL) OR ([occupation_position] = @Original_occupation_position)) AND ((@IsNull_oc" +
                "cupation_office = 1 AND [occupation_office] IS NULL) OR ([occupation_office] = @" +
                "Original_occupation_office)) AND ((@IsNull_occupation_sector = 1 AND [occupation" +
                "_sector] IS NULL) OR ([occupation_sector] = @Original_occupation_sector)) AND ((" +
                "@IsNull_occupation_division = 1 AND [occupation_division] IS NULL) OR ([occupati" +
                "on_division] = @Original_occupation_division)) AND ((@IsNull_occupation_departme" +
                "nt = 1 AND [occupation_department] IS NULL) OR ([occupation_department] = @Origi" +
                "nal_occupation_department)) AND ((@IsNull_occupation_company = 1 AND [occupation" +
                "_company] IS NULL) OR ([occupation_company] = @Original_occupation_company)) AND" +
                " ((@IsNull_occupation_status = 1 AND [occupation_status] IS NULL) OR ([occupatio" +
                "n_status] = @Original_occupation_status)) AND ((@IsNull_occupation_startdate = 1" +
                " AND [occupation_startdate] IS NULL) OR ([occupation_startdate] = @Original_occu" +
                "pation_startdate)) AND ((@IsNull_occupation_enddate = 1 AND [occupation_enddate]" +
                " IS NULL) OR ([occupation_enddate] = @Original_occupation_enddate)));\r\nSELECT un" +
                "ame, occupation_position, occupation_office, occupation_sector, occupation_divis" +
                "ion, occupation_department, occupation_company, occupation_status, occupation_st" +
                "artdate, occupation_enddate FROM staff_occupation WHERE (uname = @uname)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_position", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_position", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_office", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_sector", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_sector", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_division", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_division", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_department", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_company", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_company", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_position", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_position", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_position", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_office", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_office", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_office", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_office", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_sector", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_sector", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_sector", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_sector", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_division", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_division", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_division", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_division", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_department", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_department", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_department", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_department", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_company", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_company", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_company", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_company", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uname, occupation_position, occupation_office, occupation_sector, occupati" +
                "on_division, occupation_department, occupation_company, occupation_status, occup" +
                "ation_startdate, occupation_enddate FROM dbo.staff_occupation";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_occupationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_occupationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_occupationDataTable dataTable = new netconceptDataSet.staff_occupationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_occupationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_occupation");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uname, string Original_occupation_position, string Original_occupation_office, string Original_occupation_sector, string Original_occupation_division, string Original_occupation_department, string Original_occupation_company, System.Nullable<bool> Original_occupation_status, System.Nullable<System.DateTime> Original_occupation_startdate, System.Nullable<System.DateTime> Original_occupation_enddate) {
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uname));
            }
            if ((Original_occupation_position == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_occupation_position));
            }
            if ((Original_occupation_office == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_occupation_office));
            }
            if ((Original_occupation_sector == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_occupation_sector));
            }
            if ((Original_occupation_division == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_occupation_division));
            }
            if ((Original_occupation_department == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_occupation_department));
            }
            if ((Original_occupation_company == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_occupation_company));
            }
            if ((Original_occupation_status.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_occupation_status.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_occupation_startdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_occupation_startdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_occupation_enddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_occupation_enddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string occupation_position, string occupation_office, string occupation_sector, string occupation_division, string occupation_department, string occupation_company, System.Nullable<bool> occupation_status, System.Nullable<System.DateTime> occupation_startdate, System.Nullable<System.DateTime> occupation_enddate) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((occupation_position == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(occupation_position));
            }
            if ((occupation_office == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(occupation_office));
            }
            if ((occupation_sector == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(occupation_sector));
            }
            if ((occupation_division == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(occupation_division));
            }
            if ((occupation_department == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(occupation_department));
            }
            if ((occupation_company == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(occupation_company));
            }
            if ((occupation_status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(occupation_status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((occupation_startdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(occupation_startdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((occupation_enddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(occupation_enddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uname, 
                    string occupation_position, 
                    string occupation_office, 
                    string occupation_sector, 
                    string occupation_division, 
                    string occupation_department, 
                    string occupation_company, 
                    System.Nullable<bool> occupation_status, 
                    System.Nullable<System.DateTime> occupation_startdate, 
                    System.Nullable<System.DateTime> occupation_enddate, 
                    string Original_uname, 
                    string Original_occupation_position, 
                    string Original_occupation_office, 
                    string Original_occupation_sector, 
                    string Original_occupation_division, 
                    string Original_occupation_department, 
                    string Original_occupation_company, 
                    System.Nullable<bool> Original_occupation_status, 
                    System.Nullable<System.DateTime> Original_occupation_startdate, 
                    System.Nullable<System.DateTime> Original_occupation_enddate) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((occupation_position == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(occupation_position));
            }
            if ((occupation_office == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(occupation_office));
            }
            if ((occupation_sector == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(occupation_sector));
            }
            if ((occupation_division == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(occupation_division));
            }
            if ((occupation_department == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(occupation_department));
            }
            if ((occupation_company == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(occupation_company));
            }
            if ((occupation_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(occupation_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((occupation_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(occupation_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((occupation_enddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(occupation_enddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_uname));
            }
            if ((Original_occupation_position == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_occupation_position));
            }
            if ((Original_occupation_office == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_occupation_office));
            }
            if ((Original_occupation_sector == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_occupation_sector));
            }
            if ((Original_occupation_division == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_occupation_division));
            }
            if ((Original_occupation_department == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_occupation_department));
            }
            if ((Original_occupation_company == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_occupation_company));
            }
            if ((Original_occupation_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Original_occupation_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_occupation_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_occupation_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_occupation_enddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_occupation_enddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_occupation_historyTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_occupation_historyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_occupation_history";
            tableMapping.ColumnMappings.Add("occupation_history_id", "occupation_history_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("occupationhis_company", "occupationhis_company");
            tableMapping.ColumnMappings.Add("occupationhis_postion", "occupationhis_postion");
            tableMapping.ColumnMappings.Add("occupationhis_startdate", "occupationhis_startdate");
            tableMapping.ColumnMappings.Add("occupationhis_enddate", "occupationhis_enddate");
            tableMapping.ColumnMappings.Add("occupationhis_salary", "occupationhis_salary");
            tableMapping.ColumnMappings.Add("occupationhis_change_reason", "occupationhis_change_reason");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_occupation_history] WHERE (([occupation_history_id] = @Original_occupation_history_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_occupationhis_company = 1 AND [occupationhis_company] IS NULL) OR ([occupationhis_company] = @Original_occupationhis_company)) AND ((@IsNull_occupationhis_postion = 1 AND [occupationhis_postion] IS NULL) OR ([occupationhis_postion] = @Original_occupationhis_postion)) AND ((@IsNull_occupationhis_startdate = 1 AND [occupationhis_startdate] IS NULL) OR ([occupationhis_startdate] = @Original_occupationhis_startdate)) AND ((@IsNull_occupationhis_enddate = 1 AND [occupationhis_enddate] IS NULL) OR ([occupationhis_enddate] = @Original_occupationhis_enddate)) AND ((@IsNull_occupationhis_salary = 1 AND [occupationhis_salary] IS NULL) OR ([occupationhis_salary] = @Original_occupationhis_salary)) AND ((@IsNull_occupationhis_change_reason = 1 AND [occupationhis_change_reason] IS NULL) OR ([occupationhis_change_reason] = @Original_occupationhis_change_reason)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_history_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_history_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_company", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_company", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_company", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_company", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_postion", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_postion", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_postion", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_postion", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_salary", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_salary", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_salary", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_salary", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_change_reason", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_change_reason", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_change_reason", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_change_reason", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_occupation_history] ([occupation_history_id], [uname], [occupationhis_company], [occupationhis_postion], [occupationhis_startdate], [occupationhis_enddate], [occupationhis_salary], [occupationhis_change_reason]) VALUES (@occupation_history_id, @uname, @occupationhis_company, @occupationhis_postion, @occupationhis_startdate, @occupationhis_enddate, @occupationhis_salary, @occupationhis_change_reason);
SELECT occupation_history_id, uname, occupationhis_company, occupationhis_postion, occupationhis_startdate, occupationhis_enddate, occupationhis_salary, occupationhis_change_reason FROM staff_occupation_history WHERE (occupation_history_id = @occupation_history_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_history_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_history_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_company", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_company", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_postion", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_postion", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_salary", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_salary", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_change_reason", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_change_reason", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[staff_occupation_history] SET [occupation_history_id] = @occupation" +
                "_history_id, [uname] = @uname, [occupationhis_company] = @occupationhis_company," +
                " [occupationhis_postion] = @occupationhis_postion, [occupationhis_startdate] = @" +
                "occupationhis_startdate, [occupationhis_enddate] = @occupationhis_enddate, [occu" +
                "pationhis_salary] = @occupationhis_salary, [occupationhis_change_reason] = @occu" +
                "pationhis_change_reason WHERE (([occupation_history_id] = @Original_occupation_h" +
                "istory_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_" +
                "uname)) AND ((@IsNull_occupationhis_company = 1 AND [occupationhis_company] IS N" +
                "ULL) OR ([occupationhis_company] = @Original_occupationhis_company)) AND ((@IsNu" +
                "ll_occupationhis_postion = 1 AND [occupationhis_postion] IS NULL) OR ([occupatio" +
                "nhis_postion] = @Original_occupationhis_postion)) AND ((@IsNull_occupationhis_st" +
                "artdate = 1 AND [occupationhis_startdate] IS NULL) OR ([occupationhis_startdate]" +
                " = @Original_occupationhis_startdate)) AND ((@IsNull_occupationhis_enddate = 1 A" +
                "ND [occupationhis_enddate] IS NULL) OR ([occupationhis_enddate] = @Original_occu" +
                "pationhis_enddate)) AND ((@IsNull_occupationhis_salary = 1 AND [occupationhis_sa" +
                "lary] IS NULL) OR ([occupationhis_salary] = @Original_occupationhis_salary)) AND" +
                " ((@IsNull_occupationhis_change_reason = 1 AND [occupationhis_change_reason] IS " +
                "NULL) OR ([occupationhis_change_reason] = @Original_occupationhis_change_reason)" +
                "));\r\nSELECT occupation_history_id, uname, occupationhis_company, occupationhis_p" +
                "ostion, occupationhis_startdate, occupationhis_enddate, occupationhis_salary, oc" +
                "cupationhis_change_reason FROM staff_occupation_history WHERE (occupation_histor" +
                "y_id = @occupation_history_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_history_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_history_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_company", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_company", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_postion", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_postion", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_salary", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_salary", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupationhis_change_reason", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_change_reason", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_history_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_history_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_company", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_company", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_company", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_company", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_postion", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_postion", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_postion", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_postion", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_startdate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_enddate", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_salary", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_salary", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_salary", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_salary", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupationhis_change_reason", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_change_reason", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupationhis_change_reason", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "occupationhis_change_reason", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT occupation_history_id, uname, occupationhis_company, occupationhis_postion" +
                ", occupationhis_startdate, occupationhis_enddate, occupationhis_salary, occupati" +
                "onhis_change_reason FROM dbo.staff_occupation_history";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_occupation_historyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_occupation_historyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_occupation_historyDataTable dataTable = new netconceptDataSet.staff_occupation_historyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_occupation_historyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_occupation_history");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_occupation_history_id, string Original_uname, string Original_occupationhis_company, string Original_occupationhis_postion, System.Nullable<System.DateTime> Original_occupationhis_startdate, System.Nullable<System.DateTime> Original_occupationhis_enddate, System.Nullable<int> Original_occupationhis_salary, string Original_occupationhis_change_reason) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_occupation_history_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_occupationhis_company == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_occupationhis_company));
            }
            if ((Original_occupationhis_postion == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_occupationhis_postion));
            }
            if ((Original_occupationhis_startdate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_occupationhis_startdate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_occupationhis_enddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_occupationhis_enddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_occupationhis_salary.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_occupationhis_salary.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_occupationhis_change_reason == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_occupationhis_change_reason));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int occupation_history_id, string uname, string occupationhis_company, string occupationhis_postion, System.Nullable<System.DateTime> occupationhis_startdate, System.Nullable<System.DateTime> occupationhis_enddate, System.Nullable<int> occupationhis_salary, string occupationhis_change_reason) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(occupation_history_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((occupationhis_company == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(occupationhis_company));
            }
            if ((occupationhis_postion == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(occupationhis_postion));
            }
            if ((occupationhis_startdate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(occupationhis_startdate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((occupationhis_enddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(occupationhis_enddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((occupationhis_salary.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(occupationhis_salary.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((occupationhis_change_reason == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(occupationhis_change_reason));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int occupation_history_id, 
                    string uname, 
                    string occupationhis_company, 
                    string occupationhis_postion, 
                    System.Nullable<System.DateTime> occupationhis_startdate, 
                    System.Nullable<System.DateTime> occupationhis_enddate, 
                    System.Nullable<int> occupationhis_salary, 
                    string occupationhis_change_reason, 
                    int Original_occupation_history_id, 
                    string Original_uname, 
                    string Original_occupationhis_company, 
                    string Original_occupationhis_postion, 
                    System.Nullable<System.DateTime> Original_occupationhis_startdate, 
                    System.Nullable<System.DateTime> Original_occupationhis_enddate, 
                    System.Nullable<int> Original_occupationhis_salary, 
                    string Original_occupationhis_change_reason) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(occupation_history_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((occupationhis_company == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(occupationhis_company));
            }
            if ((occupationhis_postion == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(occupationhis_postion));
            }
            if ((occupationhis_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(occupationhis_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((occupationhis_enddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(occupationhis_enddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((occupationhis_salary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(occupationhis_salary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((occupationhis_change_reason == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(occupationhis_change_reason));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_occupation_history_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_uname));
            }
            if ((Original_occupationhis_company == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_occupationhis_company));
            }
            if ((Original_occupationhis_postion == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_occupationhis_postion));
            }
            if ((Original_occupationhis_startdate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_occupationhis_startdate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_occupationhis_enddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_occupationhis_enddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_occupationhis_salary.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_occupationhis_salary.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_occupationhis_change_reason == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_occupationhis_change_reason));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_status_controlTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_status_controlTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_status_control";
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("isactive", "isactive");
            tableMapping.ColumnMappings.Add("info_update_approve", "info_update_approve");
            tableMapping.ColumnMappings.Add("family_update_approve", "family_update_approve");
            tableMapping.ColumnMappings.Add("occupation_update_approve", "occupation_update_approve");
            tableMapping.ColumnMappings.Add("education_update_approve", "education_update_approve");
            tableMapping.ColumnMappings.Add("success_update_approve", "success_update_approve");
            tableMapping.ColumnMappings.Add("training_update_approve", "training_update_approve");
            tableMapping.ColumnMappings.Add("activity_update_approve", "activity_update_approve");
            tableMapping.ColumnMappings.Add("nonworking_update_approve", "nonworking_update_approve");
            tableMapping.ColumnMappings.Add("healhistory_update_approve", "healhistory_update_approve");
            tableMapping.ColumnMappings.Add("ailment_update_approve", "ailment_update_approve");
            tableMapping.ColumnMappings.Add("authority", "authority");
            tableMapping.ColumnMappings.Add("cst_group_id", "cst_group_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[staff_status_control] WHERE (([uname] = @Original_uname) AND (" +
                "(@IsNull_isactive = 1 AND [isactive] IS NULL) OR ([isactive] = @Original_isactiv" +
                "e)) AND ((@IsNull_info_update_approve = 1 AND [info_update_approve] IS NULL) OR " +
                "([info_update_approve] = @Original_info_update_approve)) AND ((@IsNull_family_up" +
                "date_approve = 1 AND [family_update_approve] IS NULL) OR ([family_update_approve" +
                "] = @Original_family_update_approve)) AND ((@IsNull_occupation_update_approve = " +
                "1 AND [occupation_update_approve] IS NULL) OR ([occupation_update_approve] = @Or" +
                "iginal_occupation_update_approve)) AND ((@IsNull_education_update_approve = 1 AN" +
                "D [education_update_approve] IS NULL) OR ([education_update_approve] = @Original" +
                "_education_update_approve)) AND ((@IsNull_success_update_approve = 1 AND [succes" +
                "s_update_approve] IS NULL) OR ([success_update_approve] = @Original_success_upda" +
                "te_approve)) AND ((@IsNull_training_update_approve = 1 AND [training_update_appr" +
                "ove] IS NULL) OR ([training_update_approve] = @Original_training_update_approve)" +
                ") AND ((@IsNull_activity_update_approve = 1 AND [activity_update_approve] IS NUL" +
                "L) OR ([activity_update_approve] = @Original_activity_update_approve)) AND ((@Is" +
                "Null_nonworking_update_approve = 1 AND [nonworking_update_approve] IS NULL) OR (" +
                "[nonworking_update_approve] = @Original_nonworking_update_approve)) AND ((@IsNul" +
                "l_healhistory_update_approve = 1 AND [healhistory_update_approve] IS NULL) OR ([" +
                "healhistory_update_approve] = @Original_healhistory_update_approve)) AND ((@IsNu" +
                "ll_ailment_update_approve = 1 AND [ailment_update_approve] IS NULL) OR ([ailment" +
                "_update_approve] = @Original_ailment_update_approve)) AND ((@IsNull_authority = " +
                "1 AND [authority] IS NULL) OR ([authority] = @Original_authority)) AND ((@IsNull" +
                "_cst_group_id = 1 AND [cst_group_id] IS NULL) OR ([cst_group_id] = @Original_cst" +
                "_group_id)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_isactive", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "isactive", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_isactive", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "isactive", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_info_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "info_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_info_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "info_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "family_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "education_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_success_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "success_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_success_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "success_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "training_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ailment_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ailment_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_authority", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_authority", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_status_control] ([uname], [isactive], [info_update_approve], [family_update_approve], [occupation_update_approve], [education_update_approve], [success_update_approve], [training_update_approve], [activity_update_approve], [nonworking_update_approve], [healhistory_update_approve], [ailment_update_approve], [authority], [cst_group_id]) VALUES (@uname, @isactive, @info_update_approve, @family_update_approve, @occupation_update_approve, @education_update_approve, @success_update_approve, @training_update_approve, @activity_update_approve, @nonworking_update_approve, @healhistory_update_approve, @ailment_update_approve, @authority, @cst_group_id);
SELECT uname, isactive, info_update_approve, family_update_approve, occupation_update_approve, education_update_approve, success_update_approve, training_update_approve, activity_update_approve, nonworking_update_approve, healhistory_update_approve, ailment_update_approve, authority, cst_group_id FROM staff_status_control WHERE (uname = @uname)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@isactive", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "isactive", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@info_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "info_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "family_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "education_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@success_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "success_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "training_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ailment_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@authority", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[staff_status_control] SET [uname] = @uname, [isactive] = @isactive," +
                " [info_update_approve] = @info_update_approve, [family_update_approve] = @family" +
                "_update_approve, [occupation_update_approve] = @occupation_update_approve, [educ" +
                "ation_update_approve] = @education_update_approve, [success_update_approve] = @s" +
                "uccess_update_approve, [training_update_approve] = @training_update_approve, [ac" +
                "tivity_update_approve] = @activity_update_approve, [nonworking_update_approve] =" +
                " @nonworking_update_approve, [healhistory_update_approve] = @healhistory_update_" +
                "approve, [ailment_update_approve] = @ailment_update_approve, [authority] = @auth" +
                "ority, [cst_group_id] = @cst_group_id WHERE (([uname] = @Original_uname) AND ((@" +
                "IsNull_isactive = 1 AND [isactive] IS NULL) OR ([isactive] = @Original_isactive)" +
                ") AND ((@IsNull_info_update_approve = 1 AND [info_update_approve] IS NULL) OR ([" +
                "info_update_approve] = @Original_info_update_approve)) AND ((@IsNull_family_upda" +
                "te_approve = 1 AND [family_update_approve] IS NULL) OR ([family_update_approve] " +
                "= @Original_family_update_approve)) AND ((@IsNull_occupation_update_approve = 1 " +
                "AND [occupation_update_approve] IS NULL) OR ([occupation_update_approve] = @Orig" +
                "inal_occupation_update_approve)) AND ((@IsNull_education_update_approve = 1 AND " +
                "[education_update_approve] IS NULL) OR ([education_update_approve] = @Original_e" +
                "ducation_update_approve)) AND ((@IsNull_success_update_approve = 1 AND [success_" +
                "update_approve] IS NULL) OR ([success_update_approve] = @Original_success_update" +
                "_approve)) AND ((@IsNull_training_update_approve = 1 AND [training_update_approv" +
                "e] IS NULL) OR ([training_update_approve] = @Original_training_update_approve)) " +
                "AND ((@IsNull_activity_update_approve = 1 AND [activity_update_approve] IS NULL)" +
                " OR ([activity_update_approve] = @Original_activity_update_approve)) AND ((@IsNu" +
                "ll_nonworking_update_approve = 1 AND [nonworking_update_approve] IS NULL) OR ([n" +
                "onworking_update_approve] = @Original_nonworking_update_approve)) AND ((@IsNull_" +
                "healhistory_update_approve = 1 AND [healhistory_update_approve] IS NULL) OR ([he" +
                "alhistory_update_approve] = @Original_healhistory_update_approve)) AND ((@IsNull" +
                "_ailment_update_approve = 1 AND [ailment_update_approve] IS NULL) OR ([ailment_u" +
                "pdate_approve] = @Original_ailment_update_approve)) AND ((@IsNull_authority = 1 " +
                "AND [authority] IS NULL) OR ([authority] = @Original_authority)) AND ((@IsNull_c" +
                "st_group_id = 1 AND [cst_group_id] IS NULL) OR ([cst_group_id] = @Original_cst_g" +
                "roup_id)));\r\nSELECT uname, isactive, info_update_approve, family_update_approve," +
                " occupation_update_approve, education_update_approve, success_update_approve, tr" +
                "aining_update_approve, activity_update_approve, nonworking_update_approve, healh" +
                "istory_update_approve, ailment_update_approve, authority, cst_group_id FROM staf" +
                "f_status_control WHERE (uname = @uname)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@isactive", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "isactive", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@info_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "info_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@family_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "family_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@occupation_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@education_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "education_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@success_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "success_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "training_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@activity_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@nonworking_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@healhistory_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@ailment_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_update_approve", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@authority", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_isactive", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "isactive", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_isactive", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "isactive", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_info_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "info_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_info_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "info_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_family_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "family_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_family_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "family_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_occupation_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_occupation_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "occupation_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_education_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "education_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_education_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "education_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_success_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "success_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_success_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "success_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "training_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_activity_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_activity_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "activity_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_nonworking_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_nonworking_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "nonworking_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_healhistory_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_healhistory_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "healhistory_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_ailment_update_approve", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_update_approve", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_ailment_update_approve", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "ailment_update_approve", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_authority", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_authority", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "authority", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_cst_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "cst_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT uname, isactive, info_update_approve, family_update_approve, occupation_update_approve, education_update_approve, success_update_approve, training_update_approve, activity_update_approve, nonworking_update_approve, healhistory_update_approve, ailment_update_approve, authority, cst_group_id FROM dbo.staff_status_control";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_status_controlDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_status_controlDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_status_controlDataTable dataTable = new netconceptDataSet.staff_status_controlDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_status_controlDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_status_control");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uname, System.Nullable<bool> Original_isactive, System.Nullable<bool> Original_info_update_approve, System.Nullable<bool> Original_family_update_approve, System.Nullable<bool> Original_occupation_update_approve, System.Nullable<bool> Original_education_update_approve, System.Nullable<bool> Original_success_update_approve, System.Nullable<bool> Original_training_update_approve, System.Nullable<bool> Original_activity_update_approve, System.Nullable<bool> Original_nonworking_update_approve, System.Nullable<bool> Original_healhistory_update_approve, System.Nullable<bool> Original_ailment_update_approve, string Original_authority, System.Nullable<int> Original_cst_group_id) {
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uname));
            }
            if ((Original_isactive.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_isactive.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_info_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_info_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_family_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_family_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_occupation_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_occupation_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((Original_education_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_education_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_success_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_success_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            if ((Original_training_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_training_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_activity_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_activity_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_nonworking_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_nonworking_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_healhistory_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_healhistory_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_ailment_update_approve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_ailment_update_approve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_authority == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_authority));
            }
            if ((Original_cst_group_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_cst_group_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, System.Nullable<bool> isactive, System.Nullable<bool> info_update_approve, System.Nullable<bool> family_update_approve, System.Nullable<bool> occupation_update_approve, System.Nullable<bool> education_update_approve, System.Nullable<bool> success_update_approve, System.Nullable<bool> training_update_approve, System.Nullable<bool> activity_update_approve, System.Nullable<bool> nonworking_update_approve, System.Nullable<bool> healhistory_update_approve, System.Nullable<bool> ailment_update_approve, string authority, System.Nullable<int> cst_group_id) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((isactive.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(isactive.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((info_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(info_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((family_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(family_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((occupation_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(occupation_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((education_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(education_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((success_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(success_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((training_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(training_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((activity_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(activity_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((nonworking_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(nonworking_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((healhistory_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(healhistory_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((ailment_update_approve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(ailment_update_approve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((authority == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(authority));
            }
            if ((cst_group_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(cst_group_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uname, 
                    System.Nullable<bool> isactive, 
                    System.Nullable<bool> info_update_approve, 
                    System.Nullable<bool> family_update_approve, 
                    System.Nullable<bool> occupation_update_approve, 
                    System.Nullable<bool> education_update_approve, 
                    System.Nullable<bool> success_update_approve, 
                    System.Nullable<bool> training_update_approve, 
                    System.Nullable<bool> activity_update_approve, 
                    System.Nullable<bool> nonworking_update_approve, 
                    System.Nullable<bool> healhistory_update_approve, 
                    System.Nullable<bool> ailment_update_approve, 
                    string authority, 
                    System.Nullable<int> cst_group_id, 
                    string Original_uname, 
                    System.Nullable<bool> Original_isactive, 
                    System.Nullable<bool> Original_info_update_approve, 
                    System.Nullable<bool> Original_family_update_approve, 
                    System.Nullable<bool> Original_occupation_update_approve, 
                    System.Nullable<bool> Original_education_update_approve, 
                    System.Nullable<bool> Original_success_update_approve, 
                    System.Nullable<bool> Original_training_update_approve, 
                    System.Nullable<bool> Original_activity_update_approve, 
                    System.Nullable<bool> Original_nonworking_update_approve, 
                    System.Nullable<bool> Original_healhistory_update_approve, 
                    System.Nullable<bool> Original_ailment_update_approve, 
                    string Original_authority, 
                    System.Nullable<int> Original_cst_group_id) {
            if ((uname == null)) {
                throw new System.ArgumentNullException("uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((isactive.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(isactive.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((info_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(info_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((family_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(family_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((occupation_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(occupation_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((education_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(education_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((success_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(success_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((training_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(training_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((activity_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(activity_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            if ((nonworking_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(nonworking_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((healhistory_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(healhistory_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((ailment_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(ailment_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((authority == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(authority));
            }
            if ((cst_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(cst_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_uname == null)) {
                throw new System.ArgumentNullException("Original_uname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_uname));
            }
            if ((Original_isactive.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_isactive.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_info_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Original_info_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_family_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_family_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_occupation_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Original_occupation_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_education_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(Original_education_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_success_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Original_success_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            if ((Original_training_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(Original_training_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_activity_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Original_activity_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            if ((Original_nonworking_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_nonworking_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = System.DBNull.Value;
            }
            if ((Original_healhistory_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_healhistory_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = System.DBNull.Value;
            }
            if ((Original_ailment_update_approve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(Original_ailment_update_approve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = System.DBNull.Value;
            }
            if ((Original_authority == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_authority));
            }
            if ((Original_cst_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_cst_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_successTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_successTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_success";
            tableMapping.ColumnMappings.Add("staff_success_id", "staff_success_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("success_date", "success_date");
            tableMapping.ColumnMappings.Add("success_detail", "success_detail");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_success] WHERE (([staff_success_id] = @Original_staff_success_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_success_date = 1 AND [success_date] IS NULL) OR ([success_date] = @Original_success_date)) AND ((@IsNull_success_detail = 1 AND [success_detail] IS NULL) OR ([success_detail] = @Original_success_detail)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_success_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_success_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_success_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "success_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_success_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "success_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_success_detail", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "success_detail", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_success_detail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "success_detail", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_success] ([staff_success_id], [uname], [success_date], [success_detail]) VALUES (@staff_success_id, @uname, @success_date, @success_detail);
SELECT staff_success_id, uname, success_date, success_detail FROM staff_success WHERE (staff_success_id = @staff_success_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_success_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_success_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@success_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "success_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@success_detail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "success_detail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_success] SET [staff_success_id] = @staff_success_id, [uname] = @uname, [success_date] = @success_date, [success_detail] = @success_detail WHERE (([staff_success_id] = @Original_staff_success_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_success_date = 1 AND [success_date] IS NULL) OR ([success_date] = @Original_success_date)) AND ((@IsNull_success_detail = 1 AND [success_detail] IS NULL) OR ([success_detail] = @Original_success_detail)));
SELECT staff_success_id, uname, success_date, success_detail FROM staff_success WHERE (staff_success_id = @staff_success_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_success_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_success_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@success_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "success_date", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@success_detail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "success_detail", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_success_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_success_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_success_date", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "success_date", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_success_date", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "success_date", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_success_detail", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "success_detail", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_success_detail", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "success_detail", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_success_id, uname, success_date, success_detail FROM dbo.staff_succe" +
                "ss";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_successDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_successDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_successDataTable dataTable = new netconceptDataSet.staff_successDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_successDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_success");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_success_id, string Original_uname, string Original_success_date, string Original_success_detail) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_success_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_success_date == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_success_date));
            }
            if ((Original_success_detail == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_success_detail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int staff_success_id, string uname, string success_date, string success_detail) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_success_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((success_date == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(success_date));
            }
            if ((success_detail == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(success_detail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int staff_success_id, string uname, string success_date, string success_detail, int Original_staff_success_id, string Original_uname, string Original_success_date, string Original_success_detail) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_success_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((success_date == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(success_date));
            }
            if ((success_detail == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(success_detail));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_staff_success_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_uname));
            }
            if ((Original_success_date == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_success_date));
            }
            if ((Original_success_detail == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_success_detail));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class staff_trainingTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public staff_trainingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "staff_training";
            tableMapping.ColumnMappings.Add("staff_training_id", "staff_training_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("training_code", "training_code");
            tableMapping.ColumnMappings.Add("training_course", "training_course");
            tableMapping.ColumnMappings.Add("training_startdate", "training_startdate");
            tableMapping.ColumnMappings.Add("training_enddate", "training_enddate");
            tableMapping.ColumnMappings.Add("training_expertname", "training_expertname");
            tableMapping.ColumnMappings.Add("training_institute", "training_institute");
            tableMapping.ColumnMappings.Add("training_result", "training_result");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[staff_training] WHERE (([staff_training_id] = @Original_staff_training_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_training_code = 1 AND [training_code] IS NULL) OR ([training_code] = @Original_training_code)) AND ((@IsNull_training_startdate = 1 AND [training_startdate] IS NULL) OR ([training_startdate] = @Original_training_startdate)) AND ((@IsNull_training_enddate = 1 AND [training_enddate] IS NULL) OR ([training_enddate] = @Original_training_enddate)) AND ((@IsNull_training_expertname = 1 AND [training_expertname] IS NULL) OR ([training_expertname] = @Original_training_expertname)) AND ((@IsNull_training_institute = 1 AND [training_institute] IS NULL) OR ([training_institute] = @Original_training_institute)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_training_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_training_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_code", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_code", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_code", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_code", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_startdate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_enddate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_expertname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_expertname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_expertname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_expertname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_institute", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_institute", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_institute", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_institute", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[staff_training] ([staff_training_id], [uname], [training_code], [training_course], [training_startdate], [training_enddate], [training_expertname], [training_institute], [training_result]) VALUES (@staff_training_id, @uname, @training_code, @training_course, @training_startdate, @training_enddate, @training_expertname, @training_institute, @training_result);
SELECT staff_training_id, uname, training_code, training_course, training_startdate, training_enddate, training_expertname, training_institute, training_result FROM staff_training WHERE (staff_training_id = @staff_training_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_training_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_training_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_code", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_code", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_course", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "training_course", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_startdate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_enddate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_expertname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_expertname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_institute", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_institute", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_result", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "training_result", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[staff_training] SET [staff_training_id] = @staff_training_id, [uname] = @uname, [training_code] = @training_code, [training_course] = @training_course, [training_startdate] = @training_startdate, [training_enddate] = @training_enddate, [training_expertname] = @training_expertname, [training_institute] = @training_institute, [training_result] = @training_result WHERE (([staff_training_id] = @Original_staff_training_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_training_code = 1 AND [training_code] IS NULL) OR ([training_code] = @Original_training_code)) AND ((@IsNull_training_startdate = 1 AND [training_startdate] IS NULL) OR ([training_startdate] = @Original_training_startdate)) AND ((@IsNull_training_enddate = 1 AND [training_enddate] IS NULL) OR ([training_enddate] = @Original_training_enddate)) AND ((@IsNull_training_expertname = 1 AND [training_expertname] IS NULL) OR ([training_expertname] = @Original_training_expertname)) AND ((@IsNull_training_institute = 1 AND [training_institute] IS NULL) OR ([training_institute] = @Original_training_institute)));
SELECT staff_training_id, uname, training_code, training_course, training_startdate, training_enddate, training_expertname, training_institute, training_result FROM staff_training WHERE (staff_training_id = @staff_training_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_training_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_training_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_code", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_code", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_course", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "training_course", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_startdate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_startdate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_enddate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_enddate", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_expertname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_expertname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_institute", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_institute", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@training_result", System.Data.SqlDbType.Text, 0, System.Data.ParameterDirection.Input, 0, 0, "training_result", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_training_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_training_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_code", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_code", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_code", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_code", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_startdate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_startdate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_startdate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_startdate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_enddate", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_enddate", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_enddate", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_enddate", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_expertname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_expertname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_expertname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_expertname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_training_institute", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "training_institute", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_training_institute", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "training_institute", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_training_id, uname, training_code, training_course, training_startda" +
                "te, training_enddate, training_expertname, training_institute, training_result F" +
                "ROM dbo.staff_training";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.staff_trainingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.staff_trainingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.staff_trainingDataTable dataTable = new netconceptDataSet.staff_trainingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.staff_trainingDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "staff_training");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_training_id, string Original_uname, string Original_training_code, string Original_training_startdate, string Original_training_enddate, string Original_training_expertname, string Original_training_institute) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_training_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_training_code == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_training_code));
            }
            if ((Original_training_startdate == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_training_startdate));
            }
            if ((Original_training_enddate == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_training_enddate));
            }
            if ((Original_training_expertname == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_training_expertname));
            }
            if ((Original_training_institute == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_training_institute));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int staff_training_id, string uname, string training_code, string training_course, string training_startdate, string training_enddate, string training_expertname, string training_institute, string training_result) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_training_id));
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((training_code == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(training_code));
            }
            if ((training_course == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(training_course));
            }
            if ((training_startdate == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(training_startdate));
            }
            if ((training_enddate == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(training_enddate));
            }
            if ((training_expertname == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(training_expertname));
            }
            if ((training_institute == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(training_institute));
            }
            if ((training_result == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(training_result));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int staff_training_id, 
                    string uname, 
                    string training_code, 
                    string training_course, 
                    string training_startdate, 
                    string training_enddate, 
                    string training_expertname, 
                    string training_institute, 
                    string training_result, 
                    int Original_staff_training_id, 
                    string Original_uname, 
                    string Original_training_code, 
                    string Original_training_startdate, 
                    string Original_training_enddate, 
                    string Original_training_expertname, 
                    string Original_training_institute) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_training_id));
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(uname));
            }
            if ((training_code == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(training_code));
            }
            if ((training_course == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(training_course));
            }
            if ((training_startdate == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(training_startdate));
            }
            if ((training_enddate == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(training_enddate));
            }
            if ((training_expertname == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(training_expertname));
            }
            if ((training_institute == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(training_institute));
            }
            if ((training_result == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(training_result));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_staff_training_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_uname));
            }
            if ((Original_training_code == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_training_code));
            }
            if ((Original_training_startdate == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_training_startdate));
            }
            if ((Original_training_enddate == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_training_enddate));
            }
            if ((Original_training_expertname == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_training_expertname));
            }
            if ((Original_training_institute == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_training_institute));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sys_companyTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sys_companyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sys_company";
            tableMapping.ColumnMappings.Add("company_id", "company_id");
            tableMapping.ColumnMappings.Add("company_name", "company_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[sys_company] WHERE (([company_id] = @Original_company_id) AND " +
                "((@IsNull_company_name = 1 AND [company_name] IS NULL) OR ([company_name] = @Ori" +
                "ginal_company_name)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[sys_company] ([company_id], [company_name]) VALUES (@company_i" +
                "d, @company_name);\r\nSELECT company_id, company_name FROM sys_company WHERE (comp" +
                "any_id = @company_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[sys_company] SET [company_id] = @company_id, [company_name] = @company_name WHERE (([company_id] = @Original_company_id) AND ((@IsNull_company_name = 1 AND [company_name] IS NULL) OR ([company_name] = @Original_company_name)));
SELECT company_id, company_name FROM sys_company WHERE (company_id = @company_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT company_id, company_name FROM dbo.sys_company";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.sys_companyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.sys_companyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.sys_companyDataTable dataTable = new netconceptDataSet.sys_companyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.sys_companyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "sys_company");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_company_id, string Original_company_name) {
            if ((Original_company_id == null)) {
                throw new System.ArgumentNullException("Original_company_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_company_id));
            }
            if ((Original_company_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_company_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string company_id, string company_name) {
            if ((company_id == null)) {
                throw new System.ArgumentNullException("company_id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(company_id));
            }
            if ((company_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(company_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string company_id, string company_name, string Original_company_id, string Original_company_name) {
            if ((company_id == null)) {
                throw new System.ArgumentNullException("company_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(company_id));
            }
            if ((company_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(company_name));
            }
            if ((Original_company_id == null)) {
                throw new System.ArgumentNullException("Original_company_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_company_id));
            }
            if ((Original_company_name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_company_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sys_departmentTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sys_departmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sys_department";
            tableMapping.ColumnMappings.Add("department_id", "department_id");
            tableMapping.ColumnMappings.Add("department_name", "department_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[sys_department] WHERE (([department_id] = @Original_department" +
                "_id) AND ((@IsNull_department_name = 1 AND [department_name] IS NULL) OR ([depar" +
                "tment_name] = @Original_department_name)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_department_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_department_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "department_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[sys_department] ([department_id], [department_name]) VALUES (@" +
                "department_id, @department_name);\r\nSELECT department_id, department_name FROM sy" +
                "s_department WHERE (department_id = @department_id)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@department_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "department_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[sys_department] SET [department_id] = @department_id, [department_name] = @department_name WHERE (([department_id] = @Original_department_id) AND ((@IsNull_department_name = 1 AND [department_name] IS NULL) OR ([department_name] = @Original_department_name)));
SELECT department_id, department_name FROM sys_department WHERE (department_id = @department_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@department_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "department_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_department_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_department_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "department_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT department_id, department_name FROM dbo.sys_department";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.sys_departmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.sys_departmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.sys_departmentDataTable dataTable = new netconceptDataSet.sys_departmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.sys_departmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "sys_department");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_department_id, string Original_department_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_department_id));
            if ((Original_department_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_department_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int department_id, string department_name) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(department_id));
            if ((department_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(department_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int department_id, string department_name, int Original_department_id, string Original_department_name) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(department_id));
            if ((department_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(department_name));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_department_id));
            if ((Original_department_name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_department_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sys_menuauthorityTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sys_menuauthorityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sys_menuauthority";
            tableMapping.ColumnMappings.Add("sys_menuauthority_id", "sys_menuauthority_id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("menuauthority_group_id", "menuauthority_group_id");
            tableMapping.ColumnMappings.Add("menuauthority_id", "menuauthority_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[sys_menuauthority] WHERE (([sys_menuauthority_id] = @Original_sys_menuauthority_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_menuauthority_group_id = 1 AND [menuauthority_group_id] IS NULL) OR ([menuauthority_group_id] = @Original_menuauthority_group_id)) AND ((@IsNull_menuauthority_id = 1 AND [menuauthority_id] IS NULL) OR ([menuauthority_id] = @Original_menuauthority_id)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_sys_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sys_menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[sys_menuauthority] ([uname], [menuauthority_group_id], [menuauthority_id]) VALUES (@uname, @menuauthority_group_id, @menuauthority_id);
SELECT sys_menuauthority_id, uname, menuauthority_group_id, menuauthority_id FROM sys_menuauthority WHERE (sys_menuauthority_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[sys_menuauthority] SET [uname] = @uname, [menuauthority_group_id] = @menuauthority_group_id, [menuauthority_id] = @menuauthority_id WHERE (([sys_menuauthority_id] = @Original_sys_menuauthority_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_menuauthority_group_id = 1 AND [menuauthority_group_id] IS NULL) OR ([menuauthority_group_id] = @Original_menuauthority_group_id)) AND ((@IsNull_menuauthority_id = 1 AND [menuauthority_id] IS NULL) OR ([menuauthority_id] = @Original_menuauthority_id)));
SELECT sys_menuauthority_id, uname, menuauthority_group_id, menuauthority_id FROM sys_menuauthority WHERE (sys_menuauthority_id = @sys_menuauthority_id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_sys_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sys_menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_group_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_group_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_menuauthority_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "menuauthority_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@sys_menuauthority_id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "sys_menuauthority_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT sys_menuauthority_id, uname, menuauthority_group_id, menuauthority_id FROM" +
                " dbo.sys_menuauthority";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.sys_menuauthorityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.sys_menuauthorityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.sys_menuauthorityDataTable dataTable = new netconceptDataSet.sys_menuauthorityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.sys_menuauthorityDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "sys_menuauthority");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_sys_menuauthority_id, string Original_uname, System.Nullable<int> Original_menuauthority_group_id, System.Nullable<int> Original_menuauthority_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_sys_menuauthority_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_menuauthority_group_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_menuauthority_group_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((Original_menuauthority_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_menuauthority_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, System.Nullable<int> menuauthority_group_id, System.Nullable<int> menuauthority_id) {
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((menuauthority_group_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(menuauthority_group_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((menuauthority_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(menuauthority_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uname, System.Nullable<int> menuauthority_group_id, System.Nullable<int> menuauthority_id, int Original_sys_menuauthority_id, string Original_uname, System.Nullable<int> Original_menuauthority_group_id, System.Nullable<int> Original_menuauthority_id, int sys_menuauthority_id) {
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((menuauthority_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(menuauthority_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((menuauthority_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(menuauthority_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_sys_menuauthority_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_uname));
            }
            if ((Original_menuauthority_group_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_menuauthority_group_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_menuauthority_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_menuauthority_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(sys_menuauthority_id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sys_positionTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sys_positionTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sys_position";
            tableMapping.ColumnMappings.Add("staff_position", "staff_position");
            tableMapping.ColumnMappings.Add("staff_position_name", "staff_position_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[sys_position] WHERE (([staff_position] = @Original_staff_posit" +
                "ion) AND ((@IsNull_staff_position_name = 1 AND [staff_position_name] IS NULL) OR" +
                " ([staff_position_name] = @Original_staff_position_name)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_position_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_position_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[sys_position] ([staff_position], [staff_position_name]) VALUES" +
                " (@staff_position, @staff_position_name);\r\nSELECT staff_position, staff_position" +
                "_name FROM sys_position WHERE (staff_position = @staff_position)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_position_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[sys_position] SET [staff_position] = @staff_position, [staff_position_name] = @staff_position_name WHERE (([staff_position] = @Original_staff_position) AND ((@IsNull_staff_position_name = 1 AND [staff_position_name] IS NULL) OR ([staff_position_name] = @Original_staff_position_name)));
SELECT staff_position, staff_position_name FROM sys_position WHERE (staff_position = @staff_position)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_position_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position_name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_position_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position_name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_position_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position_name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT staff_position, staff_position_name FROM dbo.sys_position";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.sys_positionDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.sys_positionDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.sys_positionDataTable dataTable = new netconceptDataSet.sys_positionDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.sys_positionDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "sys_position");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_staff_position, string Original_staff_position_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_staff_position));
            if ((Original_staff_position_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_staff_position_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int staff_position, string staff_position_name) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(staff_position));
            if ((staff_position_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(staff_position_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int staff_position, string staff_position_name, int Original_staff_position, string Original_staff_position_name) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(staff_position));
            if ((staff_position_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(staff_position_name));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_staff_position));
            if ((Original_staff_position_name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_staff_position_name));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class temp_uname11TableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public temp_uname11TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "temp_uname11";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("staff_nm", "staff_nm");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[temp_uname11] WHERE (([id] = @Original_id) AND ((@IsNull_uname" +
                " = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_nm" +
                " = 1 AND [staff_nm] IS NULL) OR ([staff_nm] = @Original_staff_nm)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_nm", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_nm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[temp_uname11] ([uname], [staff_nm]) VALUES (@uname, @staff_nm)" +
                ";\r\nSELECT id, uname, staff_nm FROM temp_uname11 WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_nm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[temp_uname11] SET [uname] = @uname, [staff_nm] = @staff_nm WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_staff_nm = 1 AND [staff_nm] IS NULL) OR ([staff_nm] = @Original_staff_nm)));
SELECT id, uname, staff_nm FROM temp_uname11 WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_nm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_nm", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_nm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, uname, staff_nm FROM dbo.temp_uname11";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.temp_uname11DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.temp_uname11DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.temp_uname11DataTable dataTable = new netconceptDataSet.temp_uname11DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.temp_uname11DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "temp_uname11");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_uname, string Original_staff_nm) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_staff_nm == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_staff_nm));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string staff_nm) {
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((staff_nm == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(staff_nm));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string uname, string staff_nm, int Original_id, string Original_uname, string Original_staff_nm, int id) {
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((staff_nm == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(staff_nm));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_uname));
            }
            if ((Original_staff_nm == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_staff_nm));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class temp_uname12TableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public temp_uname12TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "temp_uname12";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("uname", "uname");
            tableMapping.ColumnMappings.Add("prefix", "prefix");
            tableMapping.ColumnMappings.Add("staff_nm", "staff_nm");
            tableMapping.ColumnMappings.Add("staff_sm", "staff_sm");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("company_id", "company_id");
            tableMapping.ColumnMappings.Add("department_id", "department_id");
            tableMapping.ColumnMappings.Add("staff_position", "staff_position");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[temp_uname12] WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_prefix = 1 AND [prefix] IS NULL) OR ([prefix] = @Original_prefix)) AND ((@IsNull_staff_nm = 1 AND [staff_nm] IS NULL) OR ([staff_nm] = @Original_staff_nm)) AND ((@IsNull_staff_sm = 1 AND [staff_sm] IS NULL) OR ([staff_sm] = @Original_staff_sm)) AND ((@IsNull_status = 1 AND [status] IS NULL) OR ([status] = @Original_status)) AND ((@IsNull_company_id = 1 AND [company_id] IS NULL) OR ([company_id] = @Original_company_id)) AND ((@IsNull_department_id = 1 AND [department_id] IS NULL) OR ([department_id] = @Original_department_id)) AND ((@IsNull_staff_position = 1 AND [staff_position] IS NULL) OR ([staff_position] = @Original_staff_position)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_prefix", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "prefix", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_prefix", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "prefix", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_nm", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_nm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_sm", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_sm", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_sm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_sm", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_department_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_position", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[temp_uname12] ([uname], [prefix], [staff_nm], [staff_sm], [status], [company_id], [department_id], [staff_position]) VALUES (@uname, @prefix, @staff_nm, @staff_sm, @status, @company_id, @department_id, @staff_position);
SELECT id, uname, prefix, staff_nm, staff_sm, status, company_id, department_id, staff_position FROM temp_uname12 WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@prefix", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "prefix", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_nm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_sm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_sm", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@department_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_position", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[temp_uname12] SET [uname] = @uname, [prefix] = @prefix, [staff_nm] = @staff_nm, [staff_sm] = @staff_sm, [status] = @status, [company_id] = @company_id, [department_id] = @department_id, [staff_position] = @staff_position WHERE (([id] = @Original_id) AND ((@IsNull_uname = 1 AND [uname] IS NULL) OR ([uname] = @Original_uname)) AND ((@IsNull_prefix = 1 AND [prefix] IS NULL) OR ([prefix] = @Original_prefix)) AND ((@IsNull_staff_nm = 1 AND [staff_nm] IS NULL) OR ([staff_nm] = @Original_staff_nm)) AND ((@IsNull_staff_sm = 1 AND [staff_sm] IS NULL) OR ([staff_sm] = @Original_staff_sm)) AND ((@IsNull_status = 1 AND [status] IS NULL) OR ([status] = @Original_status)) AND ((@IsNull_company_id = 1 AND [company_id] IS NULL) OR ([company_id] = @Original_company_id)) AND ((@IsNull_department_id = 1 AND [department_id] IS NULL) OR ([department_id] = @Original_department_id)) AND ((@IsNull_staff_position = 1 AND [staff_position] IS NULL) OR ([staff_position] = @Original_staff_position)));
SELECT id, uname, prefix, staff_nm, staff_sm, status, company_id, department_id, staff_position FROM temp_uname12 WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@prefix", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "prefix", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_nm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_sm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_sm", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@department_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@staff_position", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_uname", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_uname", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "uname", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_prefix", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "prefix", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_prefix", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "prefix", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_nm", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_nm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_nm", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_sm", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_sm", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_sm", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_sm", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_status", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_status", System.Data.SqlDbType.Bit, 0, System.Data.ParameterDirection.Input, 0, 0, "status", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_company_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_company_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "company_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_department_id", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_department_id", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "department_id", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_staff_position", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_staff_position", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "staff_position", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@id", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "id", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, uname, prefix, staff_nm, staff_sm, status, company_id, department_id, " +
                "staff_position FROM dbo.temp_uname12";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.temp_uname12DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.temp_uname12DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.temp_uname12DataTable dataTable = new netconceptDataSet.temp_uname12DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.temp_uname12DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "temp_uname12");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, string Original_uname, string Original_prefix, string Original_staff_nm, string Original_staff_sm, System.Nullable<bool> Original_status, string Original_company_id, string Original_department_id, string Original_staff_position) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_uname));
            }
            if ((Original_prefix == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_prefix));
            }
            if ((Original_staff_nm == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_staff_nm));
            }
            if ((Original_staff_sm == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_staff_sm));
            }
            if ((Original_status.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_status.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_company_id == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_company_id));
            }
            if ((Original_department_id == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_department_id));
            }
            if ((Original_staff_position == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_staff_position));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uname, string prefix, string staff_nm, string staff_sm, System.Nullable<bool> status, string company_id, string department_id, string staff_position) {
            if ((uname == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((prefix == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(prefix));
            }
            if ((staff_nm == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(staff_nm));
            }
            if ((staff_sm == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(staff_sm));
            }
            if ((status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((company_id == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(company_id));
            }
            if ((department_id == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(department_id));
            }
            if ((staff_position == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(staff_position));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uname, 
                    string prefix, 
                    string staff_nm, 
                    string staff_sm, 
                    System.Nullable<bool> status, 
                    string company_id, 
                    string department_id, 
                    string staff_position, 
                    int Original_id, 
                    string Original_uname, 
                    string Original_prefix, 
                    string Original_staff_nm, 
                    string Original_staff_sm, 
                    System.Nullable<bool> Original_status, 
                    string Original_company_id, 
                    string Original_department_id, 
                    string Original_staff_position, 
                    int id) {
            if ((uname == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uname));
            }
            if ((prefix == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(prefix));
            }
            if ((staff_nm == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(staff_nm));
            }
            if ((staff_sm == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(staff_sm));
            }
            if ((status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((company_id == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(company_id));
            }
            if ((department_id == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(department_id));
            }
            if ((staff_position == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(staff_position));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_id));
            if ((Original_uname == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_uname));
            }
            if ((Original_prefix == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_prefix));
            }
            if ((Original_staff_nm == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_staff_nm));
            }
            if ((Original_staff_sm == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_staff_sm));
            }
            if ((Original_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Original_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_company_id == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_company_id));
            }
            if ((Original_department_id == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_department_id));
            }
            if ((Original_staff_position == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_staff_position));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(id));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tempTSHTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tempTSHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tempTSH";
            tableMapping.ColumnMappings.Add("unameold", "unameold");
            tableMapping.ColumnMappings.Add("unamenew", "unamenew");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tempTSH] ([unameold], [unamenew]) VALUES (@unameold, @unamenew" +
                ")";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@unameold", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "unameold", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@unamenew", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "unamenew", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ThaHr30.Properties.Settings.Default.netconceptConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT unameold, unamenew FROM dbo.tempTSH";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(netconceptDataSet.tempTSHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual netconceptDataSet.tempTSHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            netconceptDataSet.tempTSHDataTable dataTable = new netconceptDataSet.tempTSHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet.tempTSHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(netconceptDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tempTSH");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string unameold, string unamenew) {
            if ((unameold == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(unameold));
            }
            if ((unamenew == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(unamenew));
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591